{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dto/NewInstrumentRq.ts","webpack:///./src/app/dto/salary.ts","webpack:///./src/app/dto/searchwishes.ts","webpack:///./src/app/dto/user.ts","webpack:///./src/app/dto/wish.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/basicauthhtppInterceptorservice.ts","webpack:///./src/app/service/common.service.ts","webpack:///./src/app/service/http.service.ts","webpack:///./src/app/service/message.code.ts","webpack:///./src/app/ui/layout/edit/edit.component.css","webpack:///./src/app/ui/layout/edit/edit.component.html","webpack:///./src/app/ui/layout/edit/edit.component.ts","webpack:///./src/app/ui/layout/header/header.component.html","webpack:///./src/app/ui/layout/header/header.component.ts","webpack:///./src/app/ui/layout/investing/investing.component.html","webpack:///./src/app/ui/layout/investing/investing.component.ts","webpack:///./src/app/ui/layout/layout.component.html","webpack:///./src/app/ui/layout/layout.component.ts","webpack:///./src/app/ui/layout/main/main.component.css","webpack:///./src/app/ui/layout/main/main.component.html","webpack:///./src/app/ui/layout/main/main.component.ts","webpack:///./src/app/ui/layout/session-timeout-modal/session-timeout-modal.component.css","webpack:///./src/app/ui/layout/session-timeout-modal/session-timeout-modal.component.html","webpack:///./src/app/ui/layout/session-timeout-modal/session-timeout-modal.component.ts","webpack:///./src/app/ui/layout/sidebar/sidebar.component.ts","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.css","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.html","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;ACpSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;ACZuC;AACM;AACQ;AACU;AACP;AAC4B;AACN;AACF;AAE5E,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAa;QACxB,WAAW,EAAE,CAAC,4EAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,iGAAoB;KAChC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2FAAkB;KAC9B;IACD;uCACmC;CACpC,CAAC;AAaF;IAAA;IACA,CAAC;IADY,gBAAgB;QAX5B,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,uEAAa;gBACb,4DAAY;aACb;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;ACtC7B,+DAA+D,+H;;;;;;;;;;;ACA/D,gFAAgF,OAAO,uB;;;;;;;;;;;;;;;;;ACA7C;AAU1C;IANA;QAOE,UAAK,GAAG,QAAQ,CAAC;IACnB,CAAC;IAFY,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;YAEnC,SAAS,EAAE,EAAE;;SACd,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACM;AACL;AACqC;AACV;AACf;AACQ;AACX;AAiBnD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,kFAAiB;gBACjB,qEAAgB;gBAChB,sDAAQ;aACT;YACD,SAAS,EAAE,CAAC,4EAAgB,EAAE,iEAAW,CAAC;YAC1C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACxBtB;AAAA;AAAA;IAGE,yBAAY,MAAc,EAAE,MAAe,EAAE,QAAgB,EAAE,KAAa,EAAE,GAAW,EAAE,YAAoB;QAC7G,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAQH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;IAEE,gBAAY,UAAkB,EAAE,cAAsB;QACpD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAIH,aAAC;AAAD,CAAC;;;;;;;;;;;;;;ACTD;AAAA;AAAA;IAEE,kBAAY,QAAgB;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAGH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IACG;IAAe,CAAC;IAWnB,WAAC;AAAD,CAAC;;;;;;;;;;;;;;ACZD;AAAA;AAAA;IAEE,cAAY,EAAU,EAAE,IAAY,EAAE,KAAa,EAAE,QAAgB,EAAE,OAAgB,EAC3E,WAAmB,EAAE,GAAW,EAAE,QAAiB;QAC7D,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAYH,WAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;ACxBwC;AACW;AACT;AAI3C;IAGE,0BAAmB,IAAiB,EAAS,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE/D,sCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;YACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAZU,gBAAgB;QAD5B,gEAAU,EAAE;+EAIc,yDAAW,EAAiB,sDAAM;OAHhD,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA;AAhB4B;;;;;;;;;;;;;;;;;;;;;ACNY;AACkC;AAEvB;AACO;AAG3D,IAAM,MAAM,GAAG,IAAI,mEAAgB,EAAE,CAAC;AACtC,IAAI,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/C,IAAM,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;AACpD,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AAIlD;IAME,qBAAoB,IAAgB,EAAS,SAA2B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAS,cAAS,GAAT,SAAS,CAAkB;QAJxE,eAAU,GAAW,qEAAW,CAAC,SAAS,CAAC;QAC3C,aAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAIvC,CAAC;IAGM,2BAAK,GAAZ,UAAa,YAAY;QAEvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,YAAY,CAAC,CAAC;QAE9C,IAAM,OAAO,GAAG;YACd,cAAc,EAAE,mCAAmC;SACpD,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,QAAQ,GAAG,YAAY,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAClG,CAAC;IAEM,8BAAQ,GAAf,UAAgB,OAAa,EAAE,GAAW;QAExC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC;IAEM,qCAAe,GAAtB;QACE,OAAO,CAAC,SAAS,CAAC;IACpB,CAAC;IAEM,kCAAY,GAAnB;QACE,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC3C,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAC9C,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,SAAS,CAAC,CAAC;IAC7C,CAAC;IAxCU,WAAW;QADvB,gEAAU,EAAE;+EAOe,+DAAU,EAAoB,mEAAgB;OAN7D,WAAW,CAyCvB;IAAD,kBAAC;CAAA;AAzCuB;;;;;;;;;;;;;;;;;;ACdiB;AAKzC;IACE;IACA,CAAC;IAED,mDAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAEhD,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9C,iCAAiC;QACjC,IAAI,OAAO,EAAE;YACX,IAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;gBACvB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC;aACnD,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SAC5B;aAAM;YACL,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;IACH,CAAC;IAhBU,+BAA+B;QAD3C,gEAAU,EAAE;;OACA,+BAA+B,CAiB3C;IAAD,sCAAC;CAAA;AAjB2C;;;;;;;;;;;;;;;;;;;;;ACLH;AACQ;AAEX;AAMtC;IAOE;QAHQ,mBAAc,GAAiC,IAAI,oDAAe,CAAc,IAAI,CAAC,KAAK,CAAC,CAAC;QACpG,WAAM,GAA4B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAGrE,CAAC;IAGD,iCAAS,GAAT,UAAU,KAAkB;QAC1B,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,+BAAO,GAAP,UAAQ,IAAI,EAAE,KAAK;QACjB,IAAM,GAAG,GAAG,6CAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAM,EAAE,GAAG,6CAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzC,IAAM,SAAS,GAAG,6CAAY,CAAC,OAAO,CAAC,6CAAY,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,EACnF;YACE,OAAO,EAAE,GAAG,GAAG,CAAC;YAChB,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,8CAAa,CAAC,GAAG;YACvB,OAAO,EAAE,6CAAY,CAAC,KAAK;SAC5B,CAAC,CAAC;QAEL,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAGD,mCAAW,GAAX,UAAY,UAAkB,EAAE,IAAY,EAAE,GAAW;QACvD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC5B,OAAO,6CAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;SACnE;aAAM;YACH,OAAO,6CAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,6CAAY,CAAC,IAAI,CAAC,CAAC;SAElF;IACH,CAAC;IAGH,+CAA+C;IAC7C,+BAAO,GAAP,UAAQ,IAAI,EAAE,KAAK;QACjB,IAAI,GAAG,GAAG,6CAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;QAC5B,IAAI,EAAE,GAAG,6CAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QAC1B,IAAI,SAAS,GAAG,6CAAY,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE;YAC/C,OAAO,EAAE,GAAG,GAAG,CAAC;YAChB,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,8CAAa,CAAC,GAAG;YACvB,OAAO,EAAE,6CAAY,CAAC,KAAK;SAC5B,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC;QAEnC,OAAO,SAAS,CAAC,QAAQ,CAAC,6CAAY,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAzDU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CA6DzB;IAAD,oBAAC;CAAA;AA7DyB;;;;;;;;;;;;;;;;;;;;ACTe;AACkC;AAKhB;AAO3D;IAOE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,eAAU,GAAW,qEAAW,CAAC,SAAS,CAAC;QAC3C,aAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QACvC,oBAAe,GAAG,IAAI,CAAC,UAAU,GAAG,+BAA+B,CAAC;IAIpE,CAAC;IAEM,6BAAO,GAAd,UAAe,GAAW;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAEM,kCAAY,GAAnB,UAAoB,OAAiB,EAAE,GAAW;QAChD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC;IAEM,8BAAQ,GAAf,UAAgB,IAAU,EAAE,GAAW;QACrC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACtD,CAAC;IAEM,mCAAa,GAApB,UAAqB,UAA2B,EAAE,GAAW;QAC3D,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,GAAG,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;IAC5D,CAAC;IAEM,sCAAgB,GAAvB,UAAwB,MAAc,EAAE,GAAW;QAEjD,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,UAAU,GAAG,MAAM,EAAE,WAAW,CAAC,CAAC;IAClE,CAAC;IAEM,8BAAQ,GAAf,UAAgB,QAAkB,EAAE,GAAW;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAEM,gCAAU,GAAjB,UAAkB,MAAc,EAAE,GAAW;QAE3C,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,GAAG,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IAC1D,CAAC;IAEM,gCAAU,GAAjB,UAAkB,IAAU,EAAE,GAAW;QAEvC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACrD,CAAC;IAEM,gCAAU,GAAjB,UAAkB,EAAU,EAAE,GAAW;QAEvC,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;IACvD,CAAC;IAGM,2BAAK,GAAZ,UAAa,YAAY;QAEvB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,YAAY,CAAC,CAAC;QAE9C,IAAM,OAAO,GAAG;YACd,cAAc,EAAE,mCAAmC;SACpD,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,QAAQ,GAAG,YAAY,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAClG,CAAC;IAEM,kCAAY,GAAnB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAEM,oCAAc,GAArB,UAAsB,IAAU,EAAE,GAAW;QAE3C,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACrD,CAAC;IApHU,WAAW;QADvB,gEAAU,EAAE;+EAQe,+DAAU;OAPzB,WAAW,CAqHvB;IAAD,kBAAC;CAAA;AArHuB;;;;;;;;;;;;;ACbxB;AAAA;AAAA;IAAA;QAGA,sDAAsD;QACtD,sDAAsD;QACtD,sDAAsD;QAEpD,gBAAW,GAAG,qDAAqD,CAAC;QACpE,mBAAc,GAAG,qBAAqB,CAAC;QACvC,gCAA2B,GAAG,wEAAwE,CAAC;QACvG,sCAAiC,GAAG,kDAAkD,CAAC;QACvF,uBAAkB,GAAG,iEAAiE,CAAC;QACvF,oBAAe,GAAG,sBAAsB,CAAC;QAG3C,sDAAsD;QACtD,sDAAsD;QACtD,sDAAsD;QAEpD,gBAAW,GAAG,QAAQ,CAAC;QACvB,kBAAa,GAAG,OAAO,CAAC;QACxB,wBAAmB,GAAG,2CAA2C,CAAC;QAClE,gBAAW,GAAG,uCAAuC,CAAC;IAExD,CAAC;IAAD,kBAAC;AAAD,CAAC;;;;;;;;;;;;;ACxBD,+DAA+D,mJ;;;;;;;;;;;ACA/D,6C;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,gCAAQ,GAAR;IACA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0GAAoC;;SAErC,CAAC;;OACW,aAAa,CAOzB;IAAD,oBAAC;CAAA;AAPyB;;;;;;;;;;;;ACP1B,06BAA06B,MAAM,gsM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh4B;AACkB;AACnB;AACC;AACU;AACnB;AACuB;AACJ;AACnB;AACmB;AACnB;AAC0B;AAUjE;IA2DE,yBAAoB,aAA4B,EAAU,WAAwB,EAAU,WAAwB,EAChG,EAAe,EAAS,MAAc;QADtC,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAChG,OAAE,GAAF,EAAE,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAzD1D,gFAAgF;QAEhF,eAAU,GAAW,sEAAW,CAAC,SAAS,CAAC;QAE3C,cAAS,GAAG,EAAE,CAAC;QACf,cAAS,GAAG,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;QAC7C,eAAU,GAAG,mCAAmC,CAAC;QACjD,aAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,yBAAyB;QAG/D,YAAO,GAAG,KAAK,CAAC,CAAC,sCAAsC;QACvD,eAAU,GAAG,KAAK,CAAC,CAAC,qCAAqC;QAEzD,mBAAc,GAAG,KAAK,CAAC,CAAC,+CAA+C;QAGvE,cAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;iBACpB,CAAC;YACF,QAAQ,EAAE,CAAC,EAAE,EAAE;oBACb,yDAAU,CAAC,QAAQ;iBACpB,CAAC;SACH,CAAC,CAAC;QAEH,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC;iBACrC,CAAC;YACF,QAAQ,EAAE,CAAC,EAAE,EAAE;oBACb,yDAAU,CAAC,QAAQ;iBACpB,CAAC;YACF,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;iBACtE,CAAC;YACF,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACnB,CAAC,CAAC;QAEH,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,SAAS,EAAE,CAAC,EAAE,EAAE;oBACd,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC;iBACrC,CAAC;YACF,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAEtB,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC;YACxB,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB,CAAC;YACF,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YAClB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;IAIH,CAAC;IAED,kCAAQ,GAAR;QAAA,iBA4BD;QA1BG,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,IAAI,+CAAI,EAAE,CAAC;QAEvB,IAAI,OAAO,EAAE;YACX,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,EAAE;gBACtC,IAAI,CAAC,iBAAiB,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;aACtD;iBAAM;gBACL,IAAI,CAAC,iBAAiB,GAAG,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;aAC1D;SAEF;aAAM;YACL,IAAI,CAAC,iBAAiB,GAAG,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAC3D,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;YAClC,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,KAAI,CAAC,cAAc,CAAC,WAAW,KAAK,KAAI,CAAC,cAAc,CAAC,eAAe,EAAE;oBAC3E,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC;oBACjC,KAAI,CAAC,iBAAiB,GAAG,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;iBAC1D;aACF;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,wCAAc,GAAd;QACE,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAErC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,QAAQ,EAAE,EAAE;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAE9B,CAAC;IAED,sCAAY,GAAZ;QAAA,iBA+BC;QA7BC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CAClC,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,iDAAiD,CAAC,CAAC;QACnF,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YAEd,KAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YACvB,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACzB,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACnC,KAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC/C,KAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAC3C,KAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEnC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBAC3B,SAAS,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK;gBAC1B,YAAY,EAAE,KAAI,CAAC,IAAI,CAAC,GAAG;gBAC3B,WAAW,EAAE,KAAI,CAAC,IAAI,CAAC,cAAc;gBACrC,KAAK,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK;gBACtB,QAAQ,EAAE,KAAI,CAAC,IAAI,CAAC,QAAQ;aAC7B,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;gBACjC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBAC3B,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAgB,GAAhB,UAAiB,IAEX;QAEJ,IAAI,IAAI,KAAK,OAAO,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAM,IAAI,IAAI,KAAK,OAAO,EAAE;YAC3B,IAAI,CAAC,iBAAiB,GAAG,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;YACzD,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;SAC/B;aAAM,IAAI,IAAI,KAAK,oBAAoB,EAAE;YACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;aAAM,IAAI,IAAI,KAAK,gBAAgB,EAAE;YACpC,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBAC3B,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE;aAC7B,CAAC,CAAC;SAEJ;IACH,CAAC;IAED,sCAAY,GAAZ,UAAa,GAAG,EAAE,OAEZ;QAGJ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,0BAA0B;QAEnD,IAAM,SAAS,GAAG,IAAI,iEAAW,EAAE,CAAC;QACpC,IAAI,OAAO,KAAK,YAAY,EAAE;YAC5B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,GAAG,CAAC,KAAK,KAAK,iBAAiB,EAAE;gBACnC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAC;aACnE;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;aAC7D;SACF;QACD,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAGD,wCAAc,GAAd;QAAA,iBAoCC;QAlCC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;eACtD,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;eACnD,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE;YAE9D,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;YAExC,IAAM,WAAW,GAAG,IAAI,iEAAW,EAAE,CAAC;YACtC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;YACtD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACpE,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SAE3E;aAAM;YAEL,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC;YAC/D,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;YAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;YAEtD,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAE1C,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CACjF,iEAAU,CAAC,aAAG;gBACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8DAA8D,CAAC,CAAC;YAChG,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;gBAEd,IAAM,WAAW,GAAG,IAAI,iEAAW,EAAE,CAAC;gBACtC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;gBACtD,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACpE,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC5E,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,yCAAe,GAAf,UAAgB,OAEV;QAEJ,IAAM,SAAS,GAAG,IAAI,iEAAW,EAAE,CAAC;QAEpC,SAAS,CAAC,WAAW,GAAG,OAAO,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAmBC;QAjBC,IAAM,OAAO,GAAG,IAAI,+CAAI,EAAE,CAAC;QAC3B,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;QAC9C,OAAO,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC/C,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC;QACpD,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC;QAC9C,OAAO,CAAC,cAAc,GAAG,KAAK,CAAC;QAC/B,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC;QAE1B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CACpD,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;QACjD,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,aAAG;YACb,IAAM,WAAW,GAAG,IAAI,iEAAW,EAAE,CAAC;YACtC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAC9C,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,mCAAS,GAAT;QAAA,iBA2BC;QAzBC,IAAM,IAAI,GAAG,IAAI,+DAAU,EAAE;aAC1B,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;aAC3C,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAElD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACpC,IAAI,CACH,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;aACJ,IAAI,CACH,0DAAG,CAAC,cAAI;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;YACzD,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACtD,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,KAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;YAEhC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3B,KAAI,CAAC,iBAAiB,GAAG,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;YACrD,IAAM,OAAO,GAAG,IAAI,iEAAW,EAAE,CAAC;YAClC,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IA3RY,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,gHAAoC;YACpC,SAAS,EAAE,CAAC,iEAAW,EAAE,kEAAW,CAAC;SAEtC,CAAC;+EA4DmC,qEAAa,EAAuB,iEAAW,EAAuB,kEAAW;YAC5F,0DAAW,EAAiB,sDAAM;OA5D/C,eAAe,CA4R3B;IAAD,sBAAC;CAAA;AA5R2B;;;;;;;;;;;;ACrB5B,iOAAiO,QAAQ,wMAAwM,OAAO,sqBAAsqB,oBAAoB,i0BAAi0B,MAAM,sTAAsT,MAAM,42BAA42B,MAAM,sjBAAsjB,MAAM,0aAA0a,MAAM,wnBAAwnB,MAAM,6YAA6Y,MAAM,8aAA8a,MAAM,+VAA+V,MAAM,ueAAue,cAAc,kGAAkG,cAAc,8LAA8L,cAAc,oGAAoG,cAAc,4HAA4H,cAAc,wJAAwJ,cAAc,4HAA4H,cAAc,6NAA6N,aAAa,wGAAwG,WAAW,kFAAkF,WAAW,8CAA8C,kBAAkB,uCAAuC,uBAAuB,uCAAuC,wBAAwB,uCAAuC,oBAAoB,uCAAuC,mBAAmB,uCAAuC,aAAa,uCAAuC,iBAAiB,6DAA6D,yGAAyG,o7BAAo7B,0BAA0B,IAAI,yBAAyB,yaAAya,uGAAuG,i7BAAi7B,yBAAyB,IAAI,oBAAoB,muDAAmuD,gBAAgB,6CAA6C,qBAAqB,6CAA6C,cAAc,6CAA6C,uBAAuB,yiFAAyiF,oBAAoB,ubAAub,2BAA2B,6CAA6C,eAAe,6CAA6C,oBAAoB,40BAA40B,kBAAkB,iDAAiD,sBAAsB,iDAAiD,uBAAuB,iDAAiD,qBAAqB,iDAAiD,aAAa,gqBAAgqB,sCAAsC,iDAAiD,wCAAwC,iDAAiD,uCAAuC,iDAAiD,0CAA0C,iDAAiD,yCAAyC,keAAke,wBAAwB,uHAAuH,yBAAyB,0GAA0G,cAAc,+DAA+D,2BAA2B,qCAAqC,kBAAkB,sHAAsH,YAAY,8FAA8F,YAAY,2L;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj+lB;AAEU;AACI;AACf;AACR;AACG;AACgB;AACO;AAEV;AAGM;AAC5B;AAWjC;IA8DE,4BAAoB,aAA4B,EAAU,KAAqB,EAAU,WAAwB,EAC7F,EAAe;QADf,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAC7F,OAAE,GAAF,EAAE,CAAa;QA7DnC,mFAAmF;QAEnF,eAAU,GAAW,qEAAW,CAAC,SAAS,CAAC;QAC3C,aAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QAC1C,kBAAa,GAAG,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC,CAAC,aAAa;QAC9D,iCAA4B,GAAG,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,CAAC,aAAa;QACrF,4BAAuB,GAAG,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,CAAC,aAAa;QAC9E,yBAAoB,GAAG,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,oBAAoB;QACtE,oCAA+B,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,yBAAyB;QACrF,qCAAgC,GAAG,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC,CAAC,yBAAyB;QAC9F,gBAAW,GAAG,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,CAAC,SAAS;QACnD,aAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC,YAAY;QAEpD,mFAAmF;QAEnF,UAAK,GAAW,EAAE,CAAC,CAAC,kBAAkB;QAEtC,SAAI,GAAe,EAAE,CAAC,CAAC,YAAY;QAEnC,gBAAW,GAAsB,EAAE,CAAC;QAiBpC,oFAAoF;QACpF,sBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACX,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;iBAC1B,CAAC;YACF,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB,CAAC;YACF,GAAG,EAAE,CAAC,EAAE,EAAE;oBACR,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxB,CAAC;YACF,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACtB,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC;SACpB,CAAC,CAAC;QAEH,sFAAsF;QAEtF,6BAAwB,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAClD,qBAAgB,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,UAAU;QAC/C,cAAS,GAAG,CAAC,6BAA6B,EAAE,0BAA0B,CAAC,CAAC;IAIxE,CAAC;IAED,qCAAQ,GAAR;QAAA,iBA4BC;QA3BC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YACrC,IAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAC3D,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,KAAI,CAAC,WAAW,GAAG,IAAI,iEAAW,EAAE,CAAC;gBACrC,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC;aAC5C;iBAAM;gBACL,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE;oBACnE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;iBACzB;qBAAM,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE;oBACxE,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC;oBAC3C,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;wBACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,eAAe,EAAE;wBACrE,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;wBAC/B,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;4BACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBACpB,CAAC,CAAC,CAAC;qBACJ;iBACF;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,8CAAiB,GAAjB,UAAkB,KAAU;QAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;IACL,CAAC;IAED,6CAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC7D,CAAC;IAED;;;;OAIG;IACH,mDAAsB,GAAtB,UAAuB,KAAU;QAAjC,iBA2BC;QA1BC,IAAI,WAAmB,CAAC;QACxB,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,WAAW,GAAG,oCAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;SAChD;aAAM;YACL,WAAW,GAAG,oCAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACxC,IAAI,WAAW,IAAI,IAAI,EAAE;gBACvB,WAAW,GAAG,oCAAM,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;aAChD;YACD,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAE/E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,gCAAgC;kBAC1D,UAAU;kBACV,IAAI,CAAC,kBAAkB,CAAC,MAAM;kBAC9B,gBAAgB;kBAChB,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CACxC,iEAAU,CAAC,aAAG;gBACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,2CAA2C,CAAC,CAAC;YAC7E,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;gBACd,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gBAC1F,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;oBAChC,KAAK,EAAE,KAAI,CAAC,YAAY,CAAC,YAAY;iBACtC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;OAGG;IACH,mEAAsC,GAAtC,UAAuC,WAAmB;QAExD,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;YACzC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;SAC3C;IACH,CAAC;IAED;;;;;;OAMG;IACH,sCAAS,GAAT,UAAU,IAAY,EAAE,IAAY,EAAE,MAAW;QAAjD,iBAcC;QAZC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAC1C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;QAE5C,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD;;;;OAIG;IACH,0CAAa,GAAb;QAAA,iBAsCC;QApCC,IAAI,OAAwB,CAAC;QAC7B,IAAM,gBAAgB,GAAG,YAAY,CAAC;QACtC,IAAI,WAAmB,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,EAAE;YAC9C,WAAW,GAAG,oCAAM,CAAC,IAAI,IAAI,EAAE,EAAE,gBAAgB,CAAC,CAAC;SACpD;aAAM;YACL,WAAW,GAAG,oCAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;SACnF;QACD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QAE9E,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EAAE;YACvC,OAAO,GAAG,IAAI,qEAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EAC/D,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EACnC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAC5B,IAAI,EACJ,IAAI,EACJ,IAAI,CACL,CAAC;SACH;aAAM;YACL,OAAO,GAAG,IAAI,qEAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EAC/D,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,EACnC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAC5B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAClC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,EAChC,WAAW,CAAC,MAAM,CAAC,YAAY,CAAC,CACjC,CAAC;SACH;QAED,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CACzD,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;QAC/D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,SAAS,CAAC,8BAA8B,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;YACjE,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,kDAAqB,GAArB,UAAsB,OAAe;QAArC,iBAeC;QAbC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,+BAA+B,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC,IAAI,CACxF,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,2CAA2C,CAAC,CAAC;QAC7E,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YACvE,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;gBAChC,MAAM,EAAE,KAAI,CAAC,YAAY,CAAC,MAAM;gBAChC,KAAK,EAAE,KAAI,CAAC,YAAY,CAAC,YAAY;gBACrC,GAAG,EAAE,KAAI,CAAC,YAAY,CAAC,MAAM;aAC9B,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,4CAAe,GAAf,UAAgB,OAAe;QAA/B,iBAUC;QARC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,GAAG,WAAW,GAAG,OAAO,CAAC,CAAC,IAAI,CAC9E,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,0BAA0B,CAAC,CAAC;QAC5D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IACvB,qCAAQ,GAAR,UAAS,GAAW;QAApB,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAChC,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;QAC/D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,oDAAuB,GAAvB;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAGD;;;;OAIG;IACH,wCAAW,GAAX,UAAY,GAAW;QAAvB,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAChC,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,gCAAgC,CAAC,CAAC;QAClE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,uCAAU,GAAV,UAAW,GAAW;QAAtB,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAChC,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;QAC/D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD;;;;OAIG;IACH,6CAAgB,GAAhB,UAAiB,IAAY;QAE3B,QAAQ,IAAI,EAAE;YACZ,KAAK,OAAO,CAAC,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,GAAG,YAAY,CAAC,CAAC;gBAChE,MAAM;aACP;YACD,KAAK,WAAW,CAAC,CAAC;gBAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,GAAG,WAAW,CAAC,CAAC;gBAC/D,MAAM;aACP;YACD,KAAK,MAAM,CAAC,CAAC;gBACX,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,GAAG,aAAa,CAAC,CAAC;gBACjE,MAAM;aACP;YACD,KAAK,MAAM,CAAC,CAAC;gBACX,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,GAAG,aAAa,CAAC,CAAC;gBACjE,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,GAAG,MAAM,CAAC,CAAC;gBAC1D,MAAM;aACP;SACF;IACH,CAAC;IAED;;;;OAIG;IACH,yCAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,GAAG,MAAM,CAAC,CAAC;IAC5D,CAAC;IAED;;;;OAIG;IACH,uCAAU,GAAV;QAAA,iBASC;QAPC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC9E,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC;QAC9D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,yCAAY,GAAZ,UAAa,GAAG,EAAE,OAAe;QAAjC,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED;;;;;OAKG;IACH,uCAAU,GAAV,UAAW,IAAY,EAAE,IAAY;QACnC,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ,CAAC,CAAC;gBACb,IAAM,CAAC,GAAG,IAAI,KAAK,6BAA6B,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC;gBAChF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;gBAChD,MAAM;aACP;YACD,KAAK,SAAS,CAAC,CAAC;gBACd,IAAM,CAAC,GAAG,IAAI,KAAK,6BAA6B,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,CAAC;gBAClF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;gBAChD,MAAM;aACP;YACD,KAAK,WAAW,CAAC,CAAC;gBAChB,IAAM,CAAC,GAAG,IAAI,KAAK,6BAA6B,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBACtF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;gBAChD,MAAM;aACP;YACD,KAAK,WAAW,CAAC,CAAC;gBAChB,IAAM,CAAC,GAAG,IAAI,KAAK,6BAA6B,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,gBAAgB,CAAC;gBACtF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;gBAChD,MAAM;aACP;YACD,KAAK,aAAa,CAAC,CAAC;gBAClB,IAAM,CAAC,GAAG,IAAI,KAAK,6BAA6B,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,kBAAkB,CAAC;gBAC1F,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;gBAChD,MAAM;aACP;YACD,KAAK,YAAY,CAAC,CAAC;gBACjB,IAAM,CAAC,GAAG,IAAI,KAAK,6BAA6B,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBACxF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;gBAChD,MAAM;aACP;YACD,KAAK,YAAY,CAAC,CAAC;gBACjB,IAAM,CAAC,GAAG,IAAI,KAAK,6BAA6B,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBACxF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC,CAAC;gBAChD,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,CAAC;gBACrD,MAAM;aACP;SACF;IACH,CAAC;IAED;;;OAGG;IACH,yCAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,wCAAW,GAAX;QACE,OAAO,IAAI,CAAC,aAAa;eACpB,IAAI,CAAC,aAAa,CAAC,SAAS;eAC5B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY,IAAI,IAAI;eACjD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5D,CAAC;IAED;;OAEG;IACH,6CAAgB,GAAhB;QACE,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,IAAI,CAAC,aAAa;mBACjB,IAAI,CAAC,aAAa,CAAC,SAAS;mBAC5B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY,IAAI,IAAI;mBACjD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzD,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC;aACrE;iBAAM;gBACL,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,aAAa,CAAC;aAC/E;SACF;aAAM;YACL,OAAO,iCAAiC,CAAC;SAC1C;IACH,CAAC;IAED;;OAEG;IACH,4CAAe,GAAf;QAAA,iBAOC;QANC,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAA3C,CAA2C,CAAC,IAAI,IAAI,CAAC,CAAC;SACpF;aAAM;YACL,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,KAAK,MAAM,EAAnB,CAAmB,CAAC,IAAI,IAAI,CAAC;IAC3D,CAAC;IAED;;OAEG;IACH,6CAAgB,GAAhB;QACE,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,gCAAgC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBACzG,iCAAiC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;SACjE;aAAM;YACL,OAAO,gCAAgC,CAAC;SACzC;IACH,CAAC;IApfU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,yHAAyC;YACzC,SAAS,EAAE,CAAC,iEAAW,CAAC;;SAEzB,CAAC;+EA+DmC,qEAAa,EAAiB,8DAAc,EAAuB,iEAAW;YACzF,0DAAW;OA/DxB,kBAAkB,CAqf9B;IAAD,yBAAC;CAAA;AArf8B;;;;;;;;;;;;ACzB/B,6pB;;;;;;;;;;;;;;;;;;;ACAyE;AACd;AACP;AASpD;IAQE;QALA,aAAQ,GAAG,CAAC,CAAC;QAEb,cAAS,GAAG,IAAI,mEAAgB,EAAE,CAAC;IAInC,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAU,GAAV;QAAA,iBASC;QARC,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;YAC1B,IAAI,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;gBACrB,KAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,KAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC7C,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;aACnB;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IA1BU,eAAe;QAP3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,yGAAsC;YAEtC,eAAe,EAAE,qEAAuB,CAAC,MAAM;YAC/C,SAAS,EAAE,CAAC,qEAAa,EAAE,mEAAgB,CAAC;SAC7C,CAAC;;OACW,eAAe,CA2B3B;IAAD,sBAAC;CAAA;AA3B2B;;;;;;;;;;;;ACX5B,8CAA8C,0BAA0B,KAAK,gCAAgC,gBAAgB,GAAG,gBAAgB,8BAA8B,mBAAmB,GAAG,gCAAgC,GAAG,kBAAkB,8BAA8B,mBAAmB,KAAK,2CAA2C,kBAAkB,6BAA6B,KAAK,GAAG,2CAA2C,kBAAkB,6BAA6B,KAAK,kBAAkB,gCAAgC,KAAK,GAAG,0CAA0C,kBAAkB,6BAA6B,KAAK,wBAAwB,mBAAmB,0BAA0B,uBAAuB,8BAA8B,KAAK,KAAK,0CAA0C,kBAAkB,6BAA6B,KAAK,GAAG,0CAA0C,kBAAkB,6BAA6B,KAAK,GAAG,yCAAyC,mEAAmE,sBAAsB,OAAO,iEAAiE,sBAAsB,OAAO,mEAAmE,sBAAsB,OAAO,mEAAmE,sBAAsB,OAAO,SAAS,sBAAsB,wBAAwB,GAAG,qBAAqB,qBAAqB,GAAG,UAAU,KAAK,+CAA+C,2+F;;;;;;;;;;;ACA1hD,oJAAoJ,QAAQ,wLAAwL,OAAO,mbAAmb,wIAAwI,sJAAsJ,6BAA6B,sCAAsC,kBAAkB,kDAAkD,kBAAkB,keAAke,MAAM,2fAA2f,MAAM,w7BAAw7B,yDAAyD,6LAA6L,yDAAyD,yoBAAyoB,MAAM,2lBAA2lB,MAAM,qtBAAqtB,WAAW,oEAAoE,0BAA0B,yFAAyF,eAAe,uwBAAuwB,uBAAuB,+GAA+G,WAAW,mHAAmH,4BAA4B,uIAAuI,gBAAgB,yHAAyH,sBAAsB,wUAAwU,0BAA0B,KAAK,yBAAyB,mBAAmB,uBAAuB,wxBAAwxB,MAAM,koBAAkoB,kBAAkB,KAAK,iBAAiB,yBAAyB,WAAW,uGAAuG,eAAe,oQAAoQ,YAAY,oBAAoB,OAAO,0BAA0B,oUAAoU,2DAA2D,mlOAAmlO,cAAc,qiBAAqiB,uBAAuB,oIAAoI,WAAW,wIAAwI,4BAA4B,wJAAwJ,gBAAgB,mIAAmI,sBAAsB,0JAA0J,uBAAuB,yIAAyI,YAAY,sKAAsK,qBAAqB,mN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1ykB;AACU;AACnB;AAC2B;AAC3B;AAEQ;AACJ;AACK;AACc;AACJ;AAGO;AACxB;AACU;AAQnD;IAiIE,uBAAoB,aAA4B,EAAU,WAAwB,EAAU,EAAe,EAAU,QAAkB;QAAnH,kBAAa,GAAb,aAAa,CAAe;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAU;QA/HvI,gFAAgF;QAEhF,eAAU,GAAW,sEAAW,CAAC,SAAS,CAAC;QAC3C,cAAS,GAAG,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;QAC7C,WAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,wCAAwC;QACjE,4BAAuB,GAAG,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC,uBAAuB;QACnF,uBAAkB,GAAG,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,cAAc;QACnE,yBAAoB,GAAG,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,0BAA0B;QAClF,wBAAmB,GAAG,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,CAAC,0BAA0B;QAC/E,4BAAuB,GAAG,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,CAAC,0BAA0B;QACxF,6BAAwB,GAAG,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,CAAC,0BAA0B;QAC1F,4BAAuB,GAAG,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,0BAA0B;QACpF,yBAAoB,GAAG,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,0BAA0B;QAC/E,mBAAc,GAAG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5C,oBAAe,GAAG,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC;QACnD,eAAU,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,4BAA4B;QACnE,cAAS,GAAG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,4BAA4B;QACpE,aAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,CAAC,uBAAuB;QAChE,sBAAiB,GAAG,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,CAAC,wCAAwC;QAChG,2BAAsB,GAAG,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,wCAAwC;QAClG,kCAA6B,GAAG,IAAI,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC,wCAAwC;QAC1G,oBAAe,GAAG,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,gBAAgB;QAG9D,qFAAqF;QAErF,cAAS,GAAG,EAAE,CAAC,CAAC,mCAAmC;QAGnD,YAAO,GAAG,CAAC,CAAC,CAAC,mCAAmC;QAChD,iBAAY,GAAG,CAAC,CAAC,CAAC,2CAA2C;QAC7D,cAAS,GAAG,CAAC,CAAC,CAAC,8BAA8B;QAC7C,mBAAc,GAAG,CAAC,CAAC,CAAC,sCAAsC;QAC1D,yBAAoB,GAAG,EAAE,CAAC,CAAC,oCAAoC;QAC/D,0BAAqB,GAAG,EAAE,CAAC,CAAC,0CAA0C;QACtE,wBAAmB,GAAG,EAAE,CAAC,CAAC,8CAA8C;QAGxE,eAAU,GAAG,KAAK,CAAC,CAAC,sCAAsC;QAC1D,qBAAgB,GAAG,cAAc,CAAC,CAAC,sCAAsC;QACzE,mBAAc,GAAG,KAAK,CAAC,CAAC,kDAAkD;QAC1E,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,CAAC,CAAC;QACf,oBAAe,GAAG,EAAE,CAAC;QACrB,aAAQ,GAAG,UAAU,CAAC,CAAC,4CAA4C;QAErE,4FAA4F;QAE1F,WAAM,GAAG,KAAK,CAAC,CAAC,2EAA2E;QAC3F,gBAAW,GAAG,KAAK,CAAC,CAAC,sBAAsB;QAC3C,eAAU,GAAG,KAAK,CAAC,CAAC,6BAA6B;QACjD,eAAU,GAAG,KAAK,CAAC,CAAC,2BAA2B;QAC/C,kBAAa,GAAG,KAAK,CAAC,CAAC,2BAA2B;QAClD,6BAAwB,GAAG,KAAK,CAAC,CAAC,gEAAgE;QAClG,mBAAc,GAAG,KAAK,CAAC,CAAC,4EAA4E;QAEpG,oFAAoF;QAEpF,WAAM,GAAW,EAAE,CAAC,CAAC,oBAAoB;QACzC,eAAU,GAAoB,EAAE,CAAC,CAAC,oBAAoB;QACtD,cAAS,GAAG,EAAE,CAAC,CAAC,oBAAoB;QAEpC,gBAAW,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,iBAAiB,EAAE,wBAAwB,CAAC,CAAC,CAAC,UAAU;QAC3F,mBAAc,GAAG,CAAC,gBAAgB,EAAE,UAAU,EAAE,kBAAkB,EAAE,kBAAkB,CAAC,CAAC,CAAC,oCAAoC;QAC7H,aAAQ,GAAG,CAAC,UAAU,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,eAAe,EAAE,gBAAgB,CAAC,CAAC,CAAC,oCAAoC;QAWxI,SAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACZ,IAAI,EAAE,CAAC,EAAE,EAAE;oBACT,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC;iBAC1B,CAAC;YACF,WAAW,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACrB,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC,EAAE,EAAE;oBACb,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC/B,CAAC;YACF,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC/B,CAAC;YACF,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACvB,CAAC,CAAC;QAEH,eAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,CAAC,EAAE,EAAE;oBACX,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC/B,CAAC;YACF,cAAc,EAAE,CAAC,EAAE,EAAE;oBACnB,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC;iBAC/B,CAAC;SACH,CAAC,CAAC;QAEH,YAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtB,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SAClB,CAAC,CAAC;QAEH,eAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,IAAI,EAAE,CAAC,EAAE,EAAE;oBACT,yDAAU,CAAC,QAAQ;iBACpB,CAAC;SACH,CAAC,CAAC;QAEH,2BAAsB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,EAAE,EAAE,CAAC,EAAE,EAAE;oBACP,yDAAU,CAAC,QAAQ;iBACpB,CAAC;YACF,IAAI,EAAE,CAAC,EAAE,EAAE;oBACT,yDAAU,CAAC,QAAQ;iBACpB,CAAC;YACF,KAAK,EAAE,CAAC,EAAE,EAAE;oBACV,yDAAU,CAAC,QAAQ;iBACpB,CAAC;SACH,CAAC,CAAC;QAGD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;IAC3E,CAAC;IAED,gCAAQ,GAAR;QAAA,iBA2DC;QA1DC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,OAAO,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAE3D,IAAI,KAAK,IAAI,IAAI,EAAE;gBACjB,KAAI,CAAC,WAAW,GAAG,IAAI,kEAAW,EAAE,CAAC;gBACrC,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC;aAC5C;iBAAM;gBACL,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBAEzB,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE;oBACnE,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;iBAC7B;qBAAM,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE;oBAChF,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;oBACpB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC;oBAEnD,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;wBACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACrB,CAAC,CAAC,CAAC;iBAEJ;qBAAM;oBACL,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;oBAC/B,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;wBACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBACpB,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC,CAAC;QAEH,+DAA+D;QAE/D,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,iBAAiB,EAAE,wBAAwB,CAAC,CAAC,CAAC,UAAU;SACjG;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC,CAAC,UAAU;SACvE;QAED,4BAA4B;QAC5B,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAE5C,IAAI,CAAC,KAAK,GAAG,2FAA2F;gBACtG,6CAA6C,CAAC;YAEhD,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,uCAAe,GAAf;QAAA,iBAgBC;QAdC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,CAAC,IAAI,CAC1D,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8DAA8D,CAAC,CAAC;QAChG,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjD,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,EAAE;gBAC5B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,KAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC,CAAC,mCAAmC;aACvF;iBAAM;gBACL,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAe,GAAf,UAAgB,IAAY;QAA5B,iBASC;QAPC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,IAAI,CAC9D,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8DAA8D,CAAC,CAAC;QAChG,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,mDAA2B,GAA3B,UAA4B,OAAe;QAA3C,iBAkBC;QAhBC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC,IAAI,CAC1D,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;QAChE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YAEd,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;YAC5B,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,KAAI,CAAC,QAAQ,EAAE,CAAC;YAEhB,IAAI,KAAI,CAAC,YAAY,EAAE;gBACrB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAC5B,KAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,kDAAkD;IAChD,iCAAS,GAAT;QAAA,iBAKC;QAJC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,OAAO;YAC9B,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAsD;IACtD,6CAAqB,GAArB;QAAA,iBAgBC;QAfC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAErD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,6BAA6B,GAAG,MAAM;YAClE,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAE,GAAG,SAAS;YAChD,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAC7C,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,gCAAgC,CAAC,CAAC;QAClE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,aAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,6BAA6B,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;YAC/D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,KAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC;YAClD,KAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAoD;IACpD,0CAAkB,GAAlB,UAAmB,KAAoB;QACrC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;QACrC,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC;YACrC,EAAE,EAAE,KAAK,CAAC,EAAE;YACZ,IAAI,EAAE,KAAK,CAAC,IAAI;SACjB,CAAC,CAAC;IACL,CAAC;IAGD,6CAA6C;IAC7C,qCAAa,GAAb,UAAc,IAAY;QACxB,IAAI,IAAI,KAAK,UAAU,EAAE;YACvB,IAAI,CAAC,2BAA2B,CAAC,gBAAgB,CAAC,CAAC;SACpD;aAAM,IAAI,IAAI,KAAK,kBAAkB,EAAE;YACtC,IAAI,CAAC,2BAA2B,CAAC,qBAAqB,CAAC,CAAC;SACzD;aAAM,IAAI,IAAI,KAAK,gBAAgB,EAAE;YACpC,IAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC;SACnD;aAAM;YACL,IAAI,CAAC,2BAA2B,CAAC,sBAAsB,CAAC,CAAC;SAC1D;IACH,CAAC;IAED;;;;OAIG;IACH,oCAAY,GAAZ,UAAa,IAAY;QAEvB,IAAI,IAAI,KAAK,UAAU,EAAE;YACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SAC1C;aAAM,IAAI,IAAI,KAAK,kBAAkB,EAAE;YACtC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SAC9C;aAAM,IAAI,IAAI,KAAK,kBAAkB,EAAE;YACtC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;SAC/C;aAAM,IAAI,IAAI,KAAK,eAAe,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SAC9C;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;SAC3C;IACH,CAAC;IAED;;;OAGG;IACH,oCAAY,GAAZ,UAAa,IAAY;QAEvB,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACzC;aAAM,IAAI,IAAI,KAAK,wBAAwB,EAAE;YAC5C,IAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC;YAClD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC9B;aAAM,IAAI,IAAI,KAAK,iBAAiB,EAAE;YACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;SAC3C;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;SAC9C;IACH,CAAC;IAED;;;;;;;;;;;;;OAaG;IAGH,gCAAQ,GAAR;QAAA,iBAUC;QARC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,IAAI,CAClC,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,iDAAiD,CAAC,CAAC;QACnF,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;YACxC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,qCAAa,GAAb;QAAA,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO;YAC1B,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;YACpF,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,WAAW,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;YAClG,OAAO,CAAC,GAAG,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAoB,GAApB;QAAA,iBAOC;QANC,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,KAAK;YAC5B,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;gBAC7B,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAA4C;IAC5C,iCAAS,GAAT,UAAU,GAAW;QAArB,iBAqCC;QAnCC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAEhB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAChC,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;QAChE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAEzB,IAAI,KAAI,CAAC,YAAY,EAAE;gBACrB,KAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAC5C,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,0CAA0C,CAAC,CAAC;QAC5E,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;YACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;YAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC;YACjD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,+BAA+B,CAAC;YAC3D,KAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YAE3D,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;YACxD,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAEpD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,KAAI,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,iBAAiB,EAAE,wBAAwB,CAAC,CAAC;YACrF,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,oCAAY,GAAZ;QAAA,iBAcC;QAZC,IAAM,OAAO,GAAG,IAAI,2DAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAC/D,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,2BAA2B,CAAC,CAAC;QAC7D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC;YACxC,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAU,GAAV;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAClE,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;QAC/D,CAAC,CAAC,CACH;aACE,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,oBAAoB,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;QAChG,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAe,GAAf;QAEE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IAEhC,CAAC;IAED,oCAAY,GAAZ,UAAa,GAAG,EAAE,OAAe;QAAjC,iBAqBC;QApBC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,uGAAuG,CAAC;YACrH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;SAC5D;aAAM,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,EAAE;YACjC,IAAI,CAAC,KAAK,GAAG,+DAA+D,CAAC;YAC7E,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,KAAK,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;SAC5D;aAAM;YACL,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;SACtB;QACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAU,EAAE,IAAU,EAAE,MAAc;QAAnD,iBA0CC;QAxCC,wEAAwE;QACxE,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YAE5C,IAAI,CAAC,KAAK,GAAG,iDAAiD;gBAC5D,kGAAkG,CAAC;YACrG,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YACpB,CAAC,CAAC,CAAC;SACJ;aAAM;YAEL,IAAI,MAAM,KAAK,CAAC,EAAE;gBAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAEvB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;oBACnB,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,GAAG,EAAE,IAAI,CAAC,GAAG;oBACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,YAAY,EAAE,IAAI,CAAC,YAAY;iBAChC,CAAC,CAAC;aAEJ;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAExB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;oBACnB,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,EAAE;oBACR,WAAW,EAAE,mBAAmB;oBAChC,GAAG,EAAE,EAAE;oBACP,QAAQ,EAAE,CAAC;oBACX,KAAK,EAAE,CAAC;oBACR,YAAY,EAAE,IAAI,CAAC,eAAe;iBACnC,CAAC,CAAC;aAEJ;SACF;IACH,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACjC,IAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAC/C;IACH,CAAC;IAED,4BAA4B;IAC5B,gCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;QACjE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CACrD,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,4BAA4B,CAAC,CAAC;QAC9D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,aAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,+BAA+B,GAAG,GAAG,CAAC,UAAU,GAAG,WAAW,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;QACpG,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,2DAA2D;IAC3D,oCAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAGD,kDAAkD;IAClD,mCAAW,GAAX;QAEE,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;QACxC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,0CAAkB,GAAlB,UAAmB,KAAU;QAE3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,MAAM,EAAE,CAAC;YACT,cAAc,EAAE,CAAC;SAClB,CAAC,CAAC;IACL,CAAC;IAED,iCAAS,GAAT,UAAU,IAAY,EAAE,IAAY,EAAE,MAAW;QAAjD,iBAQC;QAPC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAS,GAAT;QAAA,iBAaC;QAZC,IAAM,MAAM,GAAG,IAAI,kDAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,EACpD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAExC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CACtD,iEAAU,CAAC,aAAG;YAEZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,+BAA+B,CAAC,CAAC;QACjE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YACd,KAAI,CAAC,SAAS,CAAC,6BAA6B,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;YAChE,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX;QAAA,iBA+BC;QA9BC,IAAM,IAAI,GAAG,IAAI,8CAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EACxB,KAAK,EACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EACnB,IAAI,CACL,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACpD;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACjF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/F,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/E,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CACpD,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;QAChE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;YAEd,KAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,GAAG,sBAAsB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;YACtF,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,mCAAW,GAAX;QAAA,iBA8CC;QA5CC,IAAM,IAAI,GAAG,IAAI,8CAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EACtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EACpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EACrB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EACxB,KAAK,EACL,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAC3B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EACnB,KAAK,CACN,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;YAChD,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACpD;QAED,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YACjF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/F,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;YAC/E,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YAEnB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CACpD,iEAAU,CAAC,aAAG;gBACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;YAChE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;gBAEd,KAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,IAAI,CAAC,EAAE,GAAG,sBAAsB,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;gBACtF,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;SAEJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAClD,iEAAU,CAAC,aAAG;gBACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;YAChE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,cAAI;gBACd,KAAI,CAAC,SAAS,CAAC,4BAA4B,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,sCAAc,GAAd,UAAe,IAAU,EAAE,IAAY;QAAvC,iBAaC;QAXC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;QAC5E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,IAAI,CAChF,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,gCAAgC,CAAC,CAAC;QAClE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,aAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,+BAA+B,GAAG,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;YAChF,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,2CAAmB,GAAnB,UAAoB,IAAmB,EAAE,IAAY;QAArD,iBAeC;QAbC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;QACjF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,IAAI,CACrF,iEAAU,CAAC,aAAG;YACZ,OAAO,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,gCAAgC,CAAC,CAAC;QAClE,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,aAAG;YACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,SAAS,CAAC,6BAA6B,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;YAE/D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,KAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC;QAEpD,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,8CAA8C;IAC9C,oCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC;SACxC;IACH,CAAC;IAED,gFAAgF;IAChF,gCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAGH,sBAAsB;IAEpB,6BAAK,GAAL,UAAM,KAAa,EAAE,GAAW;QAE9B,IAAM,IAAI,GAAG,IAAI,+DAAU,EAAE;aAC1B,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;aACtB,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;QAExB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACpC,IAAI,CACH,0DAAG,CAAC,cAAI;YACN,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;YACzD,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;YACnE,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC;YACjE,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;aACJ,SAAS,EAAE,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,mCAAW,GAAX;QAEE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,sBAAsB;QAC9C,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;QAE3C,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB;gGACwF;IAC1F,CAAC;IA/vBU,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0GAAkC;YAClC,SAAS,EAAE,CAAC,iEAAW,EAAE,yDAAQ,CAAC;;SAEnC,CAAC;+EAkImC,qEAAa,EAAuB,iEAAW,EAAc,0DAAW,EAAoB,yDAAQ;OAjI5H,aAAa,CAgwBzB;IAAD,oBAAC;CAAA;AAhwByB;;;;;;;;;;;;ACvB1B,+DAA+D,mM;;;;;;;;;;;ACA/D,yd;;;;;;;;;;;;;;;;;;;;;;ACAyG;AACpE;AACiB;AAChB;AACoB;AACI;AAS9D;IASE,sCACU,MAAc,EACd,aAA4B,EAC5B,GAAsB;QAHhC,iBAcC;QAbS,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,QAAG,GAAH,GAAG,CAAmB;QARhC,mBAAc,GAAW,MAAM,CAAC;QAChC,8BAA8B;QAC9B,iBAAY,GAAG,IAAI,oDAAe,CAAC,KAAK,CAAC,CAAC;QAC1C,mBAAc,GAAG,EAAE,CAAC;QAMlB,IAAI,CAAC,MAAM,CAAC,MAAM;aACf,IAAI,CACH,6DAAM,CAAC,WAAC,IAAI,QAAC,YAAY,6DAAa,EAA1B,CAA0B,CAAC,CACxC;aACA,SAAS,CAAC;YACT,YAAY,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YAChC,KAAI,CAAC,UAAU,EAAE,CAAC;QAEpB,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,iDAAU,GAAV;QAAA,iBAKC;QAHC,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,gDAAgD;YAC5F,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,cAAM,YAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAA5B,CAA4B,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC;SAChG;IACH,CAAC;IAKD,uDAAgB,GAAhB;QACE,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,6CAAM,GAAN;QACE,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAEhC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAE9B,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;QACxB,IAAM,SAAS,GAAG,IAAI,iEAAW,EAAE,CAAC;QACpC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,sDAAe,GAAf;QACE,IAAM,SAAS,GAAG,IAAI,iEAAW,EAAE,CAAC;QACpC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,eAAe,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAtBD;QAHC,kEAAY,CAAC,kBAAkB,CAAC;QAChC,kEAAY,CAAC,cAAc,CAAC;QAC5B,kEAAY,CAAC,cAAc,CAAC;;;;wEAI5B;IAtCU,4BAA4B;QANxC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,6JAAqD;YAErD,eAAe,EAAE,qEAAuB,CAAC,MAAM;;SAChD,CAAC;+EAWkB,sDAAM;YACC,qEAAa;YACvB,+DAAiB;OAZrB,4BAA4B,CA0DxC;IAAD,mCAAC;CAAA;AA1DwC;;;;;;;;;;;;;;;;;;ACdO;AAYhD;IAIE;IACA,CAAC;IAED,mCAAQ,GAAR;QACC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IATU,gBAAgB;QAV5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,0XAKT;SAEF,CAAC;;OACW,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;ACZ7B,uDAAuD,gBAAgB,oBAAoB,yBAAyB,4BAA4B,OAAO,GAAG,UAAU,GAAG,+CAA+C,mjB;;;;;;;;;;;ACAtN,iOAAiO,QAAQ,wMAAwM,OAAO,s7B;;;;;;;;;;;;;;;;;;;;;ACAxY;AACc;AAEJ;AAC/B;AACoC;AAQ/D;IAQE,8BAAoB,aAA4B,EAAU,KAAqB;QAA3D,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;IAC/E,CAAC;IAED,uCAAQ,GAAR;QAAA,iBA2BC;QAzBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAC3D,IAAI,KAAK,IAAI,IAAI,EAAE;gBAEjB,KAAI,CAAC,WAAW,GAAG,IAAI,iEAAW,EAAE,CAAC;gBACrC,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC;aAE5C;iBAAM;gBAEL,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE;iBACpE;qBAAM,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE;oBACxE,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC;oBAC3C,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;wBACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACrB,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,KAAI,CAAC,WAAW,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,CAAC,eAAe,EAAE;wBACrE,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC;wBAC/B,kDAAK,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;4BACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;wBACpB,CAAC,CAAC,CAAC;qBACJ;iBACF;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAtCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,+HAA2C;;SAE5C,CAAC;+EASmC,qEAAa,EAAiB,8DAAc;OARpE,oBAAoB,CAwChC;IAAD,2BAAC;CAAA;AAxCgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbM;AACM;AACW;AACqB;AACnB;AACO;AACG;AACM;AACD;AAC9B;AACgB;AACK;AACL;AACgC;AACxB;AACa;AACf;AAC2C;AA6B5G;IAAA;IACA,CAAC;IADY,QAAQ;QA1BpB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,wEAAe;gBAC5B,+EAAe;gBACf,kFAAgB;gBAChB,0EAAa;gBACb,0EAAa;gBACb,+FAAoB;gBACpB,wFAAkB;gBAClB,2HAA4B,CAAC;YAC/B,OAAO,EAAE;gBACP,4DAAY;gBACZ,uEAAa;gBACb,4FAAuB;gBACvB,qEAAgB;gBAChB,2DAAW;gBACX,iFAAgB;gBAChB,mEAAmB;gBACnB,2DAAa;aACd;YACD,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,yGAA+B,EAAE,KAAK,EAAE,IAAI,EAAC;gBACpF,EAAC,OAAO,EAAE,+DAAW,EAAE,QAAQ,EAAE,+DAAW,EAAC;gBAC7C,oEAAgB;aACjB;YACD,OAAO,EAAE,CAAC,wEAAe,CAAC;SAC3B,CAAC;OACW,QAAQ,CACpB;IAAD,eAAC;CAAA;AADoB;;;;;;;;;;;;;AC9CrB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE,uBAAuB;CACnC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MainComponent} from '../ui/layout/main/main.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {UnauthorizeComponent} from '../ui/layout/unauthorize/unauthorize.component';\nimport {InvestingComponent} from '../ui/layout/investing/investing.component';\nimport {AuthGuardService as AuthGuard} from '../service/auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '401',\n    component: UnauthorizeComponent\n  },\n  {\n    path: 'investing',\n    component: InvestingComponent\n  }\n  /*,\n  { path: '**', redirectTo: '401' }*/\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--<router-outlet></router-outlet>-->\\n<app-layout>\\n  <h1>{{title}}</h1>\\n</app-layout>\\n\"","import { Component } from '@angular/core';\nimport {CommonService} from './service/common.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: []\n})\nexport class AppComponent {\n  title = 'arnote';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UiModule } from './ui/ui.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthGuardService} from './service/auth-guard.service';\nimport {AuthService} from './service/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    UiModule\n  ],\n  providers: [AuthGuardService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nexport class NewInstrumentRq {\n\n\n  constructor(ticker: string, isPlan: boolean, bondType: string, price: number, lot: number, purchaseDate: string) {\n    this.ticker = ticker;\n    this.isPlan = isPlan;\n    this.bondType = bondType;\n    this.price = price;\n    this.lot = lot;\n    this.purchaseDate = purchaseDate;\n  }\n\n  ticker: string;\n  isPlan: boolean;\n  bondType: string;\n  price: number;\n  lot: number;\n  purchaseDate: string;\n}\n","export class Salary {\n\n  constructor(fullsalary: number, residualSalary: number) {\n    this.fullsalary = fullsalary;\n    this.residualSalary = residualSalary;\n  }\n\n  fullsalary: number;\n  residualSalary: number;\n}\n","export class SearchRq {\n\n  constructor(wishName: string) {\n    this.wishName = wishName;\n  }\n\n  wishName: string;\n}\n","export class User {\n   constructor() {}\n\n  id: number;\n  login: string;\n  pwd: string;\n  userRole: string;\n  userCryptoMode: boolean;\n  creationDate: string;\n  email: string;\n  fullname: string;\n\n}\n","export class Wish {\n\n  constructor(id: number, wish: string, price: number, priority: number, archive: boolean,\n              description: string, url: string, realized: boolean) {\n    this.id = id;\n    this.wish = wish;\n    this.price = price;\n    this.priority = priority;\n    this.archive = archive;\n    this.description = description;\n    this.url = url;\n    this.realized = realized;\n  }\n\n  id: number;\n  wish: string;\n  price: number;\n  priority: number;\n  archive: boolean;\n  description: string;\n  url: string;\n  realized: boolean;\n  priorityGroup: number;\n  creationDate: string;\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n\n@Injectable()\nexport class AuthGuardService  implements CanActivate {\n\n\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      console.log('is auth - ' + !this.auth.isAuthenticated());\n      this.router.navigate(['401']);\n      return false;\n    }\n    return true;\n  }\n\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {environment} from '../../environments/environment';\nimport {User} from '../dto/user';\n\nconst helper = new JwtHelperService();\nlet myRawToken = localStorage.getItem('token');\nconst decodedToken = helper.decodeToken(myRawToken);\nlet isExpired = helper.isTokenExpired(myRawToken);\n\n\n@Injectable()\nexport class AuthService {\n\n  SERVER_URL: string = environment.serverUrl;\n  loginURL = this.SERVER_URL + '/login?';\n\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) {\n  }\n\n\n  public login(loginPayload): Observable<HttpResponse<Object>> {\n\n    console.log('loginPayload ->' + loginPayload);\n\n    const headers = {\n      'Content-type': 'application/x-www-form-urlencoded'\n    };\n\n    return this.http.get<HttpResponse<Object>>(this.loginURL + loginPayload, {observe: 'response'});\n  }\n\n  public register(newUser: User, url: string): Observable<User> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<User>(url, newUser, httpOptions);\n  }\n\n  public isAuthenticated(): boolean {\n    return !isExpired;\n  }\n\n  public refreshToken() {\n    myRawToken = localStorage.getItem('token');\n    isExpired = helper.isTokenExpired(myRawToken);\n    console.log('TOKEN EXPIRE - ' + isExpired);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const idToken = localStorage.getItem('token');\n    // console.log('token', idToken);\n    if (idToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', idToken)\n      });\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {MessageCode} from './message.code';\nimport * as CryptoJS from 'crypto-js';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  private error: MessageCode;\n\n  private errorSubsciber: BehaviorSubject<MessageCode> = new BehaviorSubject<MessageCode>(this.error);\n  error$: Observable<MessageCode> = this.errorSubsciber.asObservable();\n\n  constructor() {\n  }\n\n\n  pushError(error: MessageCode) {\n    console.log('Incoming Error: ' + error.messageType);\n    this.errorSubsciber.next(error);\n  }\n\n  encrypt(keys, value) {\n    const key = CryptoJS.enc.Utf8.parse(keys);\n    const iv = CryptoJS.enc.Utf8.parse(keys);\n    const encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(value.toString()), key,\n      {\n        keySize: 128 / 8,\n        iv: iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n      });\n\n    return encrypted.toString();\n  }\n\n\n  convertText(conversion: string, what: string, key: string) {\n    if (conversion === 'encrypt') {\n      return CryptoJS.AES.encrypt(what.trim(), key.trim()).toString();\n  } else {\n      return CryptoJS.AES.decrypt(what.trim(), key.trim()).toString(CryptoJS.enc.Utf8);\n\n    }\n  }\n\n\n// The get method is use for decrypt the value.\n  decrypt(keys, value) {\n    var key = CryptoJS.enc.Utf8.parse(keys);\n    console.log('key - ' + key);\n    var iv = CryptoJS.enc.Utf8.parse(keys);\n    console.log('iv - ' + iv);\n    var decrypted = CryptoJS.AES.decrypt(value, key, {\n      keySize: 128 / 8,\n      iv: iv,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7\n    });\n\n    console.log('decr - ' + decrypted);\n\n    return decrypted.toString(CryptoJS.enc.Utf8);\n  }\n\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Wish} from '../dto/wish';\nimport {Salary} from '../dto/salary';\nimport {User} from '../dto/user';\nimport {environment} from '../../environments/environment';\nimport {NewInstrumentRq} from '../dto/NewInstrumentRq';\nimport {Bond} from '../dto/bond';\nimport {SearchRq} from '../dto/searchwishes';\n\n\n@Injectable()\nexport class HttpService {\n\n  SERVER_URL: string = environment.serverUrl;\n  loginURL = this.SERVER_URL + '/login?';\n  isCryptoUserUrl = this.SERVER_URL + '/rest/wishes/users/getcurrent';\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getData(url: string): Observable<any> {\n    return this.http.get(url);\n  }\n\n  public searchWishes(request: SearchRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<Wish>(url, request, httpOptions);\n  }\n\n  public sendData(wish: Wish, url: string): Observable<Wish> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<Wish>(url, wish, httpOptions);\n  }\n\n  public addInstrument(instrument: NewInstrumentRq, url: string): Observable<Bond> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<Bond>(url, instrument, httpOptions);\n  }\n\n  public deleteInstrument(ticker: string, url: string): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.delete(url + '?ticker=' + ticker, httpOptions);\n  }\n\n  public sendFile(formData: FormData, url: string): Observable<any> {\n    return this.http.post<any>(url, formData);\n  }\n\n  public sendSalary(salary: Salary, url: string): Observable<Salary> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<Salary>(url, salary, httpOptions);\n  }\n\n  public updateWish(wish: Wish, url: string): Observable<Wish> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.put<Wish>(url, wish, httpOptions);\n  }\n\n  public deleteWish(id: string, url: string): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.delete(url + '/' + id, httpOptions);\n  }\n\n\n  public login(loginPayload): Observable<HttpResponse<Object>> {\n\n    console.log('loginPayload ->' + loginPayload);\n\n    const headers = {\n      'Content-type': 'application/x-www-form-urlencoded'\n    };\n\n    return this.http.get<HttpResponse<Object>>(this.loginURL + loginPayload, {observe: 'response'});\n  }\n\n  public isCryptoUser(): Observable<any> {\n    return this.http.get(this.isCryptoUserUrl);\n  }\n\n  public updateUserData(user: User, url: string): Observable<User> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.put<User>(url, user, httpOptions);\n  }\n}\n","export class MessageCode {\n  messageType: string;\n\n// ===================================================\n// ====================  КОДЫ   ОШИБОК ===============\n// ===================================================\n\n  WRONG_LOGIN = 'Ошибка аутентификации! Не верные логин и/или проль!';\n  REGISTER_ERROR = 'Ошибка регистрации!';\n  USER_DATA_CHANGE_SOME_ERROR = 'Невозможно изменить данные пользователя. Произошла техническая ошибка!';\n  USER_DATA_CHANGE_SUCH_USER_EXISTS = 'Данное имя пользователя занято! Выберете другое!';\n  UNDER_CONSTRACTION = 'Данная функция еще не реализована! Пождите совсем чуть-чуть....';\n  SESSION_EXPIRED = 'Ваша сессия истекла!';\n\n\n// ===================================================\n// ============  КОДЫ  СЕРВИСНЫХ СООБЩЕНИЙ ===========\n// ===================================================\n\n  AUTH_LOGOUT = 'LOGOUT';\n  AUTH_LOGIN_OK = 'LOGIN';\n  USER_DATA_CHANGE_OK = 'Пользовательские данные успешно изменены!';\n  REGISTER_OK = 'Пользователь успешно зарегистрирован!';\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!--<clr-main-container>-->\\n<header class=\\\"header-1\\\">\\n  <div class=\\\"branding\\\">\\n    <a class=\\\"nav-link\\\">\\n      <clr-icon shape=\\\"shield\\\"></clr-icon>\\n      <span class=\\\"title\\\">arNote Project</span>\\n    </a>\\n  </div>\\n  <div class=\\\"header-nav\\\">\\n    <a *ngIf=\\\"idToken\\\" class=\\\"active nav-link nav-icon\\\" clrVerticalNavLink routerLink=\\\"../\\\" routerLinkActive=\\\"active\\\">\\n      <clr-icon shape=\\\"home\\\"></clr-icon>\\n    </a>\\n  </div>\\n  <div class=\\\"header-actions\\\">\\n    <clr-dropdown class=\\\"dropdown bottom-right\\\">\\n      <button class=\\\"nav-icon\\\" clrDropdownToggle>\\n        <clr-icon shape=\\\"user\\\"></clr-icon>\\n        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n      </button>\\n\\n      <div class=\\\"dropdown-menu\\\">\\n        <label class=\\\"dropdown-header\\\">Меню пользователя</label>\\n        <a *ngFor=\\\"let item of loginDropDownMenu\\\" (click)=\\\"loginIconHandler(item)\\\"  clrDropdownItem>{{item}}</a>\\n      </div>\\n    </clr-dropdown>\\n\\n  </div>\\n</header>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"isLogin\\\">\\n  <h3 class=\\\"modal-title\\\">Войти</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"loginForm\\\">\\n\\n      <!--ПОЛЕ ЛОГИН-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"login\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"login\\\" id=\\\"login\\\" name=\\\"login\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ПАРОЛЬ-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"password\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n        <input type=\\\"password\\\" clrInput formControlName=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"sendLogin()\\\" class=\\\"btn btn-primary mt-1\\\">Войти</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n  <!-- ФОРМА РЕГИСТРАЦИИ ЮЗЕРА -->\\n\\n  <clr-modal [(clrModalOpen)]=\\\"isRegister\\\">\\n    <h3 class=\\\"modal-title\\\">Новой юзер</h3>\\n    <div class=\\\"modal-body\\\">\\n      <form clrForm [formGroup]=\\\"registerForm\\\">\\n\\n        <!--ПОЛЕ ЛОГИН-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"reglogin\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n          <input type=\\\"text\\\" clrInput formControlName=\\\"login\\\" id=\\\"reglogin\\\" name=\\\"login\\\" autocomplete=\\\"off\\\" required\\n                 size=\\\"100\\\">\\n        </clr-input-container>\\n\\n        <!--ПОЛЕ ПАРОЛЬ-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"regpassword\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n          <input type=\\\"password\\\" clrInput formControlName=\\\"password\\\" id=\\\"regpassword\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" required\\n                 size=\\\"100\\\">\\n        </clr-input-container>\\n\\n        <!--ПОЛЕ EMAIL-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"regemail\\\" class=\\\"input-label clr-col-12\\\">E-mail</label>\\n          <input type=\\\"email\\\" clrInput formControlName=\\\"email\\\" id=\\\"regemail\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" required\\n                 size=\\\"100\\\">\\n        </clr-input-container>\\n        <br/>\\n        <!--<span class=\\\"label label-danger\\\">Не используйте почтовые ящики сервиса mail.ru!</span>-->\\n\\n        <!--ПОЛЕ ПОЛНОЕ ИМЯ-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"registerfullname\\\" class=\\\"input-label clr-col-12\\\">Полное имя</label>\\n          <input type=\\\"text\\\" clrInput formControlName=\\\"fullname\\\" id=\\\"registerfullname\\\" name=\\\"fullname\\\" autocomplete=\\\"off\\\" size=\\\"100\\\">\\n        </clr-input-container>\\n\\n      </form>\\n\\n      <div class=\\\"row\\\">\\n        <button type=\\\"button\\\" (click)=\\\"register()\\\" class=\\\"btn btn-primary mt-1\\\">Зарегистрироваться</button>\\n      </div>\\n\\n    </div>\\n  </clr-modal>\\n\\n\\n<!--ФОРМА РЕДАКТИРОВАНИЯ ПОЛЬЗОВАТЕЛЬСКИХ ДАННЫХ-->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isUserDataEdit\\\">\\n  <h3 class=\\\"modal-title\\\">Редактирование пользовательских данных</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"userInfoForm\\\">\\n\\n      <!--ПОЛЕ ЛОГИН-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"editlogin\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"editlogin\\\" id=\\\"editlogin\\\" name=\\\"editlogin\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ПАРОЛЬ-->\\n\\n      <clr-password-container>\\n\\n        <label #label for=\\\"editpassword\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n        <input type=\\\"password\\\" clrPassword formControlName=\\\"editpassword\\\" id=\\\"editpassword\\\" name=\\\"editpassword\\\" autocomplete=\\\"off\\\"\\n               size=\\\"100\\\">\\n        </clr-password-container>\\n\\n      <br/>\\n\\n      <!-- ENCRYPTED MODE -->\\n\\n      <clr-checkbox-wrapper>\\n\\n        <label #label for=\\\"isencrypted\\\" class=\\\"input-label clr-col-12\\\">Шифрование данных на фронте</label>\\n        <input type=\\\"checkbox\\\" clrCheckbox  formControlName=\\\"isencrypted\\\" id=\\\"isencrypted\\\" name=\\\"isencrypted\\\">\\n        </clr-checkbox-wrapper>\\n\\n      <!--ПОЛЕ EMAIL-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"email\\\" class=\\\"input-label clr-col-12\\\">Email</label>\\n        <input type=\\\"email\\\" clrInput formControlName=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ ПОЛНОЕ ИМЯ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"fullname\\\" class=\\\"input-label clr-col-12\\\">Полное имя</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"fullname\\\" id=\\\"fullname\\\" name=\\\"fullname\\\" autocomplete=\\\"off\\\"\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ КЛЮЧ ШИФРОВАНИЯ -->\\n\\n      <clr-password-container *ngIf=\\\"user.userCryptoMode\\\">\\n\\n        <label #label for=\\\"cryptkey\\\" class=\\\"input-label clr-col-12\\\">Персональный ключ шифрования</label>\\n        <input type=\\\"password\\\" clrPassword formControlName=\\\"cryptkey\\\" id=\\\"cryptkey\\\" name=\\\"cryptkey\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-password-container>\\n      <br/>\\n\\n      <span *ngIf=\\\"user.userCryptoMode\\\" class=\\\"label label-warning\\\">Ключ хранится только у Вас. Запомните его и не теряйте.</span>\\n\\n\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"changeUserData()\\\" class=\\\"btn btn-primary mt-1\\\"  [disabled]=\\\"!userInfoForm.valid\\\">ИЗМЕНИТЬ</button>\\n      <button type=\\\"button\\\" *ngIf=\\\"user.userCryptoMode\\\" (click)=\\\"clearCryptoKey()\\\" class=\\\"btn btn-danger mt-1\\\"  [disabled]=\\\"!userInfoForm.valid\\\">СТЕРЕТЬ КЛЮЧ ШИФРОВАНИЯ</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n<!--</clr-main-container>-->\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {catchError, tap} from 'rxjs/operators';\nimport {HttpParams} from '@angular/common/http';\nimport {AuthService} from '../../../service/auth.service';\nimport {throwError, timer} from 'rxjs';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {Router} from '@angular/router';\nimport {HttpService} from '../../../service/http.service';\nimport {User} from '../../../dto/user';\nimport {environment} from '../../../../environments/environment';\nimport {Subscription} from 'rxjs/Subscription';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: 'header.component.html',\n  providers: [AuthService, HttpService],\n  styles: []\n})\nexport class HeaderComponent implements OnInit {\n\n\n  // --------------------------------- URL'ы -------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  private subscription: Subscription;\n  cryptokey = '';\n  myBaseUrl = this.SERVER_URL + '/rest/wishes';\n  _myBaseUrl = 'http://localhost:8080/rest/wishes';\n  usersUrl = this.myBaseUrl + '/users'; // основная ссылка на api\n  serviceMessage: MessageCode;\n\n  isLogin = false; // вывод диалогового окна логгирования\n  isRegister = false; // вывод диалогового окна регистрации\n  loginDropDownMenu: string[];\n  isUserDataEdit = false; // вывод диалогового информации о пользователе.\n  user: User;\n\n  loginForm = this.fb.group({\n    login: ['', [\n      Validators.required\n    ]],\n    password: ['', [\n      Validators.required\n    ]]\n  });\n\n  registerForm = this.fb.group({\n    login: ['', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9]+$/)\n    ]],\n    password: ['', [\n      Validators.required\n    ]],\n    email: ['', [\n      Validators.required,\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n    ]],\n    fullname: ['', []],\n  });\n\n  userInfoForm = this.fb.group({\n    editlogin: ['', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9]+$/)\n    ]],\n    editpassword: ['', []]\n    ,\n    isencrypted: [false, []],\n    email: ['', [\n      Validators.required,\n      Validators.email\n    ]],\n    fullname: ['', []],\n    cryptkey: ['', [Validators.required]]\n  });\n\n  constructor(private commonService: CommonService, private authService: AuthService, private httpService: HttpService,\n              private fb: FormBuilder, public router: Router) {\n  }\n\n  ngOnInit() {\n\n    const idToken = localStorage.getItem('token');\n    this.cryptokey = localStorage.getItem('cryptokey');\n    this.user = new User();\n\n    if (idToken) {\n      if (this.authService.isAuthenticated()) {\n        this.loginDropDownMenu = ['О пользователе', 'Выйти'];\n      } else {\n        this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n      }\n\n    } else {\n      this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n    }\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n      console.log('message ->' + error);\n      if (error != null) {\n        this.serviceMessage = error;\n        if (this.serviceMessage.messageType === this.serviceMessage.SESSION_EXPIRED) {\n          console.log('pizdec ->' + error);\n          this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n        }\n      }\n    }\n  );\n}\n\n\nclearCryptoKey() {\n  localStorage.removeItem('cryptokey');\n\n  this.userInfoForm.patchValue({\n    cryptkey: ''\n  });\n\n  this.isUserDataEdit = false;\n\n}\n\nloadUserData() {\n\n  this.httpService.isCryptoUser().pipe(\n    catchError(err => {\n      return this.errorHandler(err, 'Невозможно получить крипто-статус пользователя!');\n    })\n  ).subscribe(data => {\n\n    this.user.id = data.id;\n    this.user.login = data.login;\n    this.user.pwd = data.pwd;\n    this.user.userRole = data.userRole;\n    this.user.userCryptoMode = data.userCryptoMode;\n    this.user.creationDate = data.creationDate;\n    this.user.email = data.email;\n    this.user.fullname = data.fullname;\n\n    this.userInfoForm.patchValue({\n      editlogin: this.user.login,\n      editpassword: this.user.pwd,\n      isencrypted: this.user.userCryptoMode,\n      email: this.user.email,\n      fullname: this.user.fullname\n    });\n\n    if (data.userCryptoMode === false) {\n      this.userInfoForm.patchValue({\n        cryptkey: '111'\n      });\n    }\n  });\n}\n\nloginIconHandler(item\n:\nstring\n) {\n  if (item === 'Войти') {\n    this.isLogin = true;\n  } else if (item === 'Выйти') {\n    this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n    localStorage.removeItem('token');\n    this.router.navigate(['401']);\n  } else if (item === 'Зарегистрироваться') {\n    this.isRegister = true;\n  } else if (item === 'О пользователе') {\n    this.loadUserData();\n    this.isUserDataEdit = true;\n\n    const tempKey = localStorage.getItem('cryptokey');\n    this.userInfoForm.patchValue({\n      cryptkey: tempKey.toString(),\n    });\n\n  }\n}\n\nerrorHandler(err, message\n:\nstring\n) {\n\n  this.isLogin = false;\n  this.isUserDataEdit = false;\n  this.isRegister = false; // прячем окно регистрации\n\n  const errorType = new MessageCode();\n  if (message === 'LOGINERROR') {\n    this.sendMessagePush(errorType.WRONG_LOGIN);\n  } else {\n    if (err.error === 'SUCH_USER_EXIST') {\n      this.sendMessagePush(errorType.USER_DATA_CHANGE_SUCH_USER_EXISTS);\n    } else {\n      this.sendMessagePush(errorType.USER_DATA_CHANGE_SOME_ERROR);\n    }\n  }\n  return throwError(err);\n}\n\n\nchangeUserData() {\n\n  if ((this.user.login === this.userInfoForm.value.editlogin)\n    && (this.user.email === this.userInfoForm.value.email)\n    && (this.user.fullname === this.userInfoForm.value.fullname)) {\n\n    console.log('МЕНЯЕМ ТОЛЬКО CRYPTO-KEY');\n\n    const messageType = new MessageCode();\n    this.sendMessagePush(messageType.USER_DATA_CHANGE_OK);\n    this.isUserDataEdit = false;\n    localStorage.setItem('cryptokey', this.userInfoForm.value.cryptkey);\n    console.log('cryptokey is written - ' + this.userInfoForm.value.cryptkey);\n\n  } else {\n\n    this.user.login = this.userInfoForm.value.editlogin;\n    this.user.userCryptoMode = this.userInfoForm.value.isencrypted;\n    this.user.email = this.userInfoForm.value.email;\n    this.user.fullname = this.userInfoForm.value.fullname;\n\n    console.log('МЕНЯЕМ ВСЕ ЮЗЕРСКИЕ ДАННЫЕ');\n\n    this.httpService.updateUserData(this.user, this.usersUrl + '/' + this.user.id).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно выполнить редактирование пользовательских данных!');\n      })\n    ).subscribe(hero => {\n\n      const messageType = new MessageCode();\n      this.sendMessagePush(messageType.USER_DATA_CHANGE_OK);\n      this.isUserDataEdit = false;\n      localStorage.setItem('cryptokey', this.userInfoForm.value.cryptkey);\n      console.log('cryptokey is written - ' + this.userInfoForm.value.cryptkey);\n    });\n  }\n}\n\nsendMessagePush(message\n:\nstring\n) {\n  const errorType = new MessageCode();\n\n  errorType.messageType = message;\n  console.log('Error message- ' + errorType.messageType);\n  this.commonService.pushError(errorType);\n}\n\nregister() {\n\n  const newUser = new User();\n  newUser.login = this.registerForm.value.login;\n  newUser.pwd = this.registerForm.value.password;\n  newUser.fullname = this.registerForm.value.fullname;\n  newUser.email = this.registerForm.value.email;\n  newUser.userCryptoMode = false;\n  newUser.userRole = 'USER';\n\n  this.authService.register(newUser, this.usersUrl).pipe(\n    catchError(err => {\n      return this.errorHandler(err, 'REGISTERERROR');\n    })\n  ).subscribe(res => {\n    const messageType = new MessageCode();\n    this.sendMessagePush(messageType.REGISTER_OK);\n    this.isRegister = false;\n  });\n}\n\n\nsendLogin() {\n\n  const body = new HttpParams()\n    .set('username', this.loginForm.value.login)\n    .set('password', this.loginForm.value.password);\n\n  this.authService.login(body.toString())\n    .pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'LOGINERROR');\n      }))\n    .pipe(\n      tap(resp => {\n        console.log('header', resp.headers.get('Authorization'));\n        localStorage.removeItem('token');\n        localStorage.setItem('token', resp.headers.get('Authorization'));\n        console.log('storage', localStorage.getItem('token'));\n        this.isLogin = false;\n\n        this.authService.refreshToken();\n\n        this.router.navigate(['']);\n        this.loginDropDownMenu = ['О пользователе', 'Выйти'];\n        const message = new MessageCode();\n        this.sendMessagePush(message.AUTH_LOGIN_OK);\n      }))\n    .subscribe();\n}\n}\n","module.exports = \"<div class=\\\"content-container\\\">\\n  <div class=\\\"content-area\\\">\\n\\n    <clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n    <clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n    <clr-datagrid [(clrDgSingleSelected)]=\\\"selectedPaper\\\">\\n      <clr-dg-action-bar>\\n        <div class=\\\"actions-container\\\">\\n          <div class=\\\"row\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"openAddInstrument($event)\\\">Добавить</button>\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"getBonds(this.GET_BONDS_URL)\\\">Обновить</button>\\n            <button class=\\\"btn btn-danger\\\" [disabled]=\\\"!selectedPaper\\\" (click)=\\\"deleteBond()\\\">Удалить</button>\\n            <button class=\\\"btn btn-success\\\" [disabled]=\\\"!isDivsExist()\\\" (click)=\\\"isDivAndCouponModalShown = true\\\">{{getDivButtonName()}}</button>\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!bonds\\\" (click)=\\\"isReturnsInfoShown = true\\\">Доходы</button>\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"!bonds\\\" (click)=\\\"openCalendarAndLoadData()\\\">Календарь</button>\\n\\n            <!--  Список фильтрации -->\\n            <clr-dropdown>\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownToggle>Фильтр\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n              </button>\\n              <clr-dropdown-menu *clrIfOpen>\\n              <clr-dropdown>\\n                <button type=\\\"button\\\" clrDropdownTrigger>Тип бумаги</button>\\n                <clr-dropdown-menu>\\n                  <a *ngFor=\\\"let item of filtersForInstrumentType\\\" (click)=\\\"changeTypeFilter(item)\\\" clrDropdownItem>{{item}}</a>\\n                </clr-dropdown-menu>\\n              </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>План / Факт</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of filtersForStatus\\\" clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"clearFilters()\\\">Сбросить фильтры</button>\\n              </clr-dropdown-menu>\\n            </clr-dropdown>\\n\\n            <!--  Сортировка -->\\n            <clr-dropdown>\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownToggle>Сортировка\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n              </button>\\n              <clr-dropdown-menu *clrIfOpen>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Тикер</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'TICKER')\\\" clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Дивиденд</button>\\n                        <clr-dropdown-menu>\\n                          <clr-dropdown>\\n                            <button type=\\\"button\\\" clrDropdownTrigger>В рублях</button>\\n                            <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                              <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'DIV-RUB')\\\" clrDropdownItem>{{item}}</a>\\n                            </clr-dropdown-menu>\\n                          </clr-dropdown>\\n                          <clr-dropdown>\\n                            <button type=\\\"button\\\" clrDropdownTrigger>В %</button>\\n                            <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                              <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'DIV-PRCNT')\\\" clrDropdownItem>{{item}}</a>\\n                            </clr-dropdown-menu>\\n                          </clr-dropdown>\\n                        </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Цена</button>\\n                  <clr-dropdown-menu>\\n                    <clr-dropdown>\\n                      <button type=\\\"button\\\" clrDropdownTrigger>Текущая</button>\\n                      <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                        <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'CUR-PRICE')\\\" clrDropdownItem>{{item}}</a>\\n                      </clr-dropdown-menu>\\n                    </clr-dropdown>\\n                    <clr-dropdown>\\n                      <button type=\\\"button\\\" clrDropdownTrigger>Итоговая</button>\\n                      <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                        <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'FINAL-PRICE')\\\" clrDropdownItem>{{item}}</a>\\n                      </clr-dropdown-menu>\\n                    </clr-dropdown>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Рост всего</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'TOTAL-GROW')\\\" clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Рост сегодня</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'TODAY-GROW')\\\" clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"dropdown-item\\\"  (click)=\\\"clearSorting()\\\">Сбросить сортировку</button>\\n              </clr-dropdown-menu>\\n            </clr-dropdown>\\n          </div>\\n        </div>\\n      </clr-dg-action-bar>\\n      <clr-dg-column>Тикер</clr-dg-column>\\n      <clr-dg-column><ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Тип</ng-container></clr-dg-column>\\n      <clr-dg-column><ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Описание</ng-container></clr-dg-column>\\n      <clr-dg-column>Дивиденд</clr-dg-column>\\n      <clr-dg-column>%</clr-dg-column>\\n      <clr-dg-column><ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Биржа</ng-container></clr-dg-column>\\n      <clr-dg-column><ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Цена</ng-container></clr-dg-column>\\n      <clr-dg-column class=\\\"hidden-md-down\\\"><ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Лот / Куплено</ng-container></clr-dg-column>\\n      <clr-dg-column>Итого</clr-dg-column>\\n      <clr-dg-column><ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Рост</ng-container></clr-dg-column>\\n      <clr-dg-column class=\\\"hidden-md-down\\\"><ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Факт/План</ng-container></clr-dg-column>\\n      <clr-dg-column class=\\\"hidden-md-down\\\">Рост сегодня</clr-dg-column>\\n\\n      <clr-dg-row *clrDgItems=\\\"let item of bonds\\\" [clrDgItem]=\\\"item\\\">\\n        <clr-dg-cell>{{item.ticker}}</clr-dg-cell>\\n        <clr-dg-cell><span *ngIf=\\\"item.type=='SHARE'\\\" class=\\\"badge badge-success\\\">{{item.type}}</span>\\n          <span *ngIf=\\\"item.type=='BOND'\\\" class=\\\"badge badge-gray\\\">{{item.type}}</span></clr-dg-cell>\\n        <clr-dg-cell>{{item.description}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.dividends.divSum}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.dividends.percent}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.stockExchange}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.currentPrice}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.minLot}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.finalPrice}}</clr-dg-cell>\\n        <clr-dg-cell\\n          [ngStyle]=\\\"{'color': item.delta.deltaInRubles > 0 ? '#2ecc71' : item.delta.deltaInRubles < 0 ? '#e70c25' : '#faf9f9'}\\\">\\n          <span *ngIf=\\\"item.type=='SHARE'\\\">\\n            <svg *ngIf=\\\"item.delta.deltaInRubles<0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                 fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-down\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path fill-rule=\\\"evenodd\\\"\\n                    d=\\\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\\\"/>\\n            </svg>\\n            <svg *ngIf=\\\"item.delta.deltaInRubles>0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                 fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-up\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path fill-rule=\\\"evenodd\\\"\\n                    d=\\\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\\\"/>\\n            </svg>\\n            {{item.delta.deltaInRubles}} ({{item.delta.totalPercent}})%\\n          </span>\\n          <span *ngIf=\\\"item.type=='BOND'\\\">-</span>\\n        </clr-dg-cell>\\n        <clr-dg-cell><span *ngIf=\\\"!item.isBought\\\" class=\\\"badge badge-info\\\">PLAN</span><span *ngIf=\\\"item.isBought\\\"\\n                                                                                            class=\\\"badge badge-orange\\\">FACT</span>\\n        </clr-dg-cell>\\n        <clr-dg-cell\\n          [ngStyle]=\\\"{'color': item.delta.tinkoffDelta > 0 ? '#2ecc71' : item.delta.tinkoffDelta < 0 ? '#e70c25' : '#faf9f9'}\\\">\\n          <div *ngIf=\\\"item.type=='SHARE'\\\">\\n            <svg *ngIf=\\\"item.delta.tinkoffDelta<0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                 fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-down\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path fill-rule=\\\"evenodd\\\"\\n                    d=\\\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\\\"/>\\n            </svg>\\n            <svg *ngIf=\\\"item.delta.tinkoffDelta>0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                 fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-up\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path fill-rule=\\\"evenodd\\\"\\n                    d=\\\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\\\"/>\\n            </svg>\\n            {{item.delta.tinkoffDelta}} ({{item.delta.percent}}%)\\n          </div>\\n          <div *ngIf=\\\"item.type=='BOND'\\\">-</div>\\n        </clr-dg-cell>\\n      </clr-dg-row>\\n      <clr-dg-footer>\\n        <clr-dg-column-toggle>\\n          <clr-dg-column-toggle-title>Отобразить столбцы</clr-dg-column-toggle-title>\\n        </clr-dg-column-toggle>\\n      </clr-dg-footer>\\n    </clr-datagrid>\\n\\n    <!--    МОДАЛ С ДОБАВЛЕНИЕМ НОВОГО ИНСТРУМЕНТА-->\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isAddDialogShown\\\">\\n      <h3 class=\\\"modal-title\\\">Добавить инструмент</h3>\\n      <div class=\\\"modal-body\\\">\\n        <form clrForm [formGroup]=\\\"addInstrumentForm\\\">\\n\\n          <!--ПОЛЕ ТИКЕР-->\\n\\n          <clr-input-container>\\n            <label #label for=\\\"ticker\\\" class=\\\"input-label clr-col-12\\\">Тикер или название</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"ticker\\\"\\n                   id=\\\"ticker\\\"\\n                   name=\\\"ticker\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\"\\n                   (input)=\\\"onTickerFieldChangeForNewInstrumentDlg($event.target.value)\\\">\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <clr-datagrid *ngIf=\\\"isFoundInstrumentsBlockShown\\\" [(clrDgSingleSelected)]=\\\"selectedInstrument\\\"\\n                        (clrDgSingleSelectedChange)=\\\"selectionChanged($event)\\\">\\n            <clr-dg-column>Тикер</clr-dg-column>\\n            <clr-dg-column>Название</clr-dg-column>\\n            <clr-dg-column>Тип</clr-dg-column>\\n            <clr-dg-column>Биржа</clr-dg-column>\\n\\n            <clr-dg-row *ngFor=\\\"let element of instruments\\\" [clrDgItem]=\\\"element\\\">\\n              <clr-dg-cell>{{element.ticker}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.description}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.type}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.stockExchange}}</clr-dg-cell>\\n            </clr-dg-row>\\n          </clr-datagrid>\\n\\n          <!-- Цена покупки -->\\n          <clr-input-container *ngIf=\\\"selectedInstrument && !addInstrumentForm.value.isPlan\\\">\\n            <label #label for=\\\"price\\\" class=\\\"input-label clr-col-12\\\">Цена</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"price\\\"\\n                   id=\\\"price\\\"\\n                   name=\\\"price\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <!-- Лот -->\\n          <clr-input-container *ngIf=\\\"selectedInstrument && !addInstrumentForm.value.isPlan\\\">\\n            <label #label for=\\\"lot\\\" class=\\\"input-label clr-col-12\\\">Лот / Кол-во</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"lot\\\"\\n                   id=\\\"lot\\\"\\n                   name=\\\"lot\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <!-- Дата покупки -->\\n          <clr-date-container *ngIf=\\\"selectedInstrument && !addInstrumentForm.value.isPlan\\\">\\n            <label>Дата покупки</label>\\n            <input type=\\\"date\\\" clrDate name=\\\"purchaseDate\\\"\\n                   formControlName=\\\"purchaseDate\\\"\\n                   id=\\\"purchaseDate\\\"\\n                   min=\\\"2019-01-01\\\" (clrDateChange)=\\\"getPriceForCurrentDate($event)\\\"/>\\n          </clr-date-container>\\n\\n          <!-- Переключатель isPlan -->\\n          <clr-toggle-container *ngIf=\\\"selectedInstrument && isPlanAvailable()\\\">\\n            <clr-toggle-wrapper>\\n              <input type=\\\"checkbox\\\" clrToggle formControlName=\\\"isPlan\\\"\\n                     id=\\\"isPlan\\\"\\n                     name=\\\"isPlan\\\"/>\\n              <label>План?</label>\\n            </clr-toggle-wrapper>\\n          </clr-toggle-container>\\n\\n\\n        </form>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"selectedInstrument\\\">\\n          <button type=\\\"button\\\" [disabled]=\\\"addInstrumentForm.invalid\\\" (click)=\\\"addInstrument()\\\"\\n                  class=\\\"btn btn-primary mt-1\\\">Добавить\\n          </button>\\n        </div>\\n\\n      </div>\\n    </clr-modal>\\n\\n    <!--    МОДАЛ С ИНФОЙ ПО КУПОНАМ / ДИВАМ -->\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isDivAndCouponModalShown\\\">\\n      <h3 class=\\\"modal-title\\\">{{getModalFormName()}}</h3>\\n      <div class=\\\"modal-body\\\">\\n          <clr-datagrid *ngIf=\\\"selectedPaper && selectedPaper.dividends && selectedPaper.dividends.dividendList.length > 0\\\">\\n            <clr-dg-column>Дата</clr-dg-column>\\n            <clr-dg-column>Сумма</clr-dg-column>\\n            <clr-dg-column>Валюта</clr-dg-column>\\n\\n            <clr-dg-row *ngFor=\\\"let element of selectedPaper.dividends.dividendList\\\">\\n              <clr-dg-cell>{{element.registryCloseDate}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.value}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.currencyId}}</clr-dg-cell>\\n            </clr-dg-row>\\n          </clr-datagrid>\\n      </div>\\n    </clr-modal>\\n\\n    <!--    МОДАЛ С ИНФОЙ ПО ДОХОДАМ -->\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isReturnsInfoShown\\\">\\n      <h3 class=\\\"modal-title\\\">Доходы</h3>\\n      <div class=\\\"modal-body\\\">\\n\\n        <clr-tabs>\\n          <clr-tab>\\n            <button clrTabLink id=\\\"link1\\\">Доходы</button>\\n            <clr-tab-content id=\\\"content1\\\" *clrIfActive>\\n              <clr-datagrid *ngIf=\\\"returns\\\">\\n                <clr-dg-column>Инвестировано</clr-dg-column>\\n                <clr-dg-column>Купоны</clr-dg-column>\\n                <clr-dg-column>Дивы</clr-dg-column>\\n                <clr-dg-column>Рост акций</clr-dg-column>\\n                <clr-dg-column>Итого</clr-dg-column>\\n\\n                <clr-dg-row>\\n                  <clr-dg-cell>{{returns.invested}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.bondsReturns}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.sharesReturns}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.sharesDelta}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.sum}}</clr-dg-cell>\\n                </clr-dg-row>\\n              </clr-datagrid>\\n\\n            </clr-tab-content>\\n          </clr-tab>\\n          <clr-tab>\\n            <button clrTabLink>Нужно вложить</button>\\n            <clr-tab-content *clrIfActive=\\\"true\\\">\\n              <clr-datagrid *ngIf=\\\"returns\\\">\\n                <clr-dg-column>1000 руб.</clr-dg-column>\\n                <clr-dg-column>5000 руб.</clr-dg-column>\\n                <clr-dg-column>10 000 руб.</clr-dg-column>\\n                <clr-dg-column>30 000 руб.</clr-dg-column>\\n                <clr-dg-column>60 000 руб.</clr-dg-column>\\n\\n                <clr-dg-row>\\n                  <clr-dg-cell>{{returns.targets.ONE_THOUSAND_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.FIVE_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.TEN_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.THIRTY_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.SIXTY_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                </clr-dg-row>\\n              </clr-datagrid>\\n            </clr-tab-content>\\n          </clr-tab>\\n        </clr-tabs>\\n      </div>\\n    </clr-modal>\\n\\n    <!--    МОДАЛ С КАЛЕНДАРЕМ -->\\n\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isCalendarShown\\\">\\n      <h3 class=\\\"modal-title\\\">Календарь</h3>\\n      <div class=\\\"modal-body\\\">\\n\\n        <clr-stack-view>\\n\\n          <clr-stack-block *ngFor=\\\"let block of calc\\\">\\n            <clr-stack-label>{{block.monthRussianName}}</clr-stack-label>\\n            <clr-stack-block *ngFor=\\\"let child of block.data\\\">\\n              <clr-stack-label>{{child.registryCloseDate}}</clr-stack-label>\\n              <clr-stack-content>\\n                <span class=\\\"label label-info\\\">{{child.ticker}}</span>\\n                <span class=\\\"label label-success\\\">{{child.value | number:'2.'}}<span class=\\\"badge badge-orange\\\">{{child.currencyId}}\\n                </span></span>\\n                <span *ngIf=\\\"child.type === 'SHARE'\\\" class=\\\"badge badge-gray\\\">{{child.type}}</span>\\n                <span *ngIf=\\\"child.type === 'BOND'\\\" class=\\\"badge badge-purple\\\">{{child.type}}</span>\\n              </clr-stack-content>\\n            </clr-stack-block>\\n          </clr-stack-block>\\n        </clr-stack-view>\\n      </div>\\n    </clr-modal>\\n\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MessageCode} from '../../../service/message.code';\nimport {CommonService} from '../../../service/common.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {throwError, timer} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {HttpService} from '../../../service/http.service';\nimport {environment} from '../../../../environments/environment';\nimport {Bond} from '../../../dto/bond';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {FoundInstrument} from '../../../dto/FoundInstrument';\nimport {CurrentPrice} from '../../../dto/CurrentPrice';\nimport {NewInstrumentRq} from '../../../dto/NewInstrumentRq';\nimport * as moment from 'moment';\nimport {Moment} from 'moment';\nimport {Returns} from '../../../dto/returns';\nimport {Calendar} from '../../../dto/calendar';\n\n@Component({\n  selector: 'app-invest',\n  templateUrl: './investing.component.html',\n  providers: [HttpService],\n  styleUrls: ['./../main/main.component.css']\n})\nexport class InvestingComponent implements OnInit {\n\n  // --------------------------------- URL'ы ----------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  BASE_URL = this.SERVER_URL + '/investing';\n  GET_BONDS_URL = this.BASE_URL + '/consolidated'; // все бумаги\n  GET_BONDS_URL_WITH_FILTERING = this.BASE_URL + '/consolidated?filter='; // все бумаги\n  GET_BONDS_URL_WITH_SORT = this.BASE_URL + '/consolidated?sort='; // все бумаги\n  FIND_INSTRUMENTS_URL = this.BASE_URL + '/search'; // найти инструменты\n  GET_CURRENT_PRICE_BY_TICKER_URL = this.BASE_URL + '/price'; // текущая цена по тикеру\n  GET_PRICE_BY_TICKER_AND_DATE_URL = this.BASE_URL + '/price-by-date'; // текущая цена по тикеру\n  GET_RETURNS = this.BASE_URL + '/returns'; // доходы\n  CALENDAR = this.BASE_URL + '/calendar'; // календарь\n\n  // --------------------------------- ХРАНИЛИЩА ------------------------------------\n\n  bonds: Bond[] = []; // контейнер бумаг\n  returns: Returns; // доходы\n  calc: Calendar[] = []; // календарь\n\n  instruments: FoundInstrument[] = [];\n  currentPrice: CurrentPrice;\n  selectedInstrument: any; // выбранный инструмент. Используется при поиске инструментов.\n  selectedPaper: Bond; // выбранный инструмент. Используется в основном датагриде.\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  // --------------------------------- ПЕРЕКЛЮЧАТЕЛИ МОДАЛОВ -------------------------\n\n  isAddDialogShown: boolean; // открытие диалога добавления инструмента.\n  isDivAndCouponModalShown: boolean; // открытие диалога с инфой по купонам / модалам\n  isReturnsInfoShown: boolean; // открытие диалога с инфой по доходам\n  isCalendarShown: boolean; // открытие диалога с инфой по доходам\n  isFoundInstrumentsBlockShown: boolean; // ???\n\n  // ---------------------------------- ФОРМЫ ----------------------------------------\n  addInstrumentForm = this.fb.group({\n    ticker: ['', [\n      Validators.required,\n      Validators.maxLength(100)\n    ]],\n    price: ['', [\n      Validators.required,\n      Validators.maxLength(20)\n    ]],\n    lot: ['', [\n      Validators.required,\n      Validators.maxLength(5)\n    ]],\n    purchaseDate: ['', []],\n    isPlan: [false, []]\n  });\n\n  // ---------------------------------- ФИЛЬТРЫ ----------------------------------------\n\n  filtersForInstrumentType = ['Акция', 'Облигация'];\n  filtersForStatus = ['План', 'Факт']; // фильтры\n  sortModes = ['По возрастанию [A-z / 1-10]', 'По убыванию [Z-a / 10-1]'];\n\n  constructor(private commonService: CommonService, private route: ActivatedRoute, private httpService: HttpService,\n              private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.getBonds(this.GET_BONDS_URL);\n    this.route.queryParams.subscribe(params => {\n      const date = params.startdate;\n    });\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n      } else {\n        this.globalError = error;\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n          console.log('LOGIN OK');\n        } else if (this.globalError.messageType === this.globalError.REGISTER_OK) {\n          this.result = this.globalError.REGISTER_OK;\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n        } else {\n          if (this.globalError.messageType !== this.globalError.SESSION_EXPIRED) {\n            this.error = error.messageType;\n            timer(4000).subscribe(() => {\n              this.error = null;\n            });\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Открыть диалоговое окно добавления бумаги.\n   *\n   * event\n   */\n  openAddInstrument(event: any) {\n    this.isAddDialogShown = true;\n    this.addInstrumentForm.patchValue({\n      ticker: '',\n      price: ''\n    });\n  }\n\n  selectionChanged(event: any) {\n    this.getCurrentPriceAndLot(this.selectedInstrument.ticker);\n  }\n\n  /**\n   * Запросить цену по конкретной дате.\n   *\n   * event - выбранная дата\n   */\n  getPriceForCurrentDate(event: any) {\n    let currentDate: Moment;\n    if (event == null) {\n      currentDate = moment(new Date(), 'DD/MM/YYYY');\n    } else {\n      currentDate = moment(Date.parse(event));\n      if (currentDate == null) {\n        currentDate = moment(new Date(), 'DD/MM/YYYY');\n      }\n      console.log('Converted date after format: ', currentDate.format('YYYY-MM-DD'));\n\n      this.httpService.getData(this.GET_PRICE_BY_TICKER_AND_DATE_URL\n        + '?ticker='\n        + this.selectedInstrument.ticker\n        + '&purchaseDate='\n        + currentDate.format('YYYY-MM-DD')).pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'Невозможно запросить текущую цену бумаги!');\n        })\n      ).subscribe(data => {\n        this.currentPrice = data;\n        console.log('Получили текущую цену на конкретную дату: ', this.currentPrice.currentPrice);\n        this.addInstrumentForm.patchValue({\n          price: this.currentPrice.currentPrice\n        });\n      });\n    }\n  }\n\n  /**\n   * Изменение поля тикер при добавлении нового инструмента.\n   * @param searchValue - значение введенное в поле.\n   */\n  onTickerFieldChangeForNewInstrumentDlg(searchValue: string) {\n\n    if (searchValue.length > 0) {\n      this.isFoundInstrumentsBlockShown = true;\n      this.findInstruments(searchValue);\n      this.selectedInstrument = null;\n    } else {\n      this.selectedInstrument = null;\n      this.isFoundInstrumentsBlockShown = false;\n    }\n  }\n\n  /**\n   * Отобразить алерт!\n   *\n   *  text\n   *  mode\n   *  result\n   */\n  showAlert(text: string, mode: string, result: any) {\n\n    this.result = text;\n    this.selectedInstrument = null;\n    this.isAddDialogShown = false;\n    this.isDivAndCouponModalShown = false;\n    this.isReturnsInfoShown = false;\n    this.isCalendarShown = false;\n    this.isFoundInstrumentsBlockShown = false;\n    this.addInstrumentForm.value.isPlan = false;\n\n    timer(4000).subscribe(() => {\n      this.result = null;\n    });\n  }\n\n\n  /**\n   * Добавить инструмент. Вызывается из модала.\n   *\n   * payload\n   */\n  addInstrument() {\n\n    let payload: NewInstrumentRq;\n    const DATE_TIME_FORMAT = 'DD/MM/YYYY';\n    let currentDate: Moment;\n    if (!this.addInstrumentForm.value.purchaseDate) {\n      currentDate = moment(new Date(), DATE_TIME_FORMAT);\n    } else {\n      currentDate = moment(this.addInstrumentForm.value.purchaseDate, DATE_TIME_FORMAT);\n    }\n    console.log('Selected date after format: ', currentDate.format('YYYY-MM-DD'));\n\n    if (this.addInstrumentForm.value.isPlan) {\n      payload = new NewInstrumentRq(this.addInstrumentForm.value.ticker,\n        this.addInstrumentForm.value.isPlan,\n        this.selectedInstrument.type,\n        null,\n        null,\n        null,\n      );\n    } else {\n      payload = new NewInstrumentRq(this.addInstrumentForm.value.ticker,\n        this.addInstrumentForm.value.isPlan,\n        this.selectedInstrument.type,\n        this.addInstrumentForm.value.price,\n        this.addInstrumentForm.value.lot,\n        currentDate.format('YYYY-MM-DD'),\n      );\n    }\n\n    this.httpService.addInstrument(payload, this.BASE_URL).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить бумагу!');\n      })\n    ).subscribe(hero => {\n      this.showAlert('Инструмент успешно добавлен!', 'ADD MODE', hero);\n      this.getBonds(this.GET_BONDS_URL);\n    });\n  }\n\n  /**\n   * Запросить текущую цену бумаги и лот.\n   *\n   * @param keyword - искомое слово.\n   */\n  getCurrentPriceAndLot(keyword: string) {\n\n    this.httpService.getData(this.GET_CURRENT_PRICE_BY_TICKER_URL + '?ticker=' + keyword).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно запросить текущую цену бумаги!');\n      })\n    ).subscribe(data => {\n      this.currentPrice = data;\n      console.log('Получили текущую цену: ', this.currentPrice.currentPrice);\n      this.addInstrumentForm.patchValue({\n        ticker: this.currentPrice.ticker,\n        price: this.currentPrice.currentPrice,\n        lot: this.currentPrice.minLot\n      });\n    });\n  }\n\n  /**\n   * Поиск бумаги.\n   *\n   * @param keyword - искомое слово.\n   */\n  findInstruments(keyword: string) {\n\n    this.httpService.getData(this.FIND_INSTRUMENTS_URL + '?keyword=' + keyword).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно найти бумаги!');\n      })\n    ).subscribe(data => {\n      this.instruments = data.instruments;\n      console.log(this.instruments.length);\n    });\n  }\n\n  // Загрузить все бумаги\n  getBonds(url: string) {\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить бумаги!');\n      })\n    ).subscribe(data => {\n      this.bonds = data.bonds;\n      this.getReturns(this.GET_RETURNS);\n    });\n  }\n\n  /**\n   * Открыть модал с календарем и подгрузить данные.\n   *\n   */\n  openCalendarAndLoadData() {\n    this.isCalendarShown = true;\n    this.getCalendar(this.CALENDAR);\n  }\n\n\n  /**\n   * Календарь.\n   *\n   * url\n   */\n  getCalendar(url: string) {\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить календарь!');\n      })\n    ).subscribe(data => {\n      this.calc = data.calendar;\n    });\n  }\n\n  /**\n   * Выгрузить доходы по бумагам.\n   *\n   * url\n   */\n  getReturns(url: string) {\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить доходы!');\n      })\n    ).subscribe(data => {\n      this.returns = data;\n    });\n  }\n\n\n  /**\n   * Реакция на изменение типа фильтрации.\n   *\n   * item\n   */\n  changeTypeFilter(item: string) {\n\n    switch (item) {\n      case 'Акция': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'TYPE_SHARE');\n        break;\n      }\n      case 'Облигация': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'TYPE_BOND');\n        break;\n      }\n      case 'План': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'STATUS_PLAN');\n        break;\n      }\n      case 'Факт': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'STATUS_FACT');\n        break;\n      }\n      default: {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'NONE');\n        break;\n      }\n    }\n  }\n\n  /**\n   * Очистить все фильтры.\n   *\n   * item\n   */\n  clearFilters() {\n    this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'NONE');\n  }\n\n  /**\n   * Удалить бумагу.\n   *\n   *\n   */\n  deleteBond() {\n\n    this.httpService.deleteInstrument(this.selectedPaper.ticker, this.BASE_URL).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить бумагу!');\n      })\n    ).subscribe(data => {\n      this.getBonds(this.GET_BONDS_URL);\n    });\n  }\n\n\n  errorHandler(err, message: string) {\n    console.log('error - ' + err.error);\n    this.error = message;\n    console.log(err);\n    timer(4000).subscribe(() => {\n      this.error = null;\n    });\n\n    return throwError(err);\n  }\n\n  /**\n   * Переключение режимов сортировки.\n   *\n   * item\n   * type\n   */\n  changeSort(item: string, type: string) {\n    switch (type) {\n      case 'TICKER': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'TICKER_ASC' : 'TICKER_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'DIV-RUB': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'DIV_RUB_ASC' : 'DIV_RUB_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'DIV-PRCNT': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'DIV_PRCNT_ASC' : 'DIV_PRCNT_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'CUR-PRICE': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'CUR_PRICE_ASC' : 'CUR_PRICE_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'FINAL-PRICE': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'FINAL_PRICE_ASC' : 'FINAL_PRICE_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'TOTAL-GROW': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'TOTAL_GROW_ASC' : 'TOTAL_GROW_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'TODAY-GROW': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'TODAY_GROW_ASC' : 'TODAY_GROW_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      default: {\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + 'NONE');\n        break;\n      }\n    }\n  }\n\n  /**\n   * Очистка сортировки.\n   *\n   */\n  clearSorting() {\n    this.getBonds(this.GET_BONDS_URL_WITH_SORT + 'NONE');\n  }\n\n  /**\n   * Метод для фронта: проверяем доступность кнопки для вывода дивидендов / купонов\n   */\n  isDivsExist() {\n    return this.selectedPaper\n      && this.selectedPaper.dividends\n      && this.selectedPaper.dividends.dividendList != null\n      && this.selectedPaper.dividends.dividendList.length > 0;\n  }\n\n  /**\n   * Метод для фронта: меняем название кнопки в зависимости от различных данных выбранной бумаги.\n   */\n  getDivButtonName() {\n    if (this.selectedPaper) {\n      if (this.selectedPaper\n        && this.selectedPaper.dividends\n        && this.selectedPaper.dividends.dividendList != null\n        && this.selectedPaper.dividends.dividendList.length > 0) {\n        return this.selectedPaper.type === 'SHARE' ? 'Дивиденды' : 'Купоны';\n      } else {\n        return this.selectedPaper.type === 'SHARE' ? 'Нет дивидендов' : 'Нет купонов';\n      }\n    } else {\n      return 'Купоны / Дивы: выберете бумагу!';\n    }\n  }\n\n  /**\n   * Нельзя создать дубль бумаги в качестве запланированной, если по этой бумаге уже есть покупки.\n   */\n  isPlanAvailable() {\n    if (this.selectedInstrument) {\n      return (this.bonds.find(b => b.ticker === this.selectedInstrument.ticker) == null);\n    } else {\n      return false;\n    }\n    return this.bonds.find(b => b.ticker === 'TBER') == null;\n  }\n\n  /**\n   * Формируем заголовок модальной формы.\n   */\n  getModalFormName() {\n    if (this.selectedPaper) {\n      return this.selectedPaper.type === 'SHARE' ? 'Дивиденды по акции с тикером: ' + this.selectedPaper.ticker :\n        'Купоны по облигации с тикером: ' + this.selectedPaper.ticker;\n    } else {\n      return 'Данные по купонам / дивидендам';\n    }\n  }\n}\n","module.exports = \"<clr-main-container>\\n  <clr-header class=\\\"header\\\">\\n    <app-header></app-header>\\n  </clr-header>\\n  <div class=\\\"content-container\\\">\\n    <clr-vertical-nav [clr-nav-level]=\\\"1\\\">\\n      <a clrVerticalNavLink routerLink=\\\"../401\\\">О проекте</a>\\n      <a *ngIf=\\\"idToken && !isExpired\\\" clrVerticalNavLink routerLink=\\\"../\\\" >Главная</a>\\n      <a *ngIf=\\\"idToken && !isExpired\\\" clrVerticalNavLink routerLink=\\\"../investing\\\">Инвестиции</a>\\n    </clr-vertical-nav>\\n    <div class=\\\"content-area\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n  <app-session-timeout-modal></app-session-timeout-modal>\\n</clr-main-container>\\n\"","import {Component, OnInit, ChangeDetectionStrategy} from '@angular/core';\nimport {CommonService} from '../../service/common.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CommonService, JwtHelperService]\n})\nexport class LayoutComponent implements OnInit {\n\n  idToken: string;\n  timeLeft = 2;\n  interval;\n  jwtHelper = new JwtHelperService();\n  isExpired: boolean;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.idToken = localStorage.getItem('token');\n    this.isExpired = this.jwtHelper.isTokenExpired(this.idToken);\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        this.idToken = localStorage.getItem('token');\n        this.timeLeft = 2;\n      }\n    }, 1000);\n  }\n}\n","module.exports = \"\\n::ng-deep clr-icon:hover {\\n  transform: scale(1.2);\\n\\n}\\n\\n.dropdown .dropdown-toggle {\\n  margin: 5px;\\n}\\n\\n.sumallrow {\\n  background-color: #790909;\\n  color: #ffffff;\\n}\\n\\n::ng-deep  .main-container {\\n}\\n\\n.sumpriorrow {\\n  background-color: #299834;\\n  color: #ffdb51;\\n\\n}\\n\\n@media screen and (min-width: 1447px) {\\n  .ar-900-show {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 1447px) {\\n  .ar-900-hide {\\n    display:none!important;\\n  }\\n  .ar-900-show {\\n    display:initial!important;\\n  }\\n}\\n\\n@media screen and (max-width: 475px) {\\n  .ar-475-hide {\\n    display:none!important;\\n  }\\n\\n  .string-truncate {\\n    width: 120px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n  }\\n\\n}\\n\\n@media screen and (min-width: 475px) {\\n  .ar-475-show {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 360px) {\\n  .ar-360-hide {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 500px){\\n\\n    .table tr td:nth-child(3),\\n    .table tr th:nth-child(3) {\\n      display: none;\\n    }\\n    .table tr td:nth-child(4),\\n    .table tr th:nth-child(4) {\\n      display: none;\\n    }\\n\\n    .table tr td:nth-child(5),\\n    .table tr th:nth-child(5) {\\n      display: none;\\n    }\\n\\n    .table tr td:nth-child(6),\\n    .table tr th:nth-child(6) {\\n      display: none;\\n    }\\n\\n    }\\n\\n.fas .fa-arrow-up{\\n  background: #0c5460;\\n}\\n\\n.fa, .fas:hover {\\n  background: aqua;\\n}\\n\\n:host{\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L21haW4vbWFpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUdFLHFCQUFxQjs7QUFFdkI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYztBQUNoQjs7QUFFQTtBQUNBOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGNBQWM7O0FBRWhCOztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7QUFDRjs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDRjs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0VBQ3pCOztBQUVGOztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7QUFDRjs7QUFJQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0Y7O0FBRUE7O0lBRUk7O01BRUUsYUFBYTtJQUNmO0lBQ0E7O01BRUUsYUFBYTtJQUNmOztJQUVBOztNQUVFLGFBQWE7SUFDZjs7SUFFQTs7TUFFRSxhQUFhO0lBQ2Y7O0lBRUE7O0FBR0o7RUFDRSxtQkFBbUI7QUFDckI7O0FBSUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7O0FBRUEiLCJmaWxlIjoic3JjL2FwcC91aS9sYXlvdXQvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbjo6bmctZGVlcCBjbHItaWNvbjpob3ZlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG5cbn1cblxuLmRyb3Bkb3duIC5kcm9wZG93bi10b2dnbGUge1xuICBtYXJnaW46IDVweDtcbn1cblxuLnN1bWFsbHJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3OTA5MDk7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG46Om5nLWRlZXAgIC5tYWluLWNvbnRhaW5lciB7XG59XG5cbi5zdW1wcmlvcnJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTk4MzQ7XG4gIGNvbG9yOiAjZmZkYjUxO1xuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0NDdweCkge1xuICAuYXItOTAwLXNob3cge1xuICAgIGRpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ0N3B4KSB7XG4gIC5hci05MDAtaGlkZSB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxuICAuYXItOTAwLXNob3cge1xuICAgIGRpc3BsYXk6aW5pdGlhbCFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDc1cHgpIHtcbiAgLmFyLTQ3NS1oaWRlIHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG5cbiAgLnN0cmluZy10cnVuY2F0ZSB7XG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgfVxuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ3NXB4KSB7XG4gIC5hci00NzUtc2hvdyB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxufVxuXG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgLmFyLTM2MC1oaWRlIHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KXtcblxuICAgIC50YWJsZSB0ciB0ZDpudGgtY2hpbGQoMyksXG4gICAgLnRhYmxlIHRyIHRoOm50aC1jaGlsZCgzKSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDQpLFxuICAgIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDUpLFxuICAgIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNSkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDYpLFxuICAgIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNikge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICB9XG5cblxuLmZhcyAuZmEtYXJyb3ctdXB7XG4gIGJhY2tncm91bmQ6ICMwYzU0NjA7XG59XG5cblxuXG4uZmEsIC5mYXM6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiBhcXVhO1xufVxuOmhvc3R7XG5cbn1cbiJdfQ== */\"","module.exports = \"<clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n\\n<clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n\\n<clr-datagrid *ngIf=\\\"!monthOrdermode\\\">\\n  <clr-dg-action-bar>\\n    <div class=\\\"actions-container\\\">\\n      <div class=\\\"ar-900-hide\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"openEditWish($event, null, 2)\\\"> Добавить</button>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"getWishes(apiUrl)\\\"> Обновить</button>\\n        <button class=\\\"btn btn-secondary; hidden-md-down\\\" (click)=\\\"openAddSalaryModal($event)\\\"> Задать зарплату\\n        </button>\\n        <button class=\\\"btn btn-secondary; hidden-md-down\\\" (click)=\\\"openParseCsv($event)\\\" *ngIf=\\\"userRole==='ADMIN'\\\">\\n          Парсинг csv\\n        </button>\\n        <button class=\\\"{{filterMode ? 'btn btn-danger; hidden-md-down' : 'btn btn-secondary; hidden-md-down'}}\\\"\\n                (click)=\\\"filterWishes()\\\"> {{filterButtonText}}\\n        </button>\\n\\n        <clr-dropdown class=\\\"hidden-md-down\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n            РЕЖИМ ОТОБРАЖЕНИЯ\\n            <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n          </button>\\n          <clr-dropdown-menu *clrIfOpen>\\n            <label class=\\\"dropdown-header\\\">Режим отображения</label>\\n            <a *ngFor=\\\"let item of filterTypes\\\" (click)=\\\"changeFilter(item)\\\" clrDropdownItem>{{item}}</a>\\n          </clr-dropdown-menu>\\n        </clr-dropdown>\\n\\n        <clr-dropdown class=\\\"hidden-md-down\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n            СОРТИРОВКА\\n            <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n          </button>\\n          <clr-dropdown-menu *clrIfOpen>\\n            <label class=\\\"dropdown-header\\\">Сортировка</label>\\n            <a *ngFor=\\\"let item of mainSort\\\" (click)=\\\"sortMainList(item)\\\" clrDropdownItem>{{item}}</a>\\n          </clr-dropdown-menu>\\n        </clr-dropdown>\\n      </div>\\n\\n      <!--МИНИ-КНОПКИ ДЛЯ МОБИЛКИ-->\\n\\n      <div class=\\\"ar-900-show\\\">\\n        <div class=\\\"clr-row\\\" style=\\\"margin-left: 1%\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"openEditWish($event, null, 2)\\\"\\n                  aria-label=\\\"Добавить желание\\\">\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"getWishes(apiUrl)\\\" aria-label=\\\"Обновить\\\">\\n            <clr-icon shape=\\\"refresh\\\"></clr-icon>\\n          </button>\\n          <div class=\\\"ar-360-hide\\\">\\n            <button type=\\\"button\\\" (click)=\\\"openAddSalaryModal($event)\\\" class=\\\"btn btn-icon\\\"\\n                    aria-label=\\\"Задать зарплату\\\">\\n              <clr-icon shape=\\\"ruble\\\"></clr-icon>\\n            </button>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"{{filterMode ? 'btn btn-icon btn-danger' : 'btn btn-icon'}}\\\"\\n                  (click)=\\\"filterWishes()\\\" aria-label=\\\"Поиск\\\">\\n            <clr-icon shape=\\\"search\\\"></clr-icon>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"{{filterMode ? 'btn btn-icon btn-danger' : 'btn btn-icon'}}\\\"\\n                  (click)=\\\"summInfo()\\\" aria-label=\\\"Итоги\\\">\\n            <clr-icon shape=\\\"help\\\"></clr-icon>\\n          </button>\\n\\n          <clr-dropdown>\\n            <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" aria-label=\\\"Режимы\\\" clrDropdownTrigger>\\n              <clr-icon shape=\\\"eye\\\"></clr-icon>\\n              <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n            </button>\\n            <clr-dropdown-menu clrPosition=\\\"bottom-right\\\" *clrIfOpen>\\n              <label class=\\\"dropdown-header\\\">Режим отображения</label>\\n              <a *ngFor=\\\"let item of filterTypes\\\" (click)=\\\"changeFilter(item)\\\" clrDropdownItem>{{item}}</a>\\n            </clr-dropdown-menu>\\n          </clr-dropdown>\\n\\n          <div class=\\\"ar-475-hide\\\">\\n\\n            <clr-dropdown>\\n              <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" aria-label=\\\"Сортировка\\\" clrDropdownTrigger>\\n                <clr-icon shape=\\\"sort-by\\\"></clr-icon>\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n              </button>\\n              <clr-dropdown-menu *clrIfOpen>\\n                <label class=\\\"dropdown-header\\\">Сортировка</label>\\n                <a *ngFor=\\\"let item of mainSort\\\" (click)=\\\"sortMainList(item)\\\" clrDropdownItem>{{item}}</a>\\n              </clr-dropdown-menu>\\n            </clr-dropdown>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </clr-dg-action-bar>\\n  <clr-dg-column>Желание</clr-dg-column>\\n  <clr-dg-column>Цена</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"20\\\" class=\\\"hidden-md-down\\\">Приоритет</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">.</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">.</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">Ред.</clr-dg-column>\\n\\n  <clr-dg-row *clrDgItems=\\\"let item of wishes\\\" [clrDgItem]=\\\"item\\\">\\n    <clr-dg-cell><a (click)=\\\"openEditWish($event, item, 1)\\\">{{item.wish}}</a></clr-dg-cell>\\n    <clr-dg-cell style=\\\"text-align: center\\\">{{item.price | number:'2.'}}</clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">{{item.priority}}</clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n      <clr-icon shape=\\\"upload\\\" (click)=\\\"changePriority(item, 'down')\\\"></clr-icon>\\n    </clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n      <clr-icon shape=\\\"download\\\" (click)=\\\"changePriority(item, 'up')\\\"></clr-icon>\\n    </clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n      <clr-icon shape=\\\"edit\\\" (click)=\\\"openEditWish($event, item, 1)\\\"></clr-icon>\\n    </clr-dg-cell>\\n  </clr-dg-row>\\n\\n  <clr-dg-footer>\\n    <div class=\\\"clr-row\\\">\\n      <div class=\\\"ar-900-hide\\\">\\n      <span class=\\\"label label-danger\\\" style=\\\"margin-left: 1%\\\">ИТОГО<span\\n        class=\\\"badge badge-orange\\\">{{summAll | number:'2.'}} руб.</span></span>\\n        <span class=\\\"label label-danger\\\">Реализация<span class=\\\"badge badge-danger\\\">{{periodAll}} мес.</span></span>\\n        <span class=\\\"label label-success\\\">ИТОГО (PRIOR)<span class=\\\"badge badge-orange\\\">{{summPriority | number:'2.'}}\\n          руб.</span></span>\\n        <span class=\\\"label label-success\\\">Реализация<span\\n          class=\\\"badge badge-success\\\">{{periodPriority}} мес.</span></span>\\n        <span class=\\\"label label-gray\\\">Среднее время<span\\n          class=\\\"badge badge-blue\\\">{{implementationPeriod}}</span></span>\\n      </div>\\n\\n      <div>\\n        <clr-dg-pagination #pagination [clrDgPageSize]=\\\"15\\\">\\n          <clr-dg-page-size [clrPageSizeOptions]=\\\"[3,5,10,15,30,50,100]\\\" class=\\\"ar-475-hide\\\" style=\\\"margin-left: 4%\\\">\\n            жел/стр.\\n          </clr-dg-page-size>\\n          <span class=\\\"ar-360-hide\\\"> {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\n            из {{pagination.totalItems}} жел.</span>\\n        </clr-dg-pagination>\\n      </div>\\n    </div>\\n\\n  </clr-dg-footer>\\n</clr-datagrid>\\n\\n<div *ngIf=\\\"monthOrdermode\\\">\\n\\n  <div class=\\\"ar-900-hide\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"toMainTableMode()\\\"> Вернуться в табличный режим</button>\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"getWishesWithMonthGroupping('?sortType=all')\\\"> Обновить</button>\\n    <clr-dropdown>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n        СОРТИРОВКА\\n        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n      </button>\\n      <clr-dropdown-menu *clrIfOpen>\\n        <label class=\\\"dropdown-header\\\">Сортировка</label>\\n        <a *ngFor=\\\"let item of groupMonthSort\\\" (click)=\\\"sortGroupList(item)\\\" clrDropdownItem>{{item}}</a>\\n      </clr-dropdown-menu>\\n    </clr-dropdown>\\n  </div>\\n\\n  <!--КНОПКИ ДЛЯ МОБИЛКИ-->\\n  <div class=\\\"ar-900-show\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"toMainTableMode()\\\" aria-label=\\\"Вернуться в табличный режим\\\">\\n      <clr-icon shape=\\\"undo\\\"></clr-icon>\\n    </button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"getWishesWithMonthGroupping('?sortType=all')\\\"\\n            aria-label=\\\"Обновить\\\">\\n      <clr-icon shape=\\\"refresh\\\"></clr-icon>\\n    </button>\\n  </div>\\n\\n  <clr-tree-node *ngFor=\\\"let month of wishGroups\\\" [(clrExpanded)]=\\\"month.expanded\\\">\\n    <span class=\\\"{{month.colorClass}}\\\">{{month.monthName}} <span class=\\\"badge\\\">{{month.sum}}</span></span>\\n    <span [ngClass]=\\\"(month.balance>0)?'badge badge-success':'badge badge-danger'\\\">{{month.balance}}</span>\\n    <span *ngIf=\\\"month.overflow\\\" class=\\\"badge badge-danger\\\">Перебор!</span>\\n\\n    <clr-tree-node *ngFor=\\\"let items of month.wishList\\\">\\n      <a [routerLink]=\\\"\\\" (click)=\\\"editMonthGroupItem(items)\\\">\\n        <div class=\\\"string-truncate\\\">{{items.wish}}</div>\\n      </a>{{'&nbsp;| ' + items.price + ' |'}}\\n      <clr-icon shape=\\\"upload\\\" (click)=\\\"changePriorityMonth(items, 'up')\\\"></clr-icon>\\n      |\\n      <clr-icon shape=\\\"download\\\" (click)=\\\"changePriorityMonth(items, 'down')\\\"></clr-icon>\\n    </clr-tree-node>\\n\\n  </clr-tree-node>\\n\\n</div>\\n\\n<clr-modal [(clrModalOpen)]=\\\"isEdit\\\">\\n  <h3 class=\\\"modal-title\\\">{{isEditMode ? 'Редактировать желание' : 'Добавить желание'}}</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"form\\\">\\n\\n      <!--ПОЛЕ ДАТА СОЗДАНИЯ-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"creationDate\\\" class=\\\"input-label clr-col-12\\\">Дата создания</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"creationDate\\\" id=\\\"creationDate\\\" name=\\\"creationDate\\\"\\n               autocomplete=\\\"off\\\" readonly\\n               size=\\\"50\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ID-->\\n\\n      <clr-input-container hidden>\\n\\n        <label #label for=\\\"id\\\" class=\\\"input-label clr-col-12\\\">id</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"id\\\" id=\\\"id\\\" name=\\\"id\\\" autocomplete=\\\"off\\\" readonly required\\n               size=\\\"50\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ИМЯ-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"name\\\" class=\\\"input-label clr-col-12\\\">Название</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"name\\\"\\n               id=\\\"name\\\"\\n               name=\\\"name\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ОПИСАНИЕ-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"description\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"description\\\"\\n               id=\\\"description\\\"\\n               name=\\\"description\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ URL-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"url\\\" class=\\\"input-label clr-col-12\\\">URL</label>\\n        <input type=\\\"url\\\"\\n               clrInput\\n               formControlName=\\\"url\\\"\\n               id=\\\"url\\\"\\n               name=\\\"url\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ PRIORITY-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"priority\\\" class=\\\"input-label clr-col-12\\\">Приоритет</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"priority\\\"\\n               id=\\\"priority\\\"\\n               name=\\\"priority\\\"\\n               autocomplete=\\\"off\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ PRICE-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"price\\\" class=\\\"input-label clr-col-12\\\">Цена</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"price\\\"\\n               id=\\\"price\\\"\\n               name=\\\"price\\\"\\n               autocomplete=\\\"off\\\">\\n      </clr-input-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"addEditWish()\\\" class=\\\"btn btn-primary mt-1\\\">Сохранить</button>\\n      <button type=\\\"button\\\" (click)=\\\"deleteWish()\\\" *ngIf=\\\"isEditMode\\\" class=\\\"btn btn-danger mt-1\\\">Удалить</button>\\n      <button type=\\\"button\\\" (click)=\\\"realizeWish()\\\" *ngIf=\\\"isEditMode\\\" class=\\\"btn btn-success mt-1\\\">Реализовано\\n      </button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n<clr-modal [(clrModalOpen)]=\\\"isSalaryAdd\\\">\\n  <h3 class=\\\"modal-title\\\">Добавить зарплату</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"salaryForm\\\">\\n\\n      <!--ПОЛЕ SALARY-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"salary\\\" class=\\\"input-label clr-col-12\\\">Зарплата</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"salary\\\" id=\\\"salary\\\" name=\\\"salary\\\" autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ RESIDUAL SALARY-->\\n      <clr-input-container>\\n        <label #label for=\\\"residualSalary\\\" class=\\\"input-label clr-col-12\\\">Остаточная зарплата</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"residualSalary\\\" id=\\\"residualSalary\\\" name=\\\"residualSalary\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n      <br/>\\n      <span\\n        class=\\\"label label-warning\\\">Зарплата, которая остается у вас после всех трат. Расчет идет именно по ней.</span>\\n    </form>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"addSalary()\\\" class=\\\"btn btn-primary mt-1\\\">Добавить</button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<clr-modal [(clrModalOpen)]=\\\"isCsvParse\\\">\\n  <h3 class=\\\"modal-title\\\">Парсинг csv-файла</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"csvForm\\\">\\n\\n\\n      <!--ПОЛЕ FILE-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"csvfile\\\" class=\\\"input-label clr-col-12\\\">Укажите csv-файл</label>\\n        <input type=\\\"file\\\" clrInput formControlName=\\\"csvfile\\\" id=\\\"csvfile\\\" name=\\\"csvfile\\\" autocomplete=\\\"off\\\"\\n               required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <form [formGroup]=\\\"uploadForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n        <input type=\\\"file\\\" name=\\\"profile\\\" (change)=\\\"onFileSelect($event)\\\"/>\\n        <div>\\n          <button type=\\\"submit\\\">Upload</button>\\n        </div>\\n      </form>\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"sendCsvFile()\\\" class=\\\"btn btn-primary mt-1\\\">Парсить</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n<!--ФОРМА ФИЛЬТРАЦИИ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isFilterModal\\\">\\n  <h3 class=\\\"modal-title\\\">Фильтры и поиск</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"filterForm\\\">\\n\\n\\n      <!-- ПОЛЕ ПОИСКА / ФИЛЬТРАЦИИ ПО ЖЕЛАНИЮ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"wish\\\" class=\\\"input-label clr-col-12\\\">Желание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"wish\\\" id=\\\"wish\\\" name=\\\"wish\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"applyFilter()\\\" class=\\\"btn btn-primary mt-1\\\">Фильтровать</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n<!--ФОРМА РЕДАКТИРОВАНИЯ ЖЕЛАНИЯ ПРИ ПОМЕСЯЧНОЙ ГРУППИРОВКЕ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isMonthGroupModeWishEdit\\\">\\n  <h3 class=\\\"modal-title\\\">Изменить порядок желания</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"MonthGroupModeWishEdit\\\">\\n\\n      <!-- ПОЛЕ ЖЕЛАНИЕ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"selected_wish\\\" class=\\\"input-label clr-col-12\\\">Желание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"wish\\\" id=\\\"selected_wish\\\" name=\\\"wish\\\" autocomplete=\\\"off\\\"\\n               required readonly\\n               size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <div>\\n        <clr-select-container>\\n          <label #label for=\\\"month_field\\\" class=\\\"input-label clr-col-12\\\">Месяц</label>\\n          <select id=\\\"month_field\\\" formControlName=\\\"month\\\" clrSelect>\\n            <option *ngFor=\\\"let currentMonth of monthList\\\" [value]=\\\"currentMonth\\\">{{currentMonth}}</option>\\n          </select>\\n        </clr-select-container>\\n      </div>\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"applyMonthChange4Wish()\\\" class=\\\"btn btn-primary mt-1\\\">Принять</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n\\n<!--ФОРМА ВЫВОДА ИТОГОВЫХ ДАННЫХ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isSummInfoForm\\\">\\n  <h3 class=\\\"modal-title\\\">ИТОГО</h3>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div>\\n      <span class=\\\"label label-danger\\\">ВСЕ ЖЕЛАНИЯ <span\\n        class=\\\"badge badge-orange\\\">{{summAll | number:'2.'}} руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-danger\\\">Реализация<span class=\\\"badge badge-danger\\\">{{periodAll}} мес.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-success\\\">ИТОГО (PRIOR)<span class=\\\"badge badge-orange\\\">{{summPriority | number:'2.'}}\\n        руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-success\\\">Реализация<span\\n        class=\\\"badge badge-success\\\">{{periodPriority}} мес.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-gray\\\">Среднее время<span class=\\\"badge badge-blue\\\">{{implementationPeriod}}\\n        дней.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-purple\\\">Реализовано за все время<span class=\\\"badge badge-blue\\\">{{implemetedSummAllTime}}\\n        руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-purple\\\">Зарплата<span class=\\\"badge badge-blue\\\">{{lastSalary}}\\n        руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-light-blue\\\">Реализовано за тек.месяц<span\\n        class=\\\"badge badge-blue\\\">{{implemetedSummMonth}} руб.</span></span>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"isSummInfoForm=false\\\" class=\\\"btn btn-primary mt-1\\\">Закрыть</button>\\n    </div>\\n\\n\\n  </div>\\n</clr-modal>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../../service/http.service';\nimport {Wish} from '../../../dto/wish';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {throwError, timer} from 'rxjs';\nimport {Subscription} from 'rxjs/Subscription';\nimport {catchError, tap} from 'rxjs/operators';\nimport {Salary} from '../../../dto/salary';\nimport {HttpParams} from '@angular/common/http';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {WishListGroup} from '../../../dto/wish-list-group';\nimport {WishGroupItem} from '../../../dto/wish-group-item';\nimport {environment} from '../../../../environments/environment';\nimport {DatePipe} from '@angular/common';\nimport {SearchRq} from '../../../dto/searchwishes';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: 'main.component.html',\n  providers: [HttpService, DatePipe],\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  // --------------------------------- URL'ы -------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  myBaseUrl = this.SERVER_URL + '/rest/wishes';\n  apiUrl = this.myBaseUrl; // все желания // основная ссылка на api\n  priorityWishesFilterUrl = this.myBaseUrl + '?filter=PRIOR'; // приоритетные желания\n  allWishesFilterUrl = this.myBaseUrl + '?filter=ALL'; // все желания\n  clearWishesFilterUrl = this.myBaseUrl + '?filter=NONE'; // очистить фильтр желаний\n  sortWishesByNameUrl = this.myBaseUrl + '?sort=NAME'; // очистить фильтр желаний\n  sortWishesByPriceAscUrl = this.myBaseUrl + '?sort=PRICE_ASC'; // очистить фильтр желаний\n  sortWishesByPriceDescUrl = this.myBaseUrl + '?sort=PRICE_DESC'; // очистить фильтр желаний\n  sortWishesByPriorityUrl = this.myBaseUrl + '?sort=PRIOR'; // очистить фильтр желаний\n  wishesWithoutSortUrl = this.myBaseUrl + '?sort=ALL'; // очистить фильтр желаний\n  groupWishesUrl = this.myBaseUrl + '/groups';\n  userViewModeUrl = this.myBaseUrl + '/users/toggle';\n  apiGetSumm = this.myBaseUrl + '/summ'; // ссылка для получения сумм\n  apiSalary = this.myBaseUrl + '/salary'; // ссылка для получения сумм\n  parseUrl = this.myBaseUrl + '/parsecsv'; // url для парсинга csv\n  changePriorityUrl = this.myBaseUrl + '/changepriority'; // url для быстрого изменения приоритета\n  changePriorityMonthUrl = this.myBaseUrl + '/changemonth'; // url для быстрого изменения приоритета\n  changePriorityMonthManualyUrl = this.myBaseUrl + '/transferwish'; // url для быстрого изменения приоритета\n  searchWishesUrl = this.myBaseUrl + '/filter'; // поиск желаний\n\n\n  // --------------------------------- ПЕРЕМЕННЫЕ -------------------------------------\n\n  cryptokey = ''; // пользовательский ключ шифрования\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n  summAll = 0; // отображение сум по всем желаниям\n  summPriority = 0; // отображение сум по приоритетным желаниям\n  periodAll = 0; // период реализации для всего\n  periodPriority = 0; // период реализации для приоритетного\n  implementationPeriod = ''; // средний период реализации желаний\n  implemetedSummAllTime = ''; // общая сумма реализованного за все время\n  implemetedSummMonth = ''; // общая сумма реализованного за текущий месяц\n\n\n  filterMode = false; // период реализации для приоритетного\n  filterButtonText = 'ПОИСК/ФИЛЬТР'; // период реализации для приоритетного\n  monthOrdermode = false; // режим отображение дерева группировки по месяцам\n  isSalaryExists = false;\n  lastSalary = 0;\n  curDateFormated = '';\n  sortMode = 'По имени'; // глобальный переключатель типов сортировки\n\n// --------------------------------- ВКЛЮЧЕНИЕ МОДАЛОВ -------------------------------------\n\n  isEdit = false; // режим редактирования для отображения / или чтобы спрятать модальное окно\n  isSalaryAdd = false; // режим добавления зп\n  isEditMode = false; // редактировать или добавить\n  isCsvParse = false; // отправить на парсинг csv\n  isFilterModal = false; // вывести модал фильтрации\n  isMonthGroupModeWishEdit = false; // вывод формы редактирования желания при помесячной группировке\n  isSummInfoForm = false; // вывод формы с итоговой информацией (сумма всех желаний, время реализации)\n\n  // --------------------------------- ХРАНИЛИЩА -------------------------------------\n\n  wishes: Wish[] = []; // контейнер желаний\n  wishGroups: WishListGroup[] = []; // контейнер желаний\n  monthList = []; // контейнер месяцев\n\n  filterTypes = ['Все', 'Приоритет', 'Очистить фильтр', 'Помесячная группировка']; // фильтры\n  groupMonthSort = ['Без сортировки', 'По имени', 'По сумме [1..10]', 'По сумме [10..1]']; // сортировка помесячной группировки\n  mainSort = ['По имени', 'По сумме [1..10]', 'По сумме [10..1]', 'По приоритету', 'Без сортировки']; // сортировка помесячной группировки\n\n  // --------------------------------- ТЕКУЩИЙ ПОЛЬЗОВАТЕЛЬ И ЕГО ДАННЫЕ -------------------------------------\n\n  isUserCrypto: boolean;\n  userRole: string;\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  // --------------------------------- ФОРМЫ -------------------------------------\n  uploadForm: FormGroup; // Основная форма добавления / редактирования желаний\n  form = this.fb.group({\n    id: ['', []],\n    name: ['', [\n      Validators.required,\n      Validators.maxLength(160),\n    ]],\n    description: ['', []],\n    url: ['', []],\n    priority: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    price: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    creationDate: ['', []]\n  });\n\n  salaryForm = this.fb.group({ // форма ввода / редактирования зарплаты\n    salary: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    residualSalary: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]]\n  });\n\n  csvForm = this.fb.group({ // форма парсинга csv\n    csvfile: ['', []]\n  });\n\n  filterForm = this.fb.group({ // форма включения / выклюяения фильтров\n    wish: ['', [\n      Validators.required\n    ]]\n  });\n\n  MonthGroupModeWishEdit = this.fb.group({ // форма редактирования желания при помесячной группировке\n    id: ['', [\n      Validators.required\n    ]],\n    wish: ['', [\n      Validators.required\n    ]],\n    month: ['', [\n      Validators.required\n    ]]\n  });\n\n  constructor(private commonService: CommonService, private httpService: HttpService, private fb: FormBuilder, private datePipe: DatePipe) {\n    this.curDateFormated = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n  }\n\n  ngOnInit() {\n    this.isUserCrypto = false;\n    this.getWishes(this.apiUrl);\n    this.uploadForm = this.fb.group({\n      profile: ['']\n    });\n\n    this.getUserViewMode();\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n\n      if (error == null) {\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n      } else {\n        this.globalError = error;\n        this.isEdit = false;\n        this.isSalaryAdd = false;\n\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n          this.getWishes(this.apiUrl);\n        } else if (this.globalError.messageType === this.globalError.USER_DATA_CHANGE_OK) {\n          this.isEdit = false;\n          this.isSalaryAdd = false;\n          this.isCsvParse = false;\n          this.result = this.globalError.USER_DATA_CHANGE_OK;\n\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n\n        } else {\n          this.error = error.messageType;\n          timer(4000).subscribe(() => {\n            this.error = null;\n          });\n        }\n      }\n    });\n\n    // Закрываем пункт меню группировки по месяцам если нет зарплат\n\n    if (this.isSalaryExists) {\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр', 'Помесячная группировка']; // фильтры\n    } else {\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр']; // фильтры\n    }\n\n    // Проверка ключа шифрования\n    this.cryptokey = localStorage.getItem('cryptokey');\n    if ((this.isUserCrypto) && (!this.cryptokey)) {\n\n      this.error = 'Мы не смогли забрать с куки ваш ключ шифрования и при этом у вас включена эта настройка. ' +\n        'Задайте ключ шифрования меню О пользователе';\n\n      timer(4000).subscribe(() => {\n        this.error = null;\n      });\n    }\n  }\n\n  getUserViewMode() {\n\n    this.httpService.getData(this.userViewModeUrl + '/GET').pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить настройки пользовательского отображения!');\n      })\n    ).subscribe(data => {\n      console.log('data.viewMode => ' + data.viewMode);\n      if (data.viewMode === 'TREE') {\n        this.monthOrdermode = true;\n        this.getWishesWithMonthGroupping('?sortType=all'); // todo конечно полный пиздец!!!!!!\n      } else {\n        this.monthOrdermode = false;\n      }\n\n    });\n  }\n\n  setUserViewMode(mode: string) {\n\n    this.httpService.getData(this.userViewModeUrl + '/' + mode).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить настройки пользовательского отображения!');\n      })\n    ).subscribe(data => {\n      console.log('data.viewMode => ' + data.viewMode);\n    });\n  }\n\n\n  getWishesWithMonthGroupping(sorting: string) {\n\n    this.httpService.getData(this.groupWishesUrl + sorting).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить желания!');\n      })\n    ).subscribe(data => {\n\n      this.wishGroups = data.list;\n      this.monthOrdermode = true;\n\n      this.isCrypto();\n\n      if (this.isUserCrypto) {\n        console.log('decrypt-mode');\n        this.decryptOrderedWishes();\n      }\n    });\n  }\n\n// Вытащить список месяцев и лет, пришедший с бека\n  getMonths() {\n    this.monthList.length = 0;\n    this.wishGroups.forEach((element) => {\n      this.monthList.push(element.monthName + ' ' + element.year);\n    });\n  }\n\n  // Применить изменение (месячного) порядка для желания\n  applyMonthChange4Wish() {\n    console.log(this.MonthGroupModeWishEdit.value.month);\n\n    this.httpService.getData(this.changePriorityMonthManualyUrl + '?id=' +\n      this.MonthGroupModeWishEdit.value.id + '&month=' +\n      this.MonthGroupModeWishEdit.value.month).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен! ', 'ADD MODE', res);\n      this.getWishes(this.apiUrl);\n      this.getWishesWithMonthGroupping('?sortType=all');\n      this.isMonthGroupModeWishEdit = false;\n    });\n  }\n\n  // Редактирование желания при помесячной группировке\n  editMonthGroupItem(items: WishGroupItem) {\n    this.getMonths();\n    console.log(items.wish);\n    this.isMonthGroupModeWishEdit = true;\n    this.MonthGroupModeWishEdit.patchValue({\n      id: items.id,\n      wish: items.wish\n    });\n  }\n\n\n  // Изменить сортировку помесячной группировки\n  sortGroupList(item: string) {\n    if (item === 'По имени') {\n      this.getWishesWithMonthGroupping('?sortType=name');\n    } else if (item === 'По сумме [1..10]') {\n      this.getWishesWithMonthGroupping('?sortType=price-asc');\n    } else if (item === 'Без сортировки') {\n      this.getWishesWithMonthGroupping('?sortType=all');\n    } else {\n      this.getWishesWithMonthGroupping('?sortType=price-desc');\n    }\n  }\n\n  /**\n   * Изменить сортировку основной таблицы\n   *\n   * item - тип сортировки.\n   */\n  sortMainList(item: string) {\n\n    if (item === 'По имени') {\n      this.getWishes(this.sortWishesByNameUrl);\n    } else if (item === 'По сумме [1..10]') {\n      this.getWishes(this.sortWishesByPriceAscUrl);\n    } else if (item === 'По сумме [10..1]') {\n      this.getWishes(this.sortWishesByPriceDescUrl);\n    } else if (item === 'По приоритету') {\n      this.getWishes(this.sortWishesByPriorityUrl);\n    } else {\n      this.getWishes(this.wishesWithoutSortUrl);\n    }\n  }\n\n  /**\n   * Фильтрация списка желаний: ALL / PRIOR / NONE\n   * item - выбранный тип фильтрации\n   */\n  changeFilter(item: string) {\n\n    if (item === 'Все') {\n      this.getWishes(this.allWishesFilterUrl);\n    } else if (item === 'Помесячная группировка') {\n      this.getWishesWithMonthGroupping('?sortType=all');\n      this.setUserViewMode('TREE');\n    } else if (item === 'Очистить фильтр') {\n      this.getWishes(this.clearWishesFilterUrl);\n    } else {\n      this.getWishes(this.priorityWishesFilterUrl);\n    }\n  }\n\n  /*up(event: any, item: Wish) {\n    item.priority = item.priority + 1;\n    this.wishes.sort((a, b) => a.priority - b.priority);\n  }\n\n\n  down(event: any, item: Wish) {\n\n    item.priority = item.priority - 1;\n    if (item.priority < 1) {\n      item.priority = 1;\n    }\n    this.wishes.sort((a, b) => a.priority - b.priority);\n  }*/\n\n\n  isCrypto() {\n\n    this.httpService.isCryptoUser().pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить крипто-статус пользователя!');\n      })\n    ).subscribe(data => {\n      this.isUserCrypto = data.userCryptoMode;\n      this.userRole = data.userRole;\n    });\n  }\n\n\n  decryptWishes() {\n    console.log('decrypt method');\n    this.wishes.forEach((element) => {\n      element.wish = this.commonService.convertText('decr', element.wish, this.cryptokey);\n      element.description = this.commonService.convertText('decr', element.description, this.cryptokey);\n      element.url = this.commonService.convertText('decr', element.url, this.cryptokey);\n    });\n  }\n\n  decryptOrderedWishes() {\n    console.log('decrypt method for ordered wishes');\n    this.wishGroups.forEach((month) => {\n      month.wishList.forEach((element) => {\n        element.wish = this.commonService.convertText('decr', element.wish, this.cryptokey);\n      });\n    });\n  }\n\n  // Загрузить все желания в табличном режиме.\n  getWishes(url: string) {\n\n    this.isCrypto();\n\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить желания!');\n      })\n    ).subscribe(data => {\n      this.wishes = data.list;\n      console.log(this.wishes);\n\n      if (this.isUserCrypto) {\n        this.decryptWishes();\n      }\n    });\n\n\n    this.httpService.getData(this.apiGetSumm).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно посчитать итоговые стоимости!');\n      })\n    ).subscribe(data => {\n      this.summAll = data.all;\n      this.summPriority = data.priority;\n      this.periodAll = data.allPeriodForImplementation;\n      this.periodPriority = data.priorityPeriodForImplementation;\n      this.implementationPeriod = data.averageImplementationTime;\n\n      this.implemetedSummAllTime = data.implemetedSummAllTime;\n      this.implemetedSummMonth = data.implemetedSummMonth;\n\n      this.isSalaryExists = true;\n      this.lastSalary = data.lastSalary;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр', 'Помесячная группировка'];\n      console.log('Sal: ' + data.lastSalary);\n    });\n  }\n\n  /**\n   * Поиск желаний.\n   */\n  searchWishes() {\n\n    const payload = new SearchRq(this.filterForm.value.wish);\n    this.httpService.searchWishes(payload, this.searchWishesUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно найти желания!');\n      })\n    ).subscribe(data => {\n      this.wishes = data.list;\n      console.log(this.wishes);\n      console.log('SORTING:' + this.sortMode);\n      console.log('FILTERING:' + this.apiUrl);\n      this.sortMainList(this.sortMode);\n    });\n  }\n\n  deleteWish() {\n    this.httpService.deleteWish(this.form.value.id, this.myBaseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить желание!');\n      })\n    )\n      .subscribe(res => {\n        this.showAlert('Желание с id [' + this.form.value.id + '] успешно удалено!', 'ADD MODE', res);\n      });\n  }\n\n  toMainTableMode() {\n\n    this.monthOrdermode = false;\n    this.setUserViewMode('TABLE');\n\n  }\n\n  errorHandler(err, message: string) {\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    console.log('error - ' + err.error);\n    if (err.error === 'ERR-01') {\n      this.error = 'У вас нет сохраненных зарплат! Невозможно посчитать сроки реализации! Добавьте хотя бы одну зарплату!';\n      this.isSalaryExists = false;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр'];\n    } else if (err.error === 'ERR-02') {\n      this.error = 'У вас нет сохраненных желаний! Добавьте хотя бы одно желание!';\n      this.isSalaryExists = false;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр'];\n    } else {\n      this.error = message;\n    }\n    console.log(err);\n    timer(4000).subscribe(() => {\n      this.error = null;\n    });\n\n    return throwError(err);\n  }\n\n  openEditWish(event: any, item: Wish, isedit: number) {\n\n    // Если это юзер с шифрованием на фронте и при этом у него не задан ключ\n    if ((!this.cryptokey) && (this.isUserCrypto)) {\n\n      this.error = 'Задайте ключ шифрование в меню О пользователе. ' +\n        'Без этого при включенном режиме шифрования пользовательских данных мы не можем добавить желание!';\n      timer(4000).subscribe(() => {\n        this.error = null;\n      });\n    } else {\n\n      if (isedit === 1) {\n        this.isEdit = true;\n        this.isEditMode = true;\n\n        this.form.patchValue({\n          id: item.id,\n          name: item.wish,\n          description: item.description,\n          url: item.url,\n          priority: item.priority,\n          price: item.price,\n          creationDate: item.creationDate\n        });\n\n      } else {\n        this.isEdit = true;\n        this.isEditMode = false;\n\n        this.form.patchValue({\n          id: 1,\n          name: '',\n          description: 'какое-то описание',\n          url: '',\n          priority: 1,\n          price: 0,\n          creationDate: this.curDateFormated\n        });\n\n      }\n    }\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadForm.get('profile').setValue(file);\n    }\n  }\n\n  // Отправить файл на парсинг\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('csvfile', this.uploadForm.get('profile').value);\n    console.log(this.uploadForm.get('profile').value);\n    this.httpService.sendFile(formData, this.parseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно спарсить файл !');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Парсинг выполнен! Добавлено: ' + res.itemsAdded + ' желаний!', 'PARSE MODE', res);\n    });\n\n  }\n\n  // Открыть диалог выбора csv-файла для парсинга на сервере.\n  openParseCsv(event: any) {\n    this.isCsvParse = true;\n  }\n\n\n  // Добавить в Мультипар-форму подгруженый csv-файл\n  sendCsvFile() {\n\n    const reader = new FileReader();\n    const file = this.csvForm.value.csvfile;\n    reader.readAsArrayBuffer(file);\n    console.log(file.name);\n    this.isCsvParse = false;\n  }\n\n  openAddSalaryModal(event: any) {\n\n    this.isSalaryAdd = true;\n    this.isEditMode = false;\n    this.isEditMode = false;\n\n    this.salaryForm.patchValue({\n      salary: 1,\n      residualSalary: 1\n    });\n  }\n\n  showAlert(text: string, mode: string, result: any) {\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    this.isCsvParse = false;\n    this.result = text;\n    timer(4000).subscribe(() => {\n      this.result = null;\n    });\n  }\n\n  addSalary() {\n    const salary = new Salary(this.salaryForm.value.salary,\n      this.salaryForm.value.residualSalary);\n\n    this.httpService.sendSalary(salary, this.apiSalary).pipe(\n      catchError(err => {\n\n        return this.errorHandler(err, 'Невозможно добавить зарплату!');\n      })\n    ).subscribe(hero => {\n      this.showAlert('Зарплата успешно обновлена!', 'ADD MODE', hero);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n  realizeWish() {\n    const wish = new Wish(this.form.value.id,\n      this.form.value.name,\n      this.form.value.price,\n      this.form.value.priority,\n      false,\n      this.form.value.description,\n      this.form.value.url,\n      true\n    );\n    if (!this.cryptokey) {\n      console.log('cryptokey is null. Try to fix it');\n      this.cryptokey = localStorage.getItem('cryptokey');\n    }\n\n    if (this.isUserCrypto) {\n      wish.wish = this.commonService.convertText('encrypt', wish.wish, this.cryptokey);\n      wish.description = this.commonService.convertText('encrypt', wish.description, this.cryptokey);\n      wish.url = this.commonService.convertText('encrypt', wish.url, this.cryptokey);\n      console.log('encrypted wish', wish.wish);\n    }\n\n    this.httpService.updateWish(wish, this.myBaseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно обновить желание!');\n      })\n    ).subscribe(hero => {\n\n      this.showAlert('Желание с id [' + wish.id + '] успешно обновлено!', 'ADD MODE', hero);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n\n  addEditWish() {\n\n    const wish = new Wish(this.form.value.id,\n      this.form.value.name,\n      this.form.value.price,\n      this.form.value.priority,\n      false,\n      this.form.value.description,\n      this.form.value.url,\n      false\n    );\n\n    if (!this.cryptokey) {\n      console.log('cryptokey is null. Try to fix it');\n      this.cryptokey = localStorage.getItem('cryptokey');\n    }\n\n    if (this.isUserCrypto) {\n      wish.wish = this.commonService.convertText('encrypt', wish.wish, this.cryptokey);\n      wish.description = this.commonService.convertText('encrypt', wish.description, this.cryptokey);\n      wish.url = this.commonService.convertText('encrypt', wish.url, this.cryptokey);\n      console.log('encrypted wish', wish.wish);\n    }\n\n    if (this.isEditMode) {\n\n      this.httpService.updateWish(wish, this.myBaseUrl).pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'Невозможно обновить желание!');\n        })\n      ).subscribe(hero => {\n\n        this.showAlert('Желание с id [' + wish.id + '] успешно обновлено!', 'ADD MODE', hero);\n        this.getWishes(this.apiUrl);\n      });\n\n    } else {\n      this.httpService.sendData(wish, this.myBaseUrl).pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'Невозможно добавить желание!');\n        })\n      ).subscribe(hero => {\n        this.showAlert('Желание успешно добавлено!', 'ADD MODE', hero);\n        this.getWishes(this.apiUrl);\n      });\n    }\n  }\n\n  changePriority(item: Wish, move: string) {\n\n    console.log('change priority');\n    console.log('URL ->' + this.changePriorityUrl + '/' + item.id + '/' + move);\n    this.httpService.getData(this.changePriorityUrl + '/' + item.id + '/' + move).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен на ' + res.priority, 'ADD MODE', res);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n\n  changePriorityMonth(item: WishGroupItem, move: string) {\n\n    console.log('URL ->' + this.changePriorityMonthUrl + '/' + item.id + '/' + move);\n    this.httpService.getData(this.changePriorityMonthUrl + '/' + item.id + '/' + move).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен! ', 'ADD MODE', res);\n\n      this.getWishes(this.apiUrl);\n      this.getWishesWithMonthGroupping('?sortType=all');\n\n    });\n  }\n\n\n  // Показать окно включения/выключения фильтров\n  filterWishes() {\n    console.log('filter mode = ', this.filterMode);\n    if (!this.filterMode) {\n      this.isFilterModal = true;\n    } else {\n      this.getWishes(this.apiUrl);\n      this.filterMode = false;\n      this.filterButtonText = 'ПОИСК/ФИЛЬТР';\n    }\n  }\n\n  // Показать окно c итогами: стоимость всех желаний, время реализации и все такое\n  summInfo() {\n    this.isSummInfoForm = true;\n  }\n\n\n// ЛОГИН и АВТОРИЗАЦИЯ\n\n  login(login: string, pwd: string) {\n\n    const body = new HttpParams()\n      .set('username', login)\n      .set('password', pwd);\n\n    this.httpService.login(body.toString())\n      .pipe(\n        tap(resp => {\n          console.log('header', resp.headers.get('Authorization'));\n          sessionStorage.setItem('token', resp.headers.get('Authorization'));\n          localStorage.setItem('token', resp.headers.get('Authorization'));\n          console.log('storage', localStorage.getItem('token'));\n        }))\n      .subscribe();\n  }\n\n  /**\n   * Поиск желаний. Действие после нажатие кнопки Найти в модальном окне.\n   */\n  applyFilter() {\n\n    this.isFilterModal = false;\n    this.filterMode = true; // включаем filtermode\n    this.filterButtonText = 'ВЫКЛЮЧИТЬ ФИЛЬТР';\n\n    this.searchWishes();\n\n    /*this.wishes = this.wishes.filter(\n      wish => wish.wish.toLowerCase().includes(this.filterForm.value.wish.toLowerCase()));*/\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9zZXNzaW9uLXRpbWVvdXQtbW9kYWwvc2Vzc2lvbi10aW1lb3V0LW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<clr-modal [clrModalOpen]=\\\"userInactive | async\\\" [clrModalClosable]=\\\"false\\\" class=\\\"session-timeout-modal\\\">\\n  <h3 class=\\\"modal-title\\\">\\n    Сессия истекла\\n  </h3>\\n  <div class=\\\"modal-body\\\">\\n    <p>\\n      Ваша сессия истекла! Необходимо войти еще раз!\\n    </p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">\\n      Продолжить\\n    </button>\\n  </div>\\n\\n</clr-modal>\\n\"","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, HostListener, Input} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {filter} from 'rxjs/operators';\nimport {MessageCode} from '../../../service/message.code';\nimport {CommonService} from '../../../service/common.service';\n\n\n@Component({\n  selector: 'app-session-timeout-modal',\n  templateUrl: './session-timeout-modal.component.html',\n  styleUrls: ['./session-timeout-modal.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SessionTimeoutModalComponent {\n\n  userActivity;\n\n  sessionTimeout: number = 864000;\n  // sessionTimeout: number = 3;\n  userInactive = new BehaviorSubject(false);\n  consoleWatcher = '';\n\n  constructor(\n    private router: Router,\n    private commonService: CommonService,\n    private cdr: ChangeDetectorRef) {\n    this.router.events\n      .pipe(\n        filter(e => e instanceof NavigationEnd),\n      )\n      .subscribe(() => {\n        clearTimeout(this.userActivity);\n        this.setTimeout();\n\n      });\n\n  }\n\n  setTimeout() {\n\n    if (this.router.url.indexOf('/401') === -1) { // отключаем проверку сессии для 401-й странички\n      this.userActivity = setTimeout(() => this.userInactive.next(true), this.sessionTimeout * 1000);\n    }\n  }\n\n  @HostListener('window:mousemove')\n  @HostListener('window:click')\n  @HostListener('window:keyup')\n  refreshUserState() {\n    clearTimeout(this.userActivity);\n    this.setTimeout();\n  }\n\n  logout() {\n    clearTimeout(this.userActivity);\n\n    localStorage.removeItem('token');\n    this.router.navigate(['401']);\n\n    clearTimeout(this.userActivity);\n    this.userInactive.next(false);\n    this.cdr.markForCheck();\n    const errorType = new MessageCode();\n    this.sendMessagePush();\n  }\n\n  sendMessagePush() {\n    const errorType = new MessageCode();\n    errorType.messageType = errorType.SESSION_EXPIRED;\n    this.commonService.pushError(errorType);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  template: `\n      <clr-vertical-nav [clr-nav-level]=\"1\">\n        <a clrVerticalNavLink routerLink=\"../401\" routerLinkActive=\"active\">О проекте-хуекте</a>\n        <a clrVerticalNavLink routerLink=\"../\" routerLinkActive=\"active\">Главная</a>\n      </clr-vertical-nav>\n  `,\n  styles: []\n})\nexport class SidebarComponent implements OnInit {\n\n  private idToken: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n   this.idToken = localStorage.getItem('token');\n  }\n\n}\n","module.exports = \"@media screen and (max-width: 500px){\\n\\n  .sidenav {\\n    min-width: 1%;\\n    visibility: hidden;\\n    /*background: #ea1e2c;*/\\n  }\\n}\\n\\n:host{\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L3VuYXV0aG9yaXplL3VuYXV0aG9yaXplLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUU7SUFDRSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHVCQUF1QjtFQUN6QjtBQUNGOztBQUVBO0FBQ0EiLCJmaWxlIjoic3JjL2FwcC91aS9sYXlvdXQvdW5hdXRob3JpemUvdW5hdXRob3JpemUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KXtcblxuICAuc2lkZW5hdiB7XG4gICAgbWluLXdpZHRoOiAxJTtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgLypiYWNrZ3JvdW5kOiAjZWExZTJjOyovXG4gIH1cbn1cblxuOmhvc3R7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"content-container\\\">\\n  <div class=\\\"content-area\\\">\\n\\n    <clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n    <clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n\\n    <h1>Дорогой друг!</h1>\\n    <p>\\n      Сейчас ты находишься на страничке проекта arNote. Это сервис хранения желаний, позволяющий считать сроки реализации, различным образом категорировать и управлять вашими желаниями. Для работы с сервисом необходимо получить логин и пароль от автора сервиса, в будущем будет организована свободная регистрация.\\n    </p>\\n    <p>\\n      Одни из Важных преимуществ сервиса планируется сделать шифрование данных на стороне клиента, что обеспечит полную конфиденциальность. То есть администратор / автор сервиса не сможет прочитать Ваши данные ни при каких обстоятельствах, так как все Ваши записи будет шифрованы по уникальному ключу, который знаете только Вы.\\n    </p>\\n    <p>\\n      По всем вопросам просьба писать автору на <i>antonromanov@list.ru.</i>\\n    </p>\\n\\n  </div>\\n  <!--<app-sidebar class=\\\"sidenav\\\"></app-sidebar>-->\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CommonService} from '../../../service/common.service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MessageCode} from '../../../service/message.code';\nimport {timer} from 'rxjs';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\n\n\n@Component({\n  selector: 'app-unauthorize',\n  templateUrl: './unauthorize.component.html',\n  styleUrls: ['./unauthorize.component.css']\n})\nexport class UnauthorizeComponent implements OnInit {\n\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  constructor(private commonService: CommonService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n\n      } else {\n\n        this.globalError = error;\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n        } else if (this.globalError.messageType === this.globalError.REGISTER_OK) {\n          this.result = this.globalError.REGISTER_OK;\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n        } else {\n          if (this.globalError.messageType !== this.globalError.SESSION_EXPIRED) {\n            this.error = error.messageType;\n            timer(4000).subscribe(() => {\n              this.error = null;\n            });\n          }\n        }\n      }\n    });\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutComponent} from './layout/layout.component';\nimport {HeaderComponent} from './layout/header/header.component';\nimport {SidebarComponent} from './layout/sidebar/sidebar.component';\nimport {InvestingComponent} from './layout/investing/investing.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ClarityModule} from '@clr/angular';\nimport {MainComponent} from './layout/main/main.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {EditComponent} from './layout/edit/edit.component';\nimport {BasicAuthHtppInterceptorService} from '../service/basicauthhtppInterceptorservice';\nimport {AppRoutingModule} from '../app-routing/app-routing.module';\nimport {UnauthorizeComponent} from './layout/unauthorize/unauthorize.component';\nimport {JwtHelperService, JWT_OPTIONS} from '@auth0/angular-jwt';\nimport {SessionTimeoutModalComponent} from './layout/session-timeout-modal/session-timeout-modal.component';\n\n\n@NgModule({\n  declarations: [LayoutComponent,\n    HeaderComponent,\n    SidebarComponent,\n    MainComponent,\n    EditComponent,\n    UnauthorizeComponent,\n    InvestingComponent,\n    SessionTimeoutModalComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    ClarityModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: BasicAuthHtppInterceptorService, multi: true},\n    {provide: JWT_OPTIONS, useValue: JWT_OPTIONS},\n    JwtHelperService\n  ],\n  exports: [LayoutComponent]\n})\nexport class UiModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}