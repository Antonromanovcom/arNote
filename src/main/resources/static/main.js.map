{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dto/salary.ts","webpack:///./src/app/dto/user.ts","webpack:///./src/app/dto/wish.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/basicauthhtppInterceptorservice.ts","webpack:///./src/app/service/common.service.ts","webpack:///./src/app/service/http.service.ts","webpack:///./src/app/service/message.code.ts","webpack:///./src/app/ui/layout/edit/edit.component.css","webpack:///./src/app/ui/layout/edit/edit.component.html","webpack:///./src/app/ui/layout/edit/edit.component.ts","webpack:///./src/app/ui/layout/header/header.component.html","webpack:///./src/app/ui/layout/header/header.component.ts","webpack:///./src/app/ui/layout/layout.component.ts","webpack:///./src/app/ui/layout/main/main.component.css","webpack:///./src/app/ui/layout/main/main.component.html","webpack:///./src/app/ui/layout/main/main.component.ts","webpack:///./src/app/ui/layout/sidebar/sidebar.component.ts","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.css","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.html","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MainComponent} from '../ui/layout/main/main.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {UnauthorizeComponent} from '../ui/layout/unauthorize/unauthorize.component';\nimport {AuthGuardService as AuthGuard} from '../service/auth-guard.service';\n\nconst routes: Routes = [\n      {\n    path: '',\n    component: MainComponent,\n    canActivate: [AuthGuard]\n      },\n  {\n    path: '401',\n    component: UnauthorizeComponent\n  }/*,\n  { path: '**', redirectTo: '401' }*/\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--<router-outlet></router-outlet>-->\\n<app-layout>\\n  <h1>hbh {{title}}</h1>\\n</app-layout>\\n\"","import { Component } from '@angular/core';\nimport {CommonService} from './service/common.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: []\n})\nexport class AppComponent {\n  title = 'arnote';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UiModule } from './ui/ui.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthGuardService} from './service/auth-guard.service';\nimport {AuthService} from './service/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AngularFontAwesomeModule,\n    HttpClientModule,\n    UiModule\n  ],\n  providers: [AuthGuardService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Salary {\r\n\r\n  constructor(fullsalary: number, residualSalary: number) {\r\n    this.fullsalary = fullsalary;\r\n    this.residualSalary = residualSalary;\r\n  }\r\n\r\n  fullsalary: number;\r\n  residualSalary: number;\r\n}\r\n","export class User {\r\n  constructor() {}\r\n  id: number;\r\n  login: string;\r\n  pwd: string;\r\n  userRole: string;\r\n  userCryptoMode: boolean;\r\n  creationDate: string;\r\n  email: string;\r\n  fullname: string;\r\n\r\n}\r\n","export class Wish {\r\n\r\n  constructor(id: number, wish: string, price: number, priority: number, archive: boolean, description: string, url: string, realized: boolean) {\r\n    this.id = id;\r\n    this.wish = wish;\r\n    this.price = price;\r\n    this.priority = priority;\r\n    this.archive = archive;\r\n    this.description = description;\r\n    this.url = url;\r\n    this.realized = realized;\r\n  }\r\n\r\n  id: number;\r\n  wish: string;\r\n  price: number;\r\n  priority: number;\r\n  archive: boolean;\r\n  description: string;\r\n  url: string;\r\n  realized: boolean;\r\n  priorityGroup: number;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router} from '@angular/router';\r\nimport {AuthService} from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuardService  implements CanActivate {\r\n\r\n\r\n  constructor(public auth: AuthService, public router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      console.log('is auth - ' + !this.auth.isAuthenticated());\r\n      this.router.navigate(['401']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\nimport {environment} from '../../environments/environment';\r\n\r\nconst helper = new JwtHelperService();\r\nlet myRawToken = localStorage.getItem('token');\r\nconst decodedToken = helper.decodeToken(myRawToken);\r\nlet isExpired = helper.isTokenExpired(myRawToken);\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  SERVER_URL: string = environment.serverUrl;\r\n  _loginURL = 'http://localhost:8080/login?';\r\n  loginURL = this.SERVER_URL + '/login?';\r\n\r\n\r\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) {\r\n  }\r\n\r\n\r\n  public login(loginPayload): Observable<HttpResponse<Object>> {\r\n\r\n    console.log('loginPayload ->' + loginPayload);\r\n\r\n    const headers = {\r\n      'Content-type': 'application/x-www-form-urlencoded'\r\n    };\r\n\r\n    return this.http.get<HttpResponse<Object>>(this.loginURL + loginPayload, {observe: 'response'});\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n\r\n    console.log('TOKEN EXPIRE - ' + isExpired);\r\n    return !isExpired;\r\n  }\r\n\r\n  public refreshToken() {\r\n\r\n    console.log('TOKEN REFRESH');\r\n\r\n    myRawToken = localStorage.getItem('token');\r\n    isExpired = helper.isTokenExpired(myRawToken);\r\n\r\n    console.log('TOKEN EXPIRE - ' + isExpired);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\r\n  constructor() {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const idToken = localStorage.getItem('token');\r\n    // console.log('token', idToken);\r\n    if (idToken) {\r\n      const cloned = req.clone({\r\n        headers: req.headers.set('Authorization', idToken)\r\n      });\r\n      return next.handle(cloned);\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {MessageCode} from './message.code';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  private error: MessageCode;\r\n\r\n  private errorSubsciber: BehaviorSubject<MessageCode> = new BehaviorSubject<MessageCode>(this.error);\r\n  error$: Observable<MessageCode> = this.errorSubsciber.asObservable();\r\n\r\n  constructor() {\r\n  }\r\n\r\n\r\n  pushError(error: MessageCode) {\r\n    console.log('Incoming Error: ' + error.messageType);\r\n    this.errorSubsciber.next(error);\r\n  }\r\n\r\n  encrypt(keys, value) {\r\n    const key = CryptoJS.enc.Utf8.parse(keys);\r\n    const iv = CryptoJS.enc.Utf8.parse(keys);\r\n    const encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(value.toString()), key,\r\n      {\r\n        keySize: 128 / 8,\r\n        iv: iv,\r\n        mode: CryptoJS.mode.CBC,\r\n        padding: CryptoJS.pad.Pkcs7\r\n      });\r\n\r\n    return encrypted.toString();\r\n  }\r\n\r\n\r\n  convertText(conversion: string, what: string, key: string) {\r\n    if (conversion === 'encrypt') {\r\n      return CryptoJS.AES.encrypt(what.trim(), key.trim()).toString();\r\n  } else {\r\n      return CryptoJS.AES.decrypt(what.trim(), key.trim()).toString(CryptoJS.enc.Utf8);\r\n\r\n    }\r\n  }\r\n\r\n\r\n// The get method is use for decrypt the value.\r\n  decrypt(keys, value) {\r\n    var key = CryptoJS.enc.Utf8.parse(keys);\r\n    console.log('key - ' + key);\r\n    var iv = CryptoJS.enc.Utf8.parse(keys);\r\n    console.log('iv - ' + iv);\r\n    var decrypted = CryptoJS.AES.decrypt(value, key, {\r\n      keySize: 128 / 8,\r\n      iv: iv,\r\n      mode: CryptoJS.mode.CBC,\r\n      padding: CryptoJS.pad.Pkcs7\r\n    });\r\n\r\n    console.log('decr - ' + decrypted);\r\n\r\n    return decrypted.toString(CryptoJS.enc.Utf8);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Wish} from '../dto/wish';\r\nimport {Salary} from '../dto/salary';\r\nimport {User} from '../dto/user';\r\nimport {environment} from '../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class HttpService {\r\n\r\n  SERVER_URL: string = environment.serverUrl;\r\n\r\n  _loginURL = 'http://localhost:8080/login?';\r\n  loginURL = this.SERVER_URL + '/login?';\r\n  _isCryptoUserUrl = 'http://localhost:8080/rest/wishes/users/getcurrent';\r\n  isCryptoUserUrl = this.SERVER_URL + '/rest/wishes/users/getcurrent';\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public getData(url: string): Observable<any> {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  public sendData(wish: Wish, url: string): Observable<Wish> {\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.post<Wish>(url, wish, httpOptions);\r\n  }\r\n\r\n  public sendFile(formData: FormData, url: string): Observable<any> {\r\n    return this.http.post<any>(url, formData);\r\n  }\r\n\r\n  public sendSalary(salary: Salary, url: string): Observable<Salary> {\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.post<Salary>(url, salary, httpOptions);\r\n  }\r\n\r\n  public updateWish(wish: Wish, url: string): Observable<Wish> {\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.put<Wish>(url, wish, httpOptions);\r\n  }\r\n\r\n  public deleteWish(id: string, url: string): Observable<any> {\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.delete(url + '/' + id, httpOptions);\r\n  }\r\n\r\n\r\n  public login(loginPayload): Observable<HttpResponse<Object>> {\r\n\r\n    console.log('loginPayload ->' + loginPayload);\r\n\r\n    const headers = {\r\n      'Content-type': 'application/x-www-form-urlencoded'\r\n    };\r\n\r\n    return this.http.get<HttpResponse<Object>>(this.loginURL + loginPayload, {observe: 'response'});\r\n  }\r\n\r\n  public isCryptoUser(): Observable<any> {\r\n    return this.http.get(this.isCryptoUserUrl);\r\n  }\r\n\r\n  public updateUserData(user: User, url: string): Observable<User> {\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.put<User>(url, user, httpOptions);\r\n  }\r\n\r\n  // 'assets/data/test.json'\r\n}\r\n","export class MessageCode {\r\n  messageType: string;\r\n\r\n// ===================================================\r\n// ====================  КОДЫ   ОШИБОК ===============\r\n// ===================================================\r\n\r\n  WRONG_LOGIN = 'Ошибка аутентификации! Не верные логин и/или проль!';\r\n  USER_DATA_CHANGE_SOME_ERROR = 'Невозможно изменить данные пользователя. Произошла техническая ошибка!';\r\n  USER_DATA_CHANGE_SUCH_USER_EXISTS = 'Данное имя пользователя занято! Выберете другое!';\r\n  UNDER_CONSTRACTION = 'Данная функция еще не реализована! Пождите совсем чуть-чуть....';\r\n\r\n// ===================================================\r\n// ============  КОДЫ  СЕРВИСНЫХ СООБЩЕНИЙ ===========\r\n// ===================================================\r\n\r\n  AUTH_LOGOUT = 'LOGOUT';\r\n  AUTH_LOGIN_OK = 'LOGIN';\r\n  USER_DATA_CHANGE_OK = 'Пользовательские данные успешно изменены!';\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<clr-main-container>\\n<header class=\\\"header-1\\\">\\n  <div class=\\\"branding\\\">\\n    <a class=\\\"nav-link\\\">\\n      <clr-icon shape=\\\"shield\\\"></clr-icon>\\n      <span class=\\\"title\\\">arNote Project</span>\\n    </a>\\n  </div>\\n  <div class=\\\"header-nav\\\">\\n    <a *ngIf=\\\"idToken\\\" class=\\\"active nav-link nav-icon\\\" clrVerticalNavLink routerLink=\\\"../\\\" routerLinkActive=\\\"active\\\">\\n      <clr-icon shape=\\\"home\\\"></clr-icon>\\n    </a>\\n  </div>\\n  <div class=\\\"header-actions\\\">\\n    <clr-dropdown class=\\\"dropdown bottom-right\\\">\\n      <button class=\\\"nav-icon\\\" clrDropdownToggle>\\n        <clr-icon shape=\\\"user\\\"></clr-icon>\\n        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n      </button>\\n\\n      <div class=\\\"dropdown-menu\\\">\\n        <label class=\\\"dropdown-header\\\">Меню пользователя</label>\\n        <a *ngFor=\\\"let item of loginDropDownMenu\\\" (click)=\\\"loginIconHandler(item)\\\"  clrDropdownItem>{{item}}</a>\\n      </div>\\n    </clr-dropdown>\\n\\n  </div>\\n</header>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"isLogin\\\">\\n  <h3 class=\\\"modal-title\\\">Войти</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"loginForm\\\">\\n\\n      <!--ПОЛЕ ЛОГИН-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"login\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"login\\\" id=\\\"login\\\" name=\\\"login\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ПАРОЛЬ-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"password\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n        <input type=\\\"password\\\" clrInput formControlName=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"sendLogin()\\\" class=\\\"btn btn-primary mt-1\\\">Войти</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n<!--ФОРМА РЕДАКТИРОВАНИЯ ПОЛЬЗОВАТЕЛЬСКИХ ДАННЫХ-->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isUserDataEdit\\\">\\n  <h3 class=\\\"modal-title\\\">Редактирование пользовательских данных</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"userInfoForm\\\">\\n\\n      <!--ПОЛЕ ЛОГИН-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"editlogin\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"editlogin\\\" id=\\\"editlogin\\\" name=\\\"editlogin\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ПАРОЛЬ-->\\n\\n      <clr-password-container>\\n\\n        <label #label for=\\\"editpassword\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n        <input type=\\\"password\\\" clrPassword formControlName=\\\"editpassword\\\" id=\\\"editpassword\\\" name=\\\"editpassword\\\" autocomplete=\\\"off\\\"\\n               size=\\\"100\\\">\\n        </clr-password-container>\\n\\n      <br/>\\n\\n      <!-- ENCRYPTED MODE -->\\n\\n      <clr-checkbox-wrapper>\\n\\n        <label #label for=\\\"isencrypted\\\" class=\\\"input-label clr-col-12\\\">Шифрование данных на фронте</label>\\n        <input type=\\\"checkbox\\\" clrCheckbox  formControlName=\\\"isencrypted\\\" id=\\\"isencrypted\\\" name=\\\"isencrypted\\\">\\n        </clr-checkbox-wrapper>\\n\\n      <!--ПОЛЕ EMAIL-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"email\\\" class=\\\"input-label clr-col-12\\\">Email</label>\\n        <input type=\\\"email\\\" clrInput formControlName=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ ПОЛНОЕ ИМЯ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"fullname\\\" class=\\\"input-label clr-col-12\\\">Полное имя</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"fullname\\\" id=\\\"fullname\\\" name=\\\"fullname\\\" autocomplete=\\\"off\\\"\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ КЛЮЧ ШИФРОВАНИЯ -->\\n\\n      <clr-password-container *ngIf=\\\"user.userCryptoMode\\\">\\n\\n        <label #label for=\\\"cryptkey\\\" class=\\\"input-label clr-col-12\\\">Персональный ключ шифрования</label>\\n        <input type=\\\"password\\\" clrPassword formControlName=\\\"cryptkey\\\" id=\\\"cryptkey\\\" name=\\\"cryptkey\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-password-container>\\n      <br/>\\n\\n      <span *ngIf=\\\"user.userCryptoMode\\\" class=\\\"label label-warning\\\">Ключ хранится только у Вас. Запомните его и не теряйте.</span>\\n\\n\\n\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"changeUserData()\\\" class=\\\"btn btn-primary mt-1\\\"  [disabled]=\\\"!userInfoForm.valid\\\">ИЗМЕНИТЬ</button>\\n      <button type=\\\"button\\\" *ngIf=\\\"user.userCryptoMode\\\" (click)=\\\"clearCryptoKey()\\\" class=\\\"btn btn-danger mt-1\\\"  [disabled]=\\\"!userInfoForm.valid\\\">СТЕРЕТЬ КЛЮЧ ШИФРОВАНИЯ</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n</clr-main-container>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {catchError, tap} from 'rxjs/operators';\nimport {HttpParams} from '@angular/common/http';\nimport {AuthService} from '../../../service/auth.service';\nimport {throwError} from 'rxjs';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {Router} from '@angular/router';\nimport {HttpService} from '../../../service/http.service';\nimport {User} from '../../../dto/user';\nimport {environment} from '../../../../environments/environment';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: 'header.component.html',\n  providers: [AuthService, HttpService],\n  styles: []\n})\nexport class HeaderComponent implements OnInit {\n\n\n  // --------------------------------- URL'ы -------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  cryptokey = '';\n  myBaseUrl = this.SERVER_URL + '/rest/wishes';\n  _myBaseUrl = 'http://localhost:8080/rest/wishes';\n  usersUrl = this.myBaseUrl + '/users'; // основная ссылка на api\n\n  isLogin = false; // вывод диалогового окна логгирования\n  loginDropDownMenu: string[];\n  isUserDataEdit = false; // вывод диалогового информации о пользователе.\n  user: User;\n\n  loginForm = this.fb.group({\n    login: ['', [\n      Validators.required\n    ]],\n    password: ['', [\n      Validators.required\n    ]]\n  });\n\n  userInfoForm = this.fb.group({\n    editlogin: ['', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9]+$/)\n    ]],\n    editpassword: ['', []]\n    ,\n    isencrypted: [false, []],\n    email: ['', [\n      Validators.required,\n      Validators.email\n    ]],\n    fullname: ['', []],\n    cryptkey: ['', [Validators.required]]\n  });\n\n  constructor(private commonService: CommonService, private authService: AuthService, private httpService: HttpService, private fb: FormBuilder, public router: Router) {\n  }\n\n  ngOnInit() {\n\n    const idToken = localStorage.getItem('token');\n    this.cryptokey = localStorage.getItem('cryptokey');\n    console.log('cryptokey is - ' + this.cryptokey);\n    this.user = new User();\n\n\n    if (idToken) {\n      this.loginDropDownMenu = ['О пользователе', 'Выйти'];\n    } else {\n      this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n    }\n  }\n\n\n  clearCryptoKey() {\n    localStorage.removeItem('cryptokey');\n\n    this.userInfoForm.patchValue({\n      cryptkey: ''\n    });\n\n    this.isUserDataEdit = false;\n\n  }\n\n  loadUserData() {\n\n    this.httpService.isCryptoUser().pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить крипто-статус пользователя!');\n      })\n    ).subscribe(data => {\n\n      this.user.id = data.id;\n      this.user.login = data.login;\n      this.user.pwd = data.pwd;\n      this.user.userRole = data.userRole;\n      this.user.userCryptoMode = data.userCryptoMode;\n      this.user.creationDate = data.creationDate;\n      this.user.email = data.email;\n      this.user.fullname = data.fullname;\n\n      this.userInfoForm.patchValue({\n        editlogin: this.user.login,\n        editpassword: this.user.pwd,\n        isencrypted: this.user.userCryptoMode,\n        email: this.user.email,\n        fullname: this.user.fullname\n      });\n\n      if (data.userCryptoMode === false) {\n        this.userInfoForm.patchValue({\n          cryptkey: '111'\n        });\n      }\n    });\n  }\n\n  loginIconHandler(item: string) {\n    if (item === 'Войти') {\n      console.log(item);\n      this.isLogin = true;\n    } else if (item === 'Выйти') {\n      console.log('unauthorize');\n      this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n      localStorage.removeItem('token');\n      this.router.navigate(['401']);\n\n    } else if (item === 'О пользователе') {\n      this.loadUserData();\n      this.isUserDataEdit = true;\n\n      let tempKey = localStorage.getItem('cryptokey');\n      this.userInfoForm.patchValue({\n        cryptkey: tempKey.toString(),\n      });\n\n    }\n  }\n\n  errorHandler(err, message: string) {\n\n    this.isLogin = false;\n    this.isUserDataEdit = false;\n\n    const errorType = new MessageCode();\n    if (message === 'LOGINERROR') {\n      this.sendMessagePush(errorType.WRONG_LOGIN);\n    } else {\n      console.log('e ... ', err.error);\n\n      if (err.error === 'SUCH_USER_EXIST') {\n        this.sendMessagePush(errorType.USER_DATA_CHANGE_SUCH_USER_EXISTS);\n      } else {\n        this.sendMessagePush(errorType.USER_DATA_CHANGE_SOME_ERROR);\n      }\n    }\n    return throwError(err);\n  }\n\n\n  changeUserData() {\n\n    /* console.log('login: ' + this.user.login + ' - ' + this.userInfoForm.value.editlogin);\n     console.log('email: ' + this.user.email + ' - ' + this.userInfoForm.value.email);\n     console.log('fullname: ' + this.user.fullname + ' - ' + this.userInfoForm.value.fullname);*/\n\n    if ((this.user.login === this.userInfoForm.value.editlogin)\n      && (this.user.email === this.userInfoForm.value.email)\n      && (this.user.fullname === this.userInfoForm.value.fullname)) {\n\n      console.log('МЕНЯЕМ ТОЛЬКО CRYPTO-KEY');\n\n      const messageType = new MessageCode();\n      this.sendMessagePush(messageType.USER_DATA_CHANGE_OK);\n      this.isUserDataEdit = false;\n      localStorage.setItem('cryptokey', this.userInfoForm.value.cryptkey);\n      console.log('cryptokey is written - ' + this.userInfoForm.value.cryptkey);\n\n    } else {\n\n      this.user.login = this.userInfoForm.value.editlogin;\n      this.user.userCryptoMode = this.userInfoForm.value.isencrypted;\n      this.user.email = this.userInfoForm.value.email;\n      this.user.fullname = this.userInfoForm.value.fullname;\n\n      console.log('МЕНЯЕМ ВСЕ ЮЗЕРСКИЕ ДАННЫЕ');\n\n      this.httpService.updateUserData(this.user, this.usersUrl + '/' + this.user.id).pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'Невозможно выполнить редактирование пользовательских данных!');\n        })\n      ).subscribe(hero => {\n\n        const messageType = new MessageCode();\n        this.sendMessagePush(messageType.USER_DATA_CHANGE_OK);\n        this.isUserDataEdit = false;\n        localStorage.setItem('cryptokey', this.userInfoForm.value.cryptkey);\n        console.log('cryptokey is written - ' + this.userInfoForm.value.cryptkey);\n      });\n    }\n  }\n\n  sendMessagePush(message: string) {\n    const errorType = new MessageCode();\n    errorType.messageType = errorType.WRONG_LOGIN;\n    errorType.messageType = message;\n    console.log('Error message- ' + errorType.messageType);\n    this.commonService.pushError(errorType);\n  }\n\n  sendLogin() {\n\n    const body = new HttpParams()\n      .set('username', this.loginForm.value.login)\n      .set('password', this.loginForm.value.password);\n\n    this.authService.login(body.toString())\n      .pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'LOGINERROR');\n        }))\n      .pipe(\n        tap(resp => {\n          console.log('header', resp.headers.get('Authorization'));\n          localStorage.removeItem('token');\n          localStorage.setItem('token', resp.headers.get('Authorization'));\n          console.log('storage', localStorage.getItem('token'));\n          this.isLogin = false;\n\n          this.authService.refreshToken();\n\n          this.router.navigate(['']);\n          this.loginDropDownMenu = ['О пользователе', 'Выйти'];\n          const message = new MessageCode();\n          this.sendMessagePush(message.AUTH_LOGIN_OK);\n        }))\n      .subscribe();\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CommonService} from '../../service/common.service';\nimport {HttpService} from '../../service/http.service';\nimport { JwtHelperService, JWT_OPTIONS  } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-layout',\n  template: `\n    <!--<div class=\"main-container\">\n      <app-header></app-header>\n      <app-main>\n        <ng-content></ng-content>\n      </app-main>\n    </div>-->\n\n    <clr-main-container>\n      <clr-header class=\"header\">\n        <app-header></app-header>\n      </clr-header>\n      <div class=\"content-container\">\n        <div class=\"content-area\">\n          <!--<app-main></app-main>-->\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </clr-main-container>`,\n  styles: [],\n  providers: [CommonService, JwtHelperService]\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n::ng-deep clr-icon:hover {\\r\\n  -webkit-transform: scale(1.2);\\r\\n  transform: scale(1.2);\\r\\n\\r\\n}\\r\\n\\r\\n.sumallrow {\\r\\n  background-color: #790909;\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n::ng-deep  .main-container {\\r\\n}\\r\\n\\r\\n.sumpriorrow {\\r\\n  background-color: #299834;\\r\\n  color: #ffdb51;\\r\\n\\r\\n}\\r\\n\\r\\n#bottomdiv{\\r\\n  /*height:100%*/\\r\\n}\\r\\n\\r\\n@media screen and (max-width: 500px){\\r\\n\\r\\n    .sidenav {\\r\\n      min-width: 1%;\\r\\n      visibility: hidden;\\r\\n      /*background: #ea1e2c;*/\\r\\n    }\\r\\n\\r\\n\\r\\n    .table tr td:nth-child(3),\\r\\n    .table tr th:nth-child(3) {\\r\\n      display: none;\\r\\n    }\\r\\n    .table tr td:nth-child(4),\\r\\n    .table tr th:nth-child(4) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    .table tr td:nth-child(5),\\r\\n    .table tr th:nth-child(5) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    .table tr td:nth-child(6),\\r\\n    .table tr th:nth-child(6) {\\r\\n      display: none;\\r\\n    }\\r\\n\\r\\n    }\\r\\n\\r\\n.fas .fa-arrow-up{\\r\\n  background: #0c5460;\\r\\n}\\r\\n\\r\\n.fa, .fas:hover {\\r\\n  background: aqua;\\r\\n}\\r\\n\\r\\n:host{\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L21haW4vbWFpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLDZCQUE2QjtFQUU3QixxQkFBcUI7O0FBRXZCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGNBQWM7QUFDaEI7O0FBRUE7QUFDQTs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjOztBQUVoQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUU7O0lBRUU7TUFDRSxhQUFhO01BQ2Isa0JBQWtCO01BQ2xCLHVCQUF1QjtJQUN6Qjs7O0lBR0E7O01BRUUsYUFBYTtJQUNmO0lBQ0E7O01BRUUsYUFBYTtJQUNmOztJQUVBOztNQUVFLGFBQWE7SUFDZjs7SUFFQTs7TUFFRSxhQUFhO0lBQ2Y7O0lBRUE7O0FBR0o7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7O0FBRUEiLCJmaWxlIjoic3JjL2FwcC91aS9sYXlvdXQvbWFpbi9tYWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuOjpuZy1kZWVwIGNsci1pY29uOmhvdmVyIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4yKTtcclxuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcclxuXHJcbn1cclxuXHJcbi5zdW1hbGxyb3cge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM3OTA5MDk7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAgLm1haW4tY29udGFpbmVyIHtcclxufVxyXG5cclxuLnN1bXByaW9ycm93IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjk5ODM0O1xyXG4gIGNvbG9yOiAjZmZkYjUxO1xyXG5cclxufVxyXG5cclxuI2JvdHRvbWRpdntcclxuICAvKmhlaWdodDoxMDAlKi9cclxufVxyXG5cclxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCl7XHJcblxyXG4gICAgLnNpZGVuYXYge1xyXG4gICAgICBtaW4td2lkdGg6IDElO1xyXG4gICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgIC8qYmFja2dyb3VuZDogI2VhMWUyYzsqL1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDMpLFxyXG4gICAgLnRhYmxlIHRyIHRoOm50aC1jaGlsZCgzKSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDQpLFxyXG4gICAgLnRhYmxlIHRyIHRoOm50aC1jaGlsZCg0KSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLnRhYmxlIHRyIHRkOm50aC1jaGlsZCg1KSxcclxuICAgIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNSkge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgIC50YWJsZSB0ciB0ZDpudGgtY2hpbGQoNiksXHJcbiAgICAudGFibGUgdHIgdGg6bnRoLWNoaWxkKDYpIHtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuLmZhcyAuZmEtYXJyb3ctdXB7XHJcbiAgYmFja2dyb3VuZDogIzBjNTQ2MDtcclxufVxyXG5cclxuLmZhLCAuZmFzOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiBhcXVhO1xyXG59XHJcbjpob3N0e1xyXG5cclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"content-container\\\">\\n  <div class=\\\"content-area\\\">\\n\\n    <clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n                <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n                </clr-alert-item>\\n              </clr-alert>\\n\\n              <clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n                <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n                </clr-alert-item>\\n              </clr-alert>\\n\\n        <clr-datagrid *ngIf=\\\"!monthOrdermode\\\">\\n          <clr-dg-action-bar>\\n            <div class=\\\"actions-container\\\">\\n\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"openEditWish($event, item, 2)\\\"> Добавить</button>\\n              <button class=\\\"btn btn-secondary\\\" (click)=\\\"getWishes(apiUrl)\\\"> Обновить</button>\\n              <button class=\\\"btn btn-secondary; hidden-md-down\\\" (click)=\\\"openAddSalaryModal($event)\\\"> Задать зарплату</button>\\n              <button class=\\\"btn btn-secondary; hidden-md-down\\\" (click)=\\\"openParseCsv($event)\\\" *ngIf=\\\"userRole==='ADMIN'\\\"> Парсинг csv</button>\\n              <button class=\\\"{{filterMode ? 'btn btn-danger; hidden-md-down' : 'btn btn-secondary; hidden-md-down'}}\\\" (click)=\\\"filterWishes()\\\"> {{filterButtonText}} </button>\\n\\n              <clr-dropdown class=\\\"hidden-md-down\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n                  РЕЖИМ ОТОБРАЖЕНИЯ\\n                  <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n                </button>\\n                <clr-dropdown-menu *clrIfOpen>\\n                  <label class=\\\"dropdown-header\\\">Режим отображения</label>\\n                  <a *ngFor=\\\"let item of filters\\\" (click)=\\\"changeFilter(item)\\\" clrDropdownItem>{{item}}</a>\\n                </clr-dropdown-menu>\\n              </clr-dropdown>\\n              <!--class=\\\"hidden-md-down\\\"-->\\n            </div>\\n          </clr-dg-action-bar>\\n          <clr-dg-column>Желание</clr-dg-column>\\n          <clr-dg-column>Цена</clr-dg-column>\\n          <clr-dg-column [style.width.px]=\\\"20\\\" class=\\\"hidden-md-down\\\">Приоритет</clr-dg-column>\\n          <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">.</clr-dg-column>\\n          <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">.</clr-dg-column>\\n          <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">Ред.</clr-dg-column>\\n\\n          <clr-dg-row *clrDgItems=\\\"let item of wishes\\\" [clrDgItem]=\\\"item\\\">\\n            <clr-dg-cell >{{item.wish}}</clr-dg-cell>\\n            <clr-dg-cell style=\\\"text-align: center\\\">{{item.price | number:'2.'}}</clr-dg-cell>\\n            <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">{{item.priority}}</clr-dg-cell>\\n            <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n              <clr-icon shape=\\\"upload\\\" (click)=\\\"changePriority(item, 'down')\\\"></clr-icon>\\n            </clr-dg-cell>\\n            <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n              <clr-icon shape=\\\"download\\\" (click)=\\\"changePriority(item, 'up')\\\"></clr-icon>\\n            </clr-dg-cell>\\n            <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n              <clr-icon shape=\\\"edit\\\" (click)=\\\"openEditWish($event, item, 1)\\\"></clr-icon>\\n            </clr-dg-cell>\\n          </clr-dg-row>\\n\\n          <clr-dg-footer>\\n\\n            <span class=\\\"hidden-md-down\\\"><span class=\\\"label label-danger\\\">ИТОГО<span class=\\\"badge badge-orange\\\">{{summAll | number:'2.'}} руб.</span></span></span>\\n            <span class=\\\"hidden-sm-down\\\"><span class=\\\"label label-danger\\\">Реализация<span class=\\\"badge badge-danger\\\">{{periodAll}} мес.</span></span></span>\\n            <span class=\\\"label label-success\\\">ИТОГО (PRIOR)<span class=\\\"badge badge-orange\\\">{{summPriority | number:'2.'}} руб.</span></span>\\n            <span class=\\\"label label-success\\\">Реализация<span class=\\\"badge badge-success\\\">{{periodPriority}} мес.</span></span>\\n            <span class=\\\"hidden-lg-down\\\"><span class=\\\"label label-gray\\\">Среднее время<span class=\\\"badge badge-blue\\\">{{implementationPeriod}}</span></span></span>\\n\\n\\n            <clr-dg-pagination #pagination [clrDgPageSize]=\\\"15\\\">\\n              <clr-dg-page-size [clrPageSizeOptions]=\\\"[3,5,10,15, 100]\\\" class=\\\"hidden-md-down\\\"> жел/стр.</clr-dg-page-size>\\n              {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}} из {{pagination.totalItems}} жел.\\n            </clr-dg-pagination>\\n\\n          </clr-dg-footer>\\n        </clr-datagrid>\\n\\n    <div *ngIf=\\\"monthOrdermode\\\">\\n\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"toMainTableMode()\\\"> Вернуться в табличный режим </button>\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"getWishesWithMonthGroupping('?sortType=all')\\\"> Обновить </button>\\n    <clr-dropdown class=\\\"hidden-md-down\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n          СОРТИРОВКА\\n          <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n        </button>\\n        <clr-dropdown-menu *clrIfOpen>\\n          <label class=\\\"dropdown-header\\\">Сортировка</label>\\n          <a *ngFor=\\\"let item of groupMonthSort\\\" (click)=\\\"sortGroupList(item)\\\" clrDropdownItem>{{item}}</a>\\n        </clr-dropdown-menu>\\n    </clr-dropdown>\\n\\n    <clr-tree-node *ngFor=\\\"let month of wishGroups\\\" [(clrExpanded)]=\\\"month.expanded\\\">\\n\\n      <span class=\\\"{{month.colorClass}}\\\">{{month.monthName}} <span class=\\\"badge\\\">{{month.sum}}</span></span><span *ngIf=\\\"month.overflow\\\" class=\\\"badge badge-danger\\\">Перебор!</span>\\n\\n      <clr-tree-node *ngFor=\\\"let items of month.wishList\\\">\\n        {{items.wish}} | {{items.price}} | <clr-icon shape=\\\"upload\\\" (click)=\\\"changePriorityMonth(items, 'up')\\\"></clr-icon> |\\n        <clr-icon shape=\\\"download\\\" (click)=\\\"changePriorityMonth(items, 'down')\\\"></clr-icon>\\n\\n      </clr-tree-node>\\n    </clr-tree-node>\\n\\n\\n</div>\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isEdit\\\">\\n      <h3 class=\\\"modal-title\\\">{{isEditMode ? 'Редактировать желание' : 'Добавить желание'}}</h3>\\n      <div class=\\\"modal-body\\\">\\n        <form clrForm [formGroup]=\\\"form\\\">\\n\\n          <!--ПОЛЕ ID-->\\n\\n          <clr-input-container hidden>\\n\\n            <label #label for=\\\"id\\\" class=\\\"input-label clr-col-12\\\">id</label>\\n            <input type=\\\"id\\\" clrInput formControlName=\\\"id\\\" id=\\\"id\\\" name=\\\"id\\\" autocomplete=\\\"off\\\" readonly required\\n                   size=\\\"50\\\">\\n          </clr-input-container>\\n\\n          <!--ПОЛЕ ИМЯ-->\\n\\n          <clr-input-container>\\n\\n            <label #label for=\\\"name\\\" class=\\\"input-label clr-col-12\\\">Название</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"name\\\"\\n                   id=\\\"name\\\"\\n                   name=\\\"name\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <!--ПОЛЕ ОПИСАНИЕ-->\\n\\n          <clr-input-container>\\n            <label #label for=\\\"description\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"description\\\"\\n                   id=\\\"description\\\"\\n                   name=\\\"description\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n          </clr-input-container>\\n\\n          <!--ПОЛЕ URL-->\\n\\n          <clr-input-container>\\n            <label #label for=\\\"url\\\" class=\\\"input-label clr-col-12\\\">URL</label>\\n            <input type=\\\"url\\\"\\n                   clrInput\\n                   formControlName=\\\"url\\\"\\n                   id=\\\"url\\\"\\n                   name=\\\"url\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n          </clr-input-container>\\n\\n          <!--ПОЛЕ PRIORITY-->\\n\\n          <clr-input-container>\\n            <label #label for=\\\"priority\\\" class=\\\"input-label clr-col-12\\\">Приоритет</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"priority\\\"\\n                   id=\\\"priority\\\"\\n                   name=\\\"priority\\\"\\n                   autocomplete=\\\"off\\\">\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <!--ПОЛЕ PRICE-->\\n\\n          <clr-input-container>\\n            <label #label for=\\\"price\\\" class=\\\"input-label clr-col-12\\\">Цена</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"price\\\"\\n                   id=\\\"price\\\"\\n                   name=\\\"price\\\"\\n                   autocomplete=\\\"off\\\">\\n          </clr-input-container>\\n        </form>\\n\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" (click)=\\\"addEditWish()\\\" class=\\\"btn btn-primary mt-1\\\">Сохранить</button>\\n          <button type=\\\"button\\\" (click)=\\\"deleteWish()\\\" *ngIf=\\\"isEditMode\\\" class=\\\"btn btn-danger mt-1\\\">Удалить</button>\\n          <button type=\\\"button\\\" (click)=\\\"realizeWish()\\\" *ngIf=\\\"isEditMode\\\" class=\\\"btn btn-success mt-1\\\">Реализовано</button>\\n        </div>\\n\\n      </div>\\n    </clr-modal>\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isSalaryAdd\\\">\\n      <h3 class=\\\"modal-title\\\">Добавить зарплату</h3>\\n      <div class=\\\"modal-body\\\">\\n        <form clrForm [formGroup]=\\\"salaryForm\\\">\\n\\n          <!--ПОЛЕ SALARY-->\\n\\n          <clr-input-container>\\n\\n            <label #label for=\\\"salary\\\" class=\\\"input-label clr-col-12\\\">Зарплата</label>\\n            <input type=\\\"text\\\" clrInput formControlName=\\\"salary\\\" id=\\\"salary\\\" name=\\\"salary\\\" autocomplete=\\\"off\\\" required\\n                   size=\\\"100\\\">\\n          </clr-input-container>\\n\\n          <!--ПОЛЕ RESIDUAL SALARY-->\\n\\n          <clr-input-container>\\n\\n            <label #label for=\\\"residualSalary\\\" class=\\\"input-label clr-col-12\\\">Остаточная зарплата</label>\\n            <input type=\\\"text\\\" clrInput formControlName=\\\"residualSalary\\\" id=\\\"residualSalary\\\" name=\\\"residualSalary\\\"\\n                   autocomplete=\\\"off\\\" required\\n                   size=\\\"100\\\">\\n          </clr-input-container>\\n          <br/>\\n\\n          <span class=\\\"label label-warning\\\">Зарплата, которая остается у вас после всех трат. Расчет идет именно по ней.</span>\\n\\n\\n        </form>\\n\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" (click)=\\\"addSalary()\\\" class=\\\"btn btn-primary mt-1\\\">Добавить</button>\\n        </div>\\n\\n      </div>\\n    </clr-modal>\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isCsvParse\\\">\\n      <h3 class=\\\"modal-title\\\">Парсинг csv-файла</h3>\\n      <div class=\\\"modal-body\\\">\\n        <form clrForm [formGroup]=\\\"csvForm\\\">\\n\\n\\n          <!--ПОЛЕ FILE-->\\n\\n          <clr-input-container>\\n\\n            <label #label for=\\\"csvfile\\\" class=\\\"input-label clr-col-12\\\">Укажите csv-файл</label>\\n            <input type=\\\"file\\\" clrInput formControlName=\\\"csvfile\\\" id=\\\"csvfile\\\" name=\\\"csvfile\\\" autocomplete=\\\"off\\\"\\n                   required\\n                   size=\\\"100\\\">\\n          </clr-input-container>\\n\\n          <form [formGroup]=\\\"uploadForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n            <input type=\\\"file\\\" name=\\\"profile\\\" (change)=\\\"onFileSelect($event)\\\"/>\\n            <div>\\n              <button type=\\\"submit\\\">Upload</button>\\n            </div>\\n          </form>\\n\\n        </form>\\n\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" (click)=\\\"sendCsvFile()\\\" class=\\\"btn btn-primary mt-1\\\">Парсить</button>\\n        </div>\\n\\n      </div>\\n    </clr-modal>\\n\\n    <!--ФОРМА ФИЛЬТРАЦИИ -->\\n\\n    <clr-modal [(clrModalOpen)]=\\\"isFilterModal\\\">\\n      <h3 class=\\\"modal-title\\\">Фильтры и поиск</h3>\\n      <div class=\\\"modal-body\\\">\\n        <form clrForm [formGroup]=\\\"filterForm\\\">\\n\\n\\n          <!-- ПОЛЕ ПОИСКА / ФИЛЬТРАЦИИ ПО ЖЕЛАНИЮ -->\\n\\n          <clr-input-container>\\n\\n            <label #label for=\\\"wish\\\" class=\\\"input-label clr-col-12\\\">Желание</label>\\n            <input type=\\\"text\\\" clrInput formControlName=\\\"wish\\\" id=\\\"wish\\\" name=\\\"wish\\\" autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n          </clr-input-container>\\n\\n        </form>\\n\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" (click)=\\\"applyFilter()\\\" class=\\\"btn btn-primary mt-1\\\">Фильтровать</button>\\n        </div>\\n\\n      </div>\\n    </clr-modal>\\n\\n  </div>\\n\\n  <app-sidebar class=\\\"sidenav\\\"></app-sidebar>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../../service/http.service';\nimport {Wish} from '../../../dto/wish';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {throwError, timer} from 'rxjs';\nimport {Subscription} from 'rxjs/Subscription';\nimport {catchError, tap} from 'rxjs/operators';\nimport {Salary} from '../../../dto/salary';\nimport {HttpParams} from '@angular/common/http';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {WishListGroup} from '../../../dto/wish-list-group';\nimport {WishGroupItem} from '../../../dto/wish-group-item';\nimport {environment} from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: 'main.component.html',\n  providers: [HttpService],\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  // --------------------------------- URL'ы -------------------------------------\n\n\n  SERVER_URL: string = environment.serverUrl;\n\n  myBaseUrl = this.SERVER_URL + '/rest/wishes';\n  _myBaseUrl = 'http://localhost:8080/rest/wishes';\n\n  apiUrl = this.myBaseUrl + '/all'; // все желания // основная ссылка на api\n  priorityWishesUrl = this.myBaseUrl + '/priority'; // приоритетные желания\n  groupWishesUrl = this.myBaseUrl + '/groups';\n  userViewModeUrl = this.myBaseUrl + '/users/toggle';\n  allWishesUrl = this.myBaseUrl + '/all'; // все желания\n  apiGetSumm = this.myBaseUrl + '/summ'; // ссылка для получения сумм\n  apiSalary = this.myBaseUrl + '/salary'; // ссылка для получения сумм\n  parseUrl = this.myBaseUrl + '/parsecsv'; // url для парсинга csv\n  changePriorityUrl = this.myBaseUrl + '/changepriority'; // url для быстрого изменения приоритета\n  changePriorityMonthUrl = this.myBaseUrl + '/changemonth'; // url для быстрого изменения приоритета\n\n\n  // --------------------------------- ПЕРЕМЕННЫЕ -------------------------------------\n\n  cryptokey = ''; // пользовательский ключ шифрования\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n  summAll = 0; // отображение сум по всем желаниям\n  summPriority = 0; // отображение сум по приоритетным желаниям\n  periodAll = 0; // период реализации для всего\n  periodPriority = 0; // период реализации для приоритетного\n  implementationPeriod = ''; // средний период реализации желаний\n  filterMode = false; // период реализации для приоритетного\n  filterButtonText = 'ПОИСК/ФИЛЬТР'; // период реализации для приоритетного\n  monthOrdermode = false; // режим отображение дерева группировки по месяцам\n  // private wishFilter = new WishNameFilter();\n  isSalaryExists = false;\n\n// --------------------------------- ВКЛЮЧЕНИЕ МОДАЛОВ -------------------------------------\n\n  isEdit = false; // режим редактирования для отображения / или чтобы спрятать модальное окно\n  isSalaryAdd = false; // режим добавления зп\n  isEditMode = false; // редактировать или добавить\n  isCsvParse = false; // отправить на парсинг csv\n  isFilterModal = false; // вывести модал фильтрации\n\n  // --------------------------------- ХРАНИЛИЩА -------------------------------------\n\n  wishes: Wish[] = []; // контейнер желаний\n  wishGroups: WishListGroup[] = []; // контейнер желаний\n  filters = ['Все', 'Приоритет', 'Помесячная группировка']; // фильтры\n  groupMonthSort = ['По имени', 'По сумме [1..10]', 'По сумме [10..1]']; // сортировка помесячной группировки\n\n  // --------------------------------- ТЕКУЩИЙ ПОЛЬЗОВАТЕЛЬ И ЕГО ДАННЫЕ -------------------------------------\n\n  isUserCrypto: boolean;\n  userRole: string;\n\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  // --------------------------------- ФОРМЫ -------------------------------------\n  uploadForm: FormGroup;\n  form = this.fb.group({\n    id: ['', []],\n    name: ['', [\n      Validators.required,\n      Validators.maxLength(160),\n    ]],\n    description: ['', []],\n    url: ['', []],\n    priority: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    price: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]]\n  });\n\n  salaryForm = this.fb.group({\n    salary: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    residualSalary: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]]\n  });\n\n  csvForm = this.fb.group({\n    csvfile: ['', []]\n  });\n\n  filterForm = this.fb.group({\n    wish: ['', [\n      Validators.required\n    ]]\n  });\n\n  constructor(private commonService: CommonService, private httpService: HttpService, private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.isUserCrypto = false;\n    this.getWishes(this.apiUrl);\n    this.uploadForm = this.fb.group({\n      profile: ['']\n    });\n\n    this.getUserViewMode();\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n\n      } else {\n\n        this.globalError = error;\n        this.isEdit = false;\n        this.isSalaryAdd = false;\n\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n          this.getWishes(this.apiUrl);\n        } else if (this.globalError.messageType === this.globalError.USER_DATA_CHANGE_OK) {\n          this.isEdit = false;\n          this.isSalaryAdd = false;\n          this.isCsvParse = false;\n          this.result = this.globalError.USER_DATA_CHANGE_OK;\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n        } else {\n          this.error = error.messageType;\n\n          timer(4000).subscribe(() => {\n            this.error = null;\n          });\n        }\n      }\n    });\n\n    // Закрываем пункт меню группировки по месяцам если нет зарплат\n\n    console.log('this.isSalaryExists - > ', this.isSalaryExists);\n\n    if (this.isSalaryExists) {\n      this.filters = ['Все', 'Приоритет', 'Помесячная группировка']; // фильтры\n    } else {\n      this.filters = ['Все', 'Приоритет']; // фильтры\n    }\n\n    // Проверка ключа шифрования\n    this.cryptokey = localStorage.getItem('cryptokey');\n    if ((this.isUserCrypto) && (!this.cryptokey)) {\n\n      this.error = 'Мы не смогли забрать с куки ваш ключ шифрования и при этом у вас включена эта настройка. ' +\n        'Задайте ключ шифрования меню О пользователе';\n\n      timer(4000).subscribe(() => {\n        this.error = null;\n      });\n    }\n  }\n\n  getUserViewMode() {\n\n    this.httpService.getData(this.userViewModeUrl + '/GET').pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить настройки пользовательского отображения!');\n      })\n    ).subscribe(data => {\n      console.log('data.viewMode => ' + data.viewMode);\n      if (data.viewMode === 'TREE') {\n        this.monthOrdermode = true;\n        this.getWishesWithMonthGroupping('?sortType=all');\n      } else {\n        this.monthOrdermode = false;\n      }\n\n    });\n  }\n\n  setUserViewMode(mode: string) {\n\n    this.httpService.getData(this.userViewModeUrl + '/' + mode).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить настройки пользовательского отображения!');\n      })\n    ).subscribe(data => {\n      console.log('data.viewMode => ' + data.viewMode);\n      /*if (data.viewMode === 'TREE') {\n        this.monthOrdermode = true;\n      } else {\n        this.monthOrdermode = false;\n      }*/\n    });\n  }\n\n\n  getWishesWithMonthGroupping(sorting: string) {\n\n    this.httpService.getData(this.groupWishesUrl + sorting).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить желания!');\n      })\n    ).subscribe(data => {\n\n      this.wishGroups = data['list'];\n      this.monthOrdermode = true;\n\n      this.isCrypto();\n\n      if (this.isUserCrypto) {\n        console.log('decrypt-mode');\n        this.decryptOrderedWishes();\n      }\n    });\n  }\n\n\n  // Изменить сортировку помесячной группировки\n  sortGroupList(item: string) {\n\n  //  if (this.isUserCrypto) {\n      if (item === 'По имени') {\n        this.wishGroups.forEach((element) => {\n          element.wishList.sort((a, b): number => {\n            if (a.wish < b.wish) return -1;\n            if (a.wish > b.wish) return 1;\n            return 0;\n          });\n        });\n      } else if (item === 'По сумме [1..10]') {\n        this.wishGroups.forEach((element) => {\n          element.wishList.sort((a, b): number => {\n            if (a.price < b.price) return -1;\n            if (a.price > b.price) return 1;\n            return 0;\n          });\n        });\n      } else {\n        this.wishGroups.forEach((element) => {\n          element.wishList.sort((a, b): number => {\n            return b.price - a.price;\n          });\n        });\n      }\n  //  } else {\n\n      /*if (item === 'По имени') {\n        this.getWishesWithMonthGroupping('?sortType=name');\n      } else if (item === 'По сумме [1..10]') {\n        this.getWishesWithMonthGroupping('?sortType=price-asc');\n      } else {\n        this.getWishesWithMonthGroupping('?sortType=price-desc');\n      }*/\n    //}\n  }\n\n  changeFilter(item: string) {\n\n    if (item === 'Все') {\n      this.apiUrl = this.allWishesUrl;\n    } else if (item === 'Помесячная группировка') {\n\n      this.getWishesWithMonthGroupping('?sortType=all');\n      this.setUserViewMode('TREE');\n\n    } else {\n      this.apiUrl = this.priorityWishesUrl;\n    }\n    this.getWishes(this.apiUrl);\n  }\n\n  up(event: any, item: Wish) {\n    item.priority = item.priority + 1;\n    this.wishes.sort((a, b) => a.priority - b.priority);\n  }\n\n\n  down(event: any, item: Wish) {\n\n    item.priority = item.priority - 1;\n    if (item.priority < 1) {\n      item.priority = 1;\n    }\n    this.wishes.sort((a, b) => a.priority - b.priority);\n  }\n\n\n  isCrypto() {\n\n    this.httpService.isCryptoUser().pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить крипто-статус пользователя!');\n      })\n    ).subscribe(data => {\n      this.isUserCrypto = data.userCryptoMode;\n      this.userRole = data.userRole;\n\n\n      console.log('crypto -> ' + data.userCryptoMode);\n      console.log('userRole -> ' + data.userRole);\n    });\n  }\n\n\n  decryptWishes() {\n    console.log('decrypt method');\n    this.wishes.forEach((element) => {\n      element.wish = this.commonService.convertText('decr', element.wish, this.cryptokey);\n      element.description = this.commonService.convertText('decr', element.description, this.cryptokey);\n      element.url = this.commonService.convertText('decr', element.url, this.cryptokey);\n    });\n  }\n\n  decryptOrderedWishes() {\n    console.log('decrypt method for ordered wishes');\n    this.wishGroups.forEach((month) => {\n      month.wishList.forEach((element) => {\n        console.log('element.wish', element.wish);\n        // console.log('this.cryptokey', this.cryptokey);\n        console.log('test', this.commonService.convertText('decr', element.wish, this.cryptokey));\n        element.wish = this.commonService.convertText('decr', element.wish, this.cryptokey);\n      });\n    });\n  }\n\n\n  getWishes(url: string) {\n\n    this.isCrypto();\n\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить желания!');\n      })\n    ).subscribe(data => {\n      this.wishes = data['list'];\n      console.log(this.wishes);\n      if (this.isUserCrypto) {\n        console.log('decrypt-mode');\n        this.decryptWishes();\n      }\n    });\n\n\n    this.httpService.getData(this.apiGetSumm).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно посчитать итоговые стоимости!');\n      })\n    ).subscribe(data => {\n      this.summAll = data.all;\n      this.summPriority = data.priority;\n      this.periodAll = data.allPeriodForImplementation;\n      this.periodPriority = data.priorityPeriodForImplementation;\n      this.implementationPeriod = data.averageImplementationTime;\n\n      this.isSalaryExists = true;\n      this.filters = ['Все', 'Приоритет', 'Помесячная группировка'];\n      console.log('Sal: ' + data.lastSalary);\n    });\n  }\n\n  deleteWish() {\n    this.httpService.deleteWish(this.form.value.id, this.myBaseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить желание!');\n      })\n    )\n      .subscribe(res => {\n        this.showAlert('Желание с id [' + this.form.value.id + '] успешно удалено!', 'ADD MODE', res);\n      });\n  }\n\n  toMainTableMode() {\n\n    this.monthOrdermode = false;\n    this.setUserViewMode('TABLE');\n\n  }\n\n  errorHandler(err, message: string) {\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    console.log('error - ' + err.error);\n    if (err.error === 'ERR-01') {\n      this.error = 'У вас нет сохраненных зарплат! Невозможно посчитать сроки реализации! Добавьте хотя бы одну зарплату!';\n      this.isSalaryExists = false;\n      this.filters = ['Все', 'Приоритет'];\n    } else if (err.error === 'ERR-02') {\n      this.error = 'У вас нет сохраненных желаний! Добавьте хотя бы одно желание!';\n      this.isSalaryExists = false;\n      this.filters = ['Все', 'Приоритет'];\n    } else {\n      this.error = message;\n    }\n\n    console.log(err);\n    timer(4000).subscribe(() => {\n      this.error = null;\n    });\n\n    return throwError(err);\n  }\n\n  openEditWish(event: any, item: Wish, isedit: number) {\n\n\n    // Если это юзер с шифрованием на фронте и при этом у него не задан ключ\n    if ((!this.cryptokey) && (this.isUserCrypto)) {\n\n      this.error = 'Задайте ключ шифрование в меню О пользователе. ' +\n        'Без этого при включенном режиме шифрования пользовательских данных мы не можем добавить желание!';\n      timer(4000).subscribe(() => {\n        this.error = null;\n      });\n    } else {\n\n      if (isedit === 1) {\n        this.isEdit = true;\n        this.isEditMode = true;\n\n        this.form.patchValue({\n          id: item.id,\n          name: item.wish,\n          description: item.description,\n          url: item.url,\n          priority: item.priority,\n          price: item.price,\n        });\n\n      } else {\n        this.isEdit = true;\n        this.isEditMode = false;\n\n        this.form.patchValue({\n          id: 1,\n          name: '',\n          description: 'какое-то описание',\n          url: '',\n          priority: 1,\n          price: 0,\n        });\n\n      }\n    }\n  }\n\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadForm.get('profile').setValue(file);\n    }\n  }\n\n  // Отправить файл на парсинг\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('csvfile', this.uploadForm.get('profile').value);\n    console.log(this.uploadForm.get('profile').value);\n    this.httpService.sendFile(formData, this.parseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно спарсить файл !');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Парсинг выполнен! Добавлено: ' + res.itemsAdded + ' желаний!', 'PARSE MODE', res);\n    });\n\n  }\n\n  // Открыть диалог выбора csv-файла для парсинга на сервере.\n  openParseCsv(event: any) {\n    this.isCsvParse = true;\n  }\n\n\n  // Добавить в Мультипар-форму подгруженый csv-файл\n  sendCsvFile() {\n\n    const reader = new FileReader();\n    const file = this.csvForm.value.csvfile;\n    reader.readAsArrayBuffer(file)\n    console.log(file.name);\n    this.isCsvParse = false;\n  }\n\n  openAddSalaryModal(event: any) {\n\n    this.isSalaryAdd = true;\n    this.isEditMode = false;\n    this.isEditMode = false;\n\n    this.salaryForm.patchValue({\n      salary: 1,\n      residualSalary: 1\n    });\n  }\n\n  showAlert(text: string, mode: string, result: any) {\n    console.log(mode);\n    console.log(result);\n\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    this.isCsvParse = false;\n    this.result = text;\n    timer(4000).subscribe(() => {\n      this.result = null;\n    });\n  }\n\n  addSalary() {\n    const salary = new Salary(this.salaryForm.value.salary,\n      this.salaryForm.value.residualSalary);\n\n    console.log(salary);\n\n    this.httpService.sendSalary(salary, this.apiSalary).pipe(\n      catchError(err => {\n\n        return this.errorHandler(err, 'Невозможно добавить зарплату!');\n      })\n    ).subscribe(hero => {\n\n      this.showAlert('Зарплата успешно обновлена!', 'ADD MODE', hero);\n      this.getWishes(this.apiUrl);\n    });\n\n  }\n\n  realizeWish() {\n    const wish = new Wish(this.form.value.id,\n      this.form.value.name,\n      this.form.value.price,\n      this.form.value.priority,\n      false,\n      this.form.value.description,\n      this.form.value.url,\n      true\n    );\n    if (!this.cryptokey) {\n      console.log('cryptokey is null. Try to fix it');\n      this.cryptokey = localStorage.getItem('cryptokey');\n    }\n\n    if (this.isUserCrypto) {\n      wish.wish = this.commonService.convertText('encrypt', wish.wish, this.cryptokey);\n      wish.description = this.commonService.convertText('encrypt', wish.description, this.cryptokey);\n      wish.url = this.commonService.convertText('encrypt', wish.url, this.cryptokey);\n      console.log('encrypted wish', wish.wish);\n    }\n\n    this.httpService.updateWish(wish, this.myBaseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно обновить желание!');\n      })\n    ).subscribe(hero => {\n\n      this.showAlert('Желание с id [' + wish.id + '] успешно обновлено!', 'ADD MODE', hero);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n\n  addEditWish() {\n\n    const wish = new Wish(this.form.value.id,\n      this.form.value.name,\n      this.form.value.price,\n      this.form.value.priority,\n      false,\n      this.form.value.description,\n      this.form.value.url,\n      false\n    );\n\n    if (!this.cryptokey) {\n      console.log('cryptokey is null. Try to fix it');\n      this.cryptokey = localStorage.getItem('cryptokey');\n    }\n\n    if (this.isUserCrypto) {\n      wish.wish = this.commonService.convertText('encrypt', wish.wish, this.cryptokey);\n      wish.description = this.commonService.convertText('encrypt', wish.description, this.cryptokey);\n      wish.url = this.commonService.convertText('encrypt', wish.url, this.cryptokey);\n      console.log('encrypted wish', wish.wish);\n    }\n\n    if (this.isEditMode) {\n\n      this.httpService.updateWish(wish, this.myBaseUrl).pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'Невозможно обновить желание!');\n        })\n      ).subscribe(hero => {\n\n        this.showAlert('Желание с id [' + wish.id + '] успешно обновлено!', 'ADD MODE', hero);\n        this.getWishes(this.apiUrl);\n      });\n\n    } else {\n\n      this.httpService.sendData(wish, this.myBaseUrl).pipe(\n        catchError(err => {\n\n\n          return this.errorHandler(err, 'Невозможно добавить желание!');\n        })\n      ).subscribe(hero => {\n\n        this.showAlert('Желание успешно добавлено!', 'ADD MODE', hero);\n        this.getWishes(this.apiUrl);\n      });\n    }\n  }\n\n  changePriority(item: Wish, move: string) {\n\n    console.log('change priority');\n    console.log('URL ->' + this.changePriorityUrl + '/' + item.id + '/' + move);\n    this.httpService.getData(this.changePriorityUrl + '/' + item.id + '/' + move).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен на ' + res.priority, 'ADD MODE', res);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n\n  changePriorityMonth(item: WishGroupItem, move: string) {\n\n    console.log('change priority month => ' + item);\n    console.log('URL ->' + this.changePriorityMonthUrl + '/' + item.id + '/' + move);\n    this.httpService.getData(this.changePriorityMonthUrl + '/' + item.id + '/' + move).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен! ', 'ADD MODE', res);\n\n      this.getWishes(this.apiUrl);\n      this.getWishesWithMonthGroupping('?sortType=all');\n\n    });\n  }\n\n\n  // Показать окно включения/выключения фильтров\n  filterWishes() {\n    if (!this.filterMode) {\n      this.isFilterModal = true;\n    } else {\n      this.getWishes(this.apiUrl);\n      this.filterMode = false;\n      this.filterButtonText = 'ПОИСК/ФИЛЬТР';\n    }\n  }\n\n\n// ЛОГИН и АВТОРИЗАЦИЯ\n\n  login(login: string, pwd: string) {\n\n    const body = new HttpParams()\n      .set('username', login)\n      .set('password', pwd);\n\n    this.httpService.login(body.toString())\n      .pipe(\n        tap(resp => {\n          console.log('header', resp.headers.get('Authorization'));\n          sessionStorage.setItem('token', resp.headers.get('Authorization'));\n          localStorage.setItem('token', resp.headers.get('Authorization'));\n          console.log('storage', localStorage.getItem('token'));\n        }))\n      .subscribe();\n  }\n\n  applyFilter() {\n\n    this.isFilterModal = false;\n    this.filterMode = true; // включаем filtermode\n    this.filterButtonText = 'ВЫКЛЮЧИТЬ ФИЛЬТР'; // период реализации для приоритетного\n\n    this.wishes = this.wishes.filter(\n      wish => wish.wish.toLowerCase().includes(this.filterForm.value.wish.toLowerCase()));\n\n\n    /* const wish = new Wish(1, this.filterForm.value.wish, 0, 1, false, '', '');\n\n     if (this.isUserCrypto) {\n       wish.wish = this.commonService.convertText('encrypt', wish.wish, this.cryptokey);\n       console.log('encrypted wish', wish.wish);\n     }\n\n\n     this.httpService.sendData(wish, this.filterUrl).pipe(\n       catchError(err => {\n         return this.errorHandler(err, 'Невозможно осуществить фильтрацию!');\n       })\n     ).subscribe(hero => {\n       console.log('hero', hero);\n       this.wishes = hero['list'];\n\n       this.showAlert('Фильтр по желаниям активен!', 'ADD MODE', hero);\n     });*/\n\n  }\n\n  /*logout() {\n    console.log('unauthorize');\n    localStorage.removeItem('token');\n  }*/\n\n  /*changeLogin(item: string) {\n\n    if (item === 'Антон') {\n\n      this.login('anton', '123');\n    } else if (item === 'Женя') {\n      this.login('eugene', '123');\n    } else {\n      this.login('nastya', '123');\n    }\n\n    this.getWishes();\n  }*/\n\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  template: `\n\n    <div class=\"content-container\">\n      <div class=\"content-area\">\n      </div>\n      <!--<div class=\"hidden-md-down\">-->\n      <clr-vertical-nav>\n        <a clrVerticalNavLink routerLink=\"../401\" routerLinkActive=\"active\">О проекте</a>\n        <a *ngIf=\"idToken\" clrVerticalNavLink routerLink=\"../\" routerLinkActive=\"active\">Главная</a>\n        <!--<a clrVerticalNavLink routerLink=\"./pikachu\" routerLinkActive=\"active\">Pikachu</a>\n        <a clrVerticalNavLink routerLink=\"./raichu\" routerLinkActive=\"active\">Raichu</a>\n        <a clrVerticalNavLink routerLink=\"./snorlax\" routerLinkActive=\"active\">Snorlax</a>\n        <div class=\"nav-divider\"></div>\n        <a clrVerticalNavLink routerLink=\"./credit\" routerLinkActive=\"active\">Credit</a>-->\n      </clr-vertical-nav>\n      <!--</div>-->\n\n  `,\n  styles: []\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    const idToken = localStorage.getItem('token');\n  }\n\n}\n","module.exports = \"@media screen and (max-width: 500px){\\r\\n\\r\\n  .sidenav {\\r\\n    min-width: 1%;\\r\\n    visibility: hidden;\\r\\n    /*background: #ea1e2c;*/\\r\\n  }\\r\\n}\\r\\n\\r\\n:host{\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L3VuYXV0aG9yaXplL3VuYXV0aG9yaXplLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUU7SUFDRSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHVCQUF1QjtFQUN6QjtBQUNGOztBQUVBO0FBQ0EiLCJmaWxlIjoic3JjL2FwcC91aS9sYXlvdXQvdW5hdXRob3JpemUvdW5hdXRob3JpemUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KXtcclxuXHJcbiAgLnNpZGVuYXYge1xyXG4gICAgbWluLXdpZHRoOiAxJTtcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIC8qYmFja2dyb3VuZDogI2VhMWUyYzsqL1xyXG4gIH1cclxufVxyXG5cclxuOmhvc3R7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"content-container\\\">\\n  <div class=\\\"content-area\\\">\\n\\n    <clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n    <clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n\\n    <h1>Дорогой друг!</h1>\\n    <p>\\n      Сейчас ты находишься на страничке проекта arNote. Это сервис хранения желаний, позволяющий считать сроки реализации, различным образом категорировать и управлять вашими желаниями. Для работы с сервисом необходимо получить логин и пароль от автора сервиса, в будущем будет организована свободная регистрация.\\n    </p>\\n    <p>\\n      Одни из Важных преимуществ сервиса планируется сделать шифрование данных на стороне клиента, что обеспечит полную конфиденциальность. То есть администратор / автор сервиса не сможет прочитать Ваши данные ни при каких обстоятельствах, так как все Ваши записи будет шифрованы по уникальному ключу, который знаете только Вы.\\n    </p>\\n    <p>\\n      По всем вопросам просьба писать автору на <i>antonromanov@list.ru.</i>\\n    </p>\\n\\n  </div>\\n  <app-sidebar class=\\\"sidenav\\\"></app-sidebar>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CommonService} from '../../../service/common.service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MessageCode} from '../../../service/message.code';\nimport {timer} from 'rxjs';\n\n@Component({\n  selector: 'app-unauthorize',\n  templateUrl: './unauthorize.component.html',\n  styleUrls: ['./unauthorize.component.css']\n})\nexport class UnauthorizeComponent implements OnInit {\n\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  constructor(private commonService: CommonService) { }\n\n  ngOnInit() {\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n\n      } else {\n\n        this.globalError = error;\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n\n        } else {\n\n          this.error = error.messageType;\n\n          timer(4000).subscribe(() => {\n            this.error = null;\n          });\n        }\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HeaderComponent } from './layout/header/header.component';\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { ClarityModule } from '@clr/angular';\nimport { MainComponent } from './layout/main/main.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditComponent } from './layout/edit/edit.component';\nimport {BasicAuthHtppInterceptorService} from '../service/basicauthhtppInterceptorservice';\nimport {AppRoutingModule} from '../app-routing/app-routing.module';\nimport { UnauthorizeComponent } from './layout/unauthorize/unauthorize.component';\nimport { JwtHelperService, JWT_OPTIONS  } from '@auth0/angular-jwt';\n\n\n\n@NgModule({\n  declarations: [LayoutComponent, HeaderComponent, SidebarComponent, MainComponent, EditComponent, UnauthorizeComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    ClarityModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthHtppInterceptorService, multi: true },\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n    JwtHelperService\n  ],\n  exports: [LayoutComponent]\n})\nexport class UiModule { }\n","export const environment = {\n  production: true,\n  serverUrl: ''\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}