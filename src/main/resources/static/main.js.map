{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dto/DeleteIncomesRq.ts","webpack:///./src/app/dto/EditLoanRq.ts","webpack:///./src/app/dto/GetDetailedBalanceRq.ts","webpack:///./src/app/dto/GetLoansByDateRq.ts","webpack:///./src/app/dto/NewFreezeRq.ts","webpack:///./src/app/dto/NewGoalRq.ts","webpack:///./src/app/dto/NewIncomeRq.ts","webpack:///./src/app/dto/NewInstrumentRq.ts","webpack:///./src/app/dto/NewLoanRq.ts","webpack:///./src/app/dto/SalaryRq.ts","webpack:///./src/app/dto/ToggleDeltaRq.ts","webpack:///./src/app/dto/salary.ts","webpack:///./src/app/dto/searchwishes.ts","webpack:///./src/app/dto/user.ts","webpack:///./src/app/dto/wish.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/basicauthhtppInterceptorservice.ts","webpack:///./src/app/service/common.service.ts","webpack:///./src/app/service/http.service.ts","webpack:///./src/app/service/message.code.ts","webpack:///./src/app/service/modal.service.ts","webpack:///./src/app/ui/layout/edit/edit.component.css","webpack:///./src/app/ui/layout/edit/edit.component.html","webpack:///./src/app/ui/layout/edit/edit.component.ts","webpack:///./src/app/ui/layout/finplanning/finplanning.component.css","webpack:///./src/app/ui/layout/finplanning/finplanning.component.html","webpack:///./src/app/ui/layout/finplanning/finplanning.component.ts","webpack:///./src/app/ui/layout/header/header.component.css","webpack:///./src/app/ui/layout/header/header.component.html","webpack:///./src/app/ui/layout/header/header.component.ts","webpack:///./src/app/ui/layout/investing/investing.component.html","webpack:///./src/app/ui/layout/investing/investing.component.ts","webpack:///./src/app/ui/layout/layout.component.html","webpack:///./src/app/ui/layout/layout.component.ts","webpack:///./src/app/ui/layout/main/main.component.css","webpack:///./src/app/ui/layout/main/main.component.html","webpack:///./src/app/ui/layout/main/main.component.ts","webpack:///./src/app/ui/layout/monthgrouping/monthgrouping.component.css","webpack:///./src/app/ui/layout/monthgrouping/monthgrouping.component.html","webpack:///./src/app/ui/layout/monthgrouping/monthgrouping.component.ts","webpack:///./src/app/ui/layout/new-modal/ar-modal.component.ts","webpack:///./src/app/ui/layout/session-timeout-modal/session-timeout-modal.component.css","webpack:///./src/app/ui/layout/session-timeout-modal/session-timeout-modal.component.html","webpack:///./src/app/ui/layout/session-timeout-modal/session-timeout-modal.component.ts","webpack:///./src/app/ui/layout/sidebar/sidebar.component.ts","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.css","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.html","webpack:///./src/app/ui/layout/unauthorize/unauthorize.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MainComponent} from '../ui/layout/main/main.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {InvestingComponent} from '../ui/layout/investing/investing.component';\nimport {AuthGuardService as AuthGuard} from '../service/auth-guard.service';\nimport {MonthsComponent} from '../ui/layout/monthgrouping/monthgrouping.component';\nimport {UnauthorizeComponent} from '../ui/layout/unauthorize/unauthorize.component';\nimport {FinPlanningComponent} from '../ui/layout/finplanning/finplanning.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '401',\n    component: UnauthorizeComponent\n  },\n  {\n    path: 'investing',\n    component: InvestingComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'months',\n    component: MonthsComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'finplanning',\n    component: FinPlanningComponent,\n    canActivate: [AuthGuard]\n  }\n\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--<router-outlet></router-outlet>-->\\n<app-layout>\\n  <h1>{{title}}</h1>\\n</app-layout>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: []\n})\nexport class AppComponent {\n  title = 'arnote';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { UiModule } from './ui/ui.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthGuardService} from './service/auth-guard.service';\nimport {AuthService} from './service/auth.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    UiModule\n  ],\n  providers: [AuthGuardService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {IncomeRs} from './IncomeRs';\n\nexport class DeleteIncomesRq {\n\n  constructor() {\n  }\n\n  idList: IncomeRs[] = [];\n}\n\n","export class EditLoanRq {\n\n  constructor(id: number, desc: string, startAmount: number, fullPayPerMonth: number, realPayPerMonth: number, startDate: string, slotNumber: number) {\n    this.id = id;\n    this.desc = desc;\n    this.startAmount = startAmount;\n    this.fullPayPerMonth = fullPayPerMonth;\n    this.realPayPerMonth = realPayPerMonth;\n    this.startDate = startDate;\n    this.slotNumber = slotNumber;\n  }\n\n  id: number;\n  desc: string;\n  startAmount: number;\n  fullPayPerMonth: number;\n  realPayPerMonth: number;\n  startDate: string;\n  slotNumber: number;\n}\n\n","export class GetDetailedBalanceRq {\n\n  constructor(month: number, year: number) {\n    this.month = month;\n    this.year = year;\n  }\n\n  month: number;\n  year: number;\n}\n\n","export class GetLoansByDateRq {\n\n  constructor() {\n  }\n\n  startDate: string;\n}\n\n","export class NewFreezeRq {\n\n  constructor() {\n  }\n\n  amount: number;\n  year: number;\n  month: number;\n}\n\n","export class NewGoalRq {\n\n  constructor() {}\n\n  description: string;\n  price: number;\n  startDate: string;\n  repayment: number;\n  id: number;\n}\n\n","export class NewIncomeRq {\n\n  constructor() {\n  }\n\n  income: number;\n  isBonus: boolean;\n  desc: string;\n  incomeDate: string;\n  id: number;\n}\n\n","\nexport class NewInstrumentRq {\n\n\n  constructor(ticker: string, isPlan: boolean, bondType: string, price: number, lot: number, purchaseDate: string) {\n    this.ticker = ticker;\n    this.isPlan = isPlan;\n    this.bondType = bondType;\n    this.price = price;\n    this.lot = lot;\n    this.purchaseDate = purchaseDate;\n  }\n\n  ticker: string;\n  isPlan: boolean;\n  bondType: string;\n  price: number;\n  lot: number;\n  purchaseDate: string;\n}\n","export class NewLoanRq {\n\n  constructor(startAmount: number, fullPayPerMonth: number, realPayPerMonth: number, startDate: string, desc: string, slotNumber: number) {\n    this.startAmount = startAmount;\n    this.fullPayPerMonth = fullPayPerMonth;\n    this.realPayPerMonth = realPayPerMonth;\n    this.startDate = startDate;\n    this.slotNumber = slotNumber;\n    this.desc = desc;\n  }\n\n  startAmount: number;\n  fullPayPerMonth: number;\n  realPayPerMonth: number;\n  startDate: string;\n  desc: string;\n  slotNumber: number;\n}\n\n","export class SalaryRq {\n\n\n  constructor() {\n  }\n\n  fullSalary: number;\n  residualSalary: number;\n  id: number;\n  livingExpenses: number;\n  salaryDate: string;\n}\n","export class ToggleDeltaRq {\n\n  constructor(deltaType: string) {\n    this.deltaType = deltaType;\n  }\n\n  deltaType: string;\n}\n","export class Salary {\n\n  constructor(fullsalary: number, residualSalary: number) {\n    this.fullsalary = fullsalary;\n    this.residualSalary = residualSalary;\n  }\n\n  fullsalary: number;\n  residualSalary: number;\n}\n","export class SearchRq {\n\n  constructor(wishName: string) {\n    this.wishName = wishName;\n  }\n\n  wishName: string;\n}\n","export class User {\n   constructor() {}\n\n  id: number;\n  login: string;\n  pwd: string;\n  userRole: string;\n  userCryptoMode: boolean;\n  creationDate: string;\n  email: string;\n  fullname: string;\n\n}\n","export class Wish {\n\n  constructor(id: number, wish: string, price: number, priority: number, archive: boolean,\n              description: string, url: string, realized: boolean) {\n    this.id = id;\n    this.wish = wish;\n    this.price = price;\n    this.priority = priority;\n    this.archive = archive;\n    this.description = description;\n    this.url = url;\n    this.realized = realized;\n  }\n\n  id: number;\n  wish: string;\n  price: number;\n  priority: number;\n  archive: boolean;\n  description: string;\n  url: string;\n  realized: boolean;\n  priorityGroup: number;\n  creationDate: string;\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n\n@Injectable()\nexport class AuthGuardService  implements CanActivate {\n\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    console.log('is auth - ' + this.auth.isAuthenticated());\n    if (!this.auth.isAuthenticated() ) {\n      this.router.navigate(['401']);\n      return false;\n    }\n    return true;\n  }\n\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {environment} from '../../environments/environment';\nimport {User} from '../dto/user';\n\nconst helper = new JwtHelperService();\nlet myRawToken = localStorage.getItem('token');\nlet isExpired = helper.isTokenExpired(myRawToken);\n\n\n@Injectable()\nexport class AuthService {\n\n  SERVER_URL: string = environment.serverUrl;\n  loginURL = this.SERVER_URL + '/login?';\n\n\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) {\n  }\n\n\n  public login(loginPayload): Observable<HttpResponse<Object>> {\n\n    console.log('loginPayload ->' + loginPayload);\n\n    const headers = {\n      'Content-type': 'application/x-www-form-urlencoded'\n    };\n\n    return this.http.get<HttpResponse<Object>>(this.loginURL + loginPayload, {observe: 'response'});\n  }\n\n  public register(newUser: User, url: string): Observable<User> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<User>(url, newUser, httpOptions);\n  }\n\n  public isAuthenticated(): boolean {\n    return !(helper.isTokenExpired(myRawToken));\n  }\n\n  public refreshToken() {\n    myRawToken = localStorage.getItem('token');\n    isExpired = helper.isTokenExpired(myRawToken);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class BasicAuthHtppInterceptorService implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const idToken = localStorage.getItem('token');\n    if (idToken) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', idToken)\n      });\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {MessageCode} from './message.code';\nimport * as CryptoJS from 'crypto-js';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  private error: MessageCode;\n\n  private errorSubsciber: BehaviorSubject<MessageCode> = new BehaviorSubject<MessageCode>(this.error);\n  error$: Observable<MessageCode> = this.errorSubsciber.asObservable();\n\n  constructor() {\n  }\n\n\n  pushError(error: MessageCode) {\n    console.log('Incoming Error: ' + error.messageType);\n    this.errorSubsciber.next(error);\n  }\n\n  encrypt(keys, value) {\n    const key = CryptoJS.enc.Utf8.parse(keys);\n    const iv = CryptoJS.enc.Utf8.parse(keys);\n    const encrypted = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(value.toString()), key,\n      {\n        keySize: 128 / 8,\n        iv: iv,\n        mode: CryptoJS.mode.CBC,\n        padding: CryptoJS.pad.Pkcs7\n      });\n\n    return encrypted.toString();\n  }\n\n\n  convertText(conversion: string, what: string, key: string) {\n    if (conversion === 'encrypt') {\n      return CryptoJS.AES.encrypt(what.trim(), key.trim()).toString();\n  } else {\n      return CryptoJS.AES.decrypt(what.trim(), key.trim()).toString(CryptoJS.enc.Utf8);\n\n    }\n  }\n\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Wish} from '../dto/wish';\nimport {Salary} from '../dto/salary';\nimport {User} from '../dto/user';\nimport {environment} from '../../environments/environment';\nimport {NewInstrumentRq} from '../dto/NewInstrumentRq';\nimport {Bond} from '../dto/bond';\nimport {SearchRq} from '../dto/searchwishes';\nimport {NewLoanRq} from '../dto/NewLoanRq';\nimport {EditLoanRq} from '../dto/EditLoanRq';\nimport {NewIncomeRq} from '../dto/NewIncomeRq';\nimport {GetDetailedBalanceRq} from '../dto/GetDetailedBalanceRq';\nimport {GetLoansByDateRq} from '../dto/GetLoansByDateRq';\nimport {NewGoalRq} from '../dto/NewGoalRq';\nimport {DeleteIncomesRq} from '../dto/DeleteIncomesRq';\nimport {SalaryRq} from '../dto/SalaryRq';\nimport {NewFreezeRq} from '../dto/NewFreezeRq';\nimport {FinPlan} from '../dto/finplan';\nimport {ToggleDeltaRq} from '../dto/ToggleDeltaRq';\n\n\n@Injectable()\nexport class HttpService {\n\n  SERVER_URL: string = environment.serverUrl;\n  loginURL = this.SERVER_URL + '/login?';\n  isCryptoUserUrl = this.SERVER_URL + '/rest/wishes/users/getcurrent';\n\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getData(url: string): Observable<any> {\n    return this.http.get(url);\n  }\n\n  public searchWishes(request: SearchRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<Wish>(url, request, httpOptions);\n  }\n\n  public sendData(wish: Wish, url: string): Observable<Wish> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<Wish>(url, wish, httpOptions);\n  }\n\n  public addInstrument(instrument: NewInstrumentRq, url: string): Observable<Bond> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<Bond>(url, instrument, httpOptions);\n  }\n\n  public addLoan(loan: NewLoanRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<NewLoanRq>(url, loan, httpOptions);\n  }\n\n  public addGoal(loan: NewGoalRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<NewGoalRq>(url, loan, httpOptions);\n  }\n\n  public editGoal(loan: NewGoalRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put<NewGoalRq>(url, loan, httpOptions);\n  }\n\n  public editSalary(loan: SalaryRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put<SalaryRq>(url, loan, httpOptions);\n  }\n\n  public addIncome(loan: NewIncomeRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<NewIncomeRq>(url, loan, httpOptions);\n  }\n\n  public addFreeze(loan: NewFreezeRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<NewFreezeRq>(url, loan, httpOptions);\n  }\n\n  public getDetailedBalance(request: GetDetailedBalanceRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<GetDetailedBalanceRq>(url, request, httpOptions);\n  }\n\n  public getLoansByDate(request: GetLoansByDateRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<GetLoansByDateRq>(url, request, httpOptions);\n  }\n\n  public editLoan(loan: EditLoanRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put<NewLoanRq>(url, loan, httpOptions);\n  }\n\n  public editIncome(loan: NewIncomeRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.put<NewIncomeRq>(url, loan, httpOptions);\n  }\n\n  public deleteIncomes(incomes: DeleteIncomesRq, url: string): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post(url, incomes, httpOptions);\n  }\n\n  public deleteInstrument(ticker: string, url: string): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.delete(url + '?ticker=' + ticker, httpOptions);\n  }\n\n  public deleteFinPlanningEntity(id: number, url: string): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.delete(url + '?id=' + id, httpOptions);\n  }\n\n  public sendFile(formData: FormData, url: string): Observable<any> {\n    return this.http.post<any>(url, formData);\n  }\n\n  public sendSalary(salary: Salary, url: string): Observable<Salary> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.post<Salary>(url, salary, httpOptions);\n  }\n\n  public updateWish(wish: Wish, url: string): Observable<Wish> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.put<Wish>(url, wish, httpOptions);\n  }\n\n  public deleteWish(id: string, url: string): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.delete(url + '/' + id, httpOptions);\n  }\n\n\n  public login(loginPayload): Observable<HttpResponse<Object>> {\n\n    console.log('loginPayload ->' + loginPayload);\n\n    const headers = {\n      'Content-type': 'application/x-www-form-urlencoded'\n    };\n\n    return this.http.get<HttpResponse<Object>>(this.loginURL + loginPayload, {observe: 'response'});\n  }\n\n  public isCryptoUser(): Observable<any> {\n    return this.http.get(this.isCryptoUserUrl);\n  }\n\n  public updateUserData(user: User, url: string): Observable<User> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.put<User>(url, user, httpOptions);\n  }\n\n  public addSalary(loan: SalaryRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<SalaryRq>(url, loan, httpOptions);\n  }\n\n  public toggleDelta(loan: ToggleDeltaRq, url: string): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post<ToggleDeltaRq>(url, loan, httpOptions);\n  }\n\n  public deleteFreeze(selectedFinPlan: FinPlan, url: string): Observable<any> {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    return this.http.delete(url + '?year=' + selectedFinPlan.year + '&month=' + selectedFinPlan.monthNumber, httpOptions);\n  }\n}\n","export class MessageCode {\n  messageType: string;\n\n// ===================================================\n// ====================  КОДЫ   ОШИБОК ===============\n// ===================================================\n\n  WRONG_LOGIN = 'Ошибка аутентификации! Не верные логин и/или проль!';\n  REGISTER_ERROR = 'Ошибка регистрации!';\n  USER_DATA_CHANGE_SOME_ERROR = 'Невозможно изменить данные пользователя. Произошла техническая ошибка!';\n  USER_DATA_CHANGE_SUCH_USER_EXISTS = 'Данное имя пользователя занято! Выберете другое!';\n  UNDER_CONSTRACTION = 'Данная функция еще не реализована! Пождите совсем чуть-чуть....';\n  SESSION_EXPIRED = 'Ваша сессия истекла!';\n\n\n// ===================================================\n// ============  КОДЫ  СЕРВИСНЫХ СООБЩЕНИЙ ===========\n// ===================================================\n\n  AUTH_LOGOUT = 'LOGOUT';\n  AUTH_LOGIN_OK = 'LOGIN';\n  USER_DATA_CHANGE_OK = 'Пользовательские данные успешно изменены!';\n  REGISTER_OK = 'Пользователь успешно зарегистрирован!';\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ModalService {\n  private modals: any[] = [];\n\n  add(modal: any) {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n\n  open(id: string) {\n    // open modal specified by id\n    const modal: any = this.modals.filter(x => x.id === id)[0];\n    modal.open();\n  }\n\n  close(id: string) {\n    // close modal specified by id\n    const modal: any = this.modals.filter(x => x.id === id)[0];\n    modal.close();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n::ng-deep clr-icon:hover {\\n  transform: scale(1.2);\\n\\n}\\n\\n\\n\\n.dropdown .dropdown-toggle {\\n  margin: 5px;\\n}\\n\\n\\n\\n.sumallrow td{\\n  background-color: #790909;\\n  color: #ffffff;\\n}\\n\\n\\n\\n::ng-deep  .main-container {\\n}\\n\\n\\n\\n@media screen and (min-width: 1447px) {\\n  .ar-900-show {\\n    display:none!important;\\n  }\\n}\\n\\n\\n\\n@media screen and (max-width: 1447px) {\\n  .ar-900-hide {\\n    display:none!important;\\n  }\\n  .ar-900-show {\\n    display:initial!important;\\n  }\\n}\\n\\n\\n\\n@media screen and (max-width: 475px) {\\n  .ar-475-hide {\\n    display:none!important;\\n  }\\n\\n  .string-truncate {\\n    width: 120px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n  }\\n\\n}\\n\\n\\n\\n@media screen and (min-width: 475px) {\\n  .ar-475-show {\\n    display:none!important;\\n  }\\n}\\n\\n\\n\\n@media screen and (max-width: 360px) {\\n  .ar-360-hide {\\n    display:none!important;\\n  }\\n}\\n\\n\\n\\n@media screen and (max-width: 500px){\\n\\n  .table tr td:nth-child(3),\\n  .table tr th:nth-child(3) {\\n    display: none;\\n  }\\n  .table tr td:nth-child(4),\\n  .table tr th:nth-child(4) {\\n    display: none;\\n  }\\n\\n  .table tr td:nth-child(5),\\n  .table tr th:nth-child(5) {\\n    display: none;\\n  }\\n\\n  .table tr td:nth-child(6),\\n  .table tr th:nth-child(6) {\\n    display: none;\\n  }\\n\\n}\\n\\n\\n\\n.fas .fa-arrow-up{\\n  background: #0c5460;\\n}\\n\\n\\n\\n.fa, .fas:hover {\\n  background: aqua;\\n}\\n\\n\\n\\n:host{\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L2ZpbnBsYW5uaW5nL2ZpbnBsYW5uaW5nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBR0UscUJBQXFCOztBQUV2Qjs7OztBQUlBO0VBQ0UsV0FBVztBQUNiOzs7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYztBQUNoQjs7OztBQUVBO0FBQ0E7Ozs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0Y7Ozs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDRjs7OztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQix1QkFBdUI7RUFDekI7O0FBRUY7Ozs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0Y7Ozs7QUFJQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0Y7Ozs7QUFFQTs7RUFFRTs7SUFFRSxhQUFhO0VBQ2Y7RUFDQTs7SUFFRSxhQUFhO0VBQ2Y7O0VBRUE7O0lBRUUsYUFBYTtFQUNmOztFQUVBOztJQUVFLGFBQWE7RUFDZjs7QUFFRjs7OztBQUdBO0VBQ0UsbUJBQW1CO0FBQ3JCOzs7O0FBSUE7RUFDRSxnQkFBZ0I7QUFDbEI7Ozs7QUFDQTs7QUFFQSIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9maW5wbGFubmluZy9maW5wbGFubmluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG46Om5nLWRlZXAgY2xyLWljb246aG92ZXIge1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbiAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xuXG59XG5cblxuXG4uZHJvcGRvd24gLmRyb3Bkb3duLXRvZ2dsZSB7XG4gIG1hcmdpbjogNXB4O1xufVxuXG4uc3VtYWxscm93IHRke1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzkwOTA5O1xuICBjb2xvcjogI2ZmZmZmZjtcbn1cblxuOjpuZy1kZWVwICAubWFpbi1jb250YWluZXIge1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxNDQ3cHgpIHtcbiAgLmFyLTkwMC1zaG93IHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDE0NDdweCkge1xuICAuYXItOTAwLWhpZGUge1xuICAgIGRpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7XG4gIH1cbiAgLmFyLTkwMC1zaG93IHtcbiAgICBkaXNwbGF5OmluaXRpYWwhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ3NXB4KSB7XG4gIC5hci00NzUtaGlkZSB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxuXG4gIC5zdHJpbmctdHJ1bmNhdGUge1xuICAgIHdpZHRoOiAxMjBweDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIH1cblxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0NzVweCkge1xuICAuYXItNDc1LXNob3cge1xuICAgIGRpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gIC5hci0zNjAtaGlkZSB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA1MDBweCl7XG5cbiAgLnRhYmxlIHRyIHRkOm50aC1jaGlsZCgzKSxcbiAgLnRhYmxlIHRyIHRoOm50aC1jaGlsZCgzKSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDQpLFxuICAudGFibGUgdHIgdGg6bnRoLWNoaWxkKDQpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLnRhYmxlIHRyIHRkOm50aC1jaGlsZCg1KSxcbiAgLnRhYmxlIHRyIHRoOm50aC1jaGlsZCg1KSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC50YWJsZSB0ciB0ZDpudGgtY2hpbGQoNiksXG4gIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNikge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxufVxuXG5cbi5mYXMgLmZhLWFycm93LXVwe1xuICBiYWNrZ3JvdW5kOiAjMGM1NDYwO1xufVxuXG5cblxuLmZhLCAuZmFzOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogYXF1YTtcbn1cbjpob3N0e1xuXG59XG4iXX0= */\"","module.exports = \"<clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n\\n<clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n<div>\\n<!--  ТАБЛА ДЛЯ ПОЛНОГО ЭКРАНА  -->\\n  <div class=\\\"ar-900-hide\\\">\\n  <clr-datagrid>\\n    <clr-dg-action-bar>\\n      <div class=\\\"actions-container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"ar-900-hide\\\">\\n            <div class=\\\"clr-row\\\" style=\\\"margin-left: 1%\\\">\\n              <button class=\\\"btn btn-secondary\\\" (click)=\\\"getMainDataFromCache()\\\">Запросить из Кэша</button>\\n              <button class=\\\"btn btn-primary\\\" (click)=\\\"getMainDataFromDb()\\\">Запросить из БД</button>\\n              <button class=\\\"btn btn-secondary\\\" (click)=\\\"addCreditModalShow()\\\">Добавить кредит</button>\\n              <button class=\\\"btn btn-secondary\\\" (click)=\\\"addIncomeModalShow()\\\">Добавить доход</button>\\n              <button class=\\\"btn btn-secondary\\\" (click)=\\\"addGoalModalShow()\\\">Добавить цель / покупку</button>\\n              <button class=\\\"btn btn-secondary\\\" (click)=\\\"salaryModalShow()\\\">Зарплаты</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </clr-dg-action-bar>\\n    <clr-dg-column>Дата</clr-dg-column>\\n    <clr-dg-column>Кредит 1</clr-dg-column>\\n    <clr-dg-column>Кредит 2</clr-dg-column>\\n    <clr-dg-column>Кредит 3</clr-dg-column>\\n    <clr-dg-column>Кредит 4</clr-dg-column>\\n    <clr-dg-column>Кредит 5</clr-dg-column>\\n    <clr-dg-column>Траты</clr-dg-column>\\n    <clr-dg-column>Итого</clr-dg-column>\\n    <clr-dg-row [ngStyle]=\\\"{'background-color': item.color, 'color': item.fontColor, 'border-bottom': item.borderWidth}\\\"\\n                *clrDgItems=\\\"let item of finPlansList\\\" [clrDgItem]=\\\"item\\\">\\n      <clr-dg-cell>{{item.month}} {{item.year}}</clr-dg-cell>\\n      <clr-dg-cell style=\\\"text-align: center\\\"><a\\n        (click)=\\\"editCreditModalShow($event, item, 1)\\\">{{item.credit1 | number}}</a></clr-dg-cell>\\n      <clr-dg-cell style=\\\"text-align: center\\\"><a\\n        (click)=\\\"editCreditModalShow($event, item, 2)\\\">{{item.credit2 | number}}</a></clr-dg-cell>\\n      <clr-dg-cell style=\\\"text-align: center\\\"><a\\n        (click)=\\\"editCreditModalShow($event, item, 3)\\\">{{item.credit3 | number}}</a></clr-dg-cell>\\n      <clr-dg-cell style=\\\"text-align: center\\\"><a\\n        (click)=\\\"editCreditModalShow($event, item, 4)\\\">{{item.credit4 | number}}</a></clr-dg-cell>\\n      <clr-dg-cell style=\\\"text-align: center\\\"><a\\n        (click)=\\\"editCreditModalShow($event, item, 5)\\\">{{item.credit5 | number}}</a></clr-dg-cell>\\n      <clr-dg-cell *ngIf=\\\"item.purchasePlan.purchasePlan.length > 0\\\" style=\\\"text-align: center\\\"><a\\n        (click)=\\\"showEditGoalsListModal($event, item)\\\">{{item.purchasePlan.shortDescription}}</a></clr-dg-cell>\\n      <clr-dg-cell *ngIf=\\\"item.purchasePlan.purchasePlan.length == 0\\\" style=\\\"text-align: center\\\">\\n        <clr-icon shape=\\\"minus\\\"></clr-icon>\\n      </clr-dg-cell>\\n      <clr-dg-cell style=\\\"text-align: center\\\"><a (click)=\\\"remainsModalShow(item)\\\">{{item.remains | number}}\\n        <clr-icon [ngStyle]=\\\"{'color': '#e00c0c'}\\\" *ngIf=\\\"item.freeze\\\" shape=\\\"lock\\\" class=\\\"is-solid\\\"></clr-icon>\\n      </a>\\n      </clr-dg-cell>\\n    </clr-dg-row>\\n    <clr-dg-footer>\\n      <clr-dg-column-toggle>\\n        <clr-dg-column-toggle-title>Отобразить столбцы</clr-dg-column-toggle-title>\\n      </clr-dg-column-toggle>\\n    </clr-dg-footer>\\n  </clr-datagrid>\\n</div>\\n  <!-- ТАБЛА ДЛЯ МОБИЛЫ -->\\n  <div class=\\\"ar-900-show\\\">\\n    <clr-datagrid>\\n      <clr-dg-action-bar>\\n        <div class=\\\"actions-container\\\">\\n          <div class=\\\"ar-900-show\\\">\\n            <div class=\\\"clr-row\\\" style=\\\"margin-left: 1%\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"getMainDataFromDb()\\\" aria-label=\\\"Обновить\\\">\\n                <clr-icon shape=\\\"refresh\\\"></clr-icon>\\n              </button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"addCreditModalShow()\\\" aria-label=\\\"Добавить кредит\\\">\\n                <clr-icon shape=\\\"bank\\\"></clr-icon>\\n              </button>\\n              <button type=\\\"button\\\" (click)=\\\"addIncomeModalShow()\\\" class=\\\"btn btn-icon\\\" aria-label=\\\"Задать доход\\\">\\n                <clr-icon shape=\\\"coin-bag\\\"></clr-icon>\\n              </button>\\n              <button type=\\\"button\\\" (click)=\\\"addGoalModalShow()\\\" class=\\\"btn btn-icon\\\" aria-label=\\\"Добавить цель\\\">\\n                <clr-icon shape=\\\"shopping-cart\\\"></clr-icon>\\n              </button>\\n              <button type=\\\"button\\\" (click)=\\\"salaryModalShow()\\\" class=\\\"btn btn-icon\\\" aria-label=\\\"Зарплаты\\\">\\n                <clr-icon shape=\\\"wallet\\\"></clr-icon>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </clr-dg-action-bar>\\n\\n      <clr-dg-column>Дата</clr-dg-column>\\n      <clr-dg-column>Кредиты</clr-dg-column>\\n      <clr-dg-column>Итого</clr-dg-column>\\n      <clr-dg-row [ngStyle]=\\\"{'background-color': item.color, 'color': item.fontColor, 'border-bottom': item.borderWidth}\\\"\\n                  *clrDgItems=\\\"let item of finPlansList\\\" [clrDgItem]=\\\"item\\\">\\n        <clr-dg-cell>{{item.monthNumber}} / {{item.year}}</clr-dg-cell>\\n        <clr-dg-cell style=\\\"text-align: center\\\">{{item.allCredits | number}}</clr-dg-cell>\\n        <clr-dg-cell *ngIf=\\\"item.purchasePlan.purchasePlan.length == 0\\\" style=\\\"text-align: center\\\">\\n          <clr-icon shape=\\\"minus\\\"></clr-icon>\\n        </clr-dg-cell>\\n        <clr-dg-cell style=\\\"text-align: center\\\"><a (click)=\\\"remainsModalShow(item)\\\">{{item.remains | number}}\\n          <clr-icon [ngStyle]=\\\"{'color': '#e00c0c'}\\\" *ngIf=\\\"item.freeze\\\" shape=\\\"lock\\\" class=\\\"is-solid\\\"></clr-icon>\\n        </a>\\n        </clr-dg-cell>\\n         <clr-dg-row-detail *clrIfExpanded>\\n           <table>\\n             <tr>\\n               <td>Кредит 1</td>\\n               <td> - </td>\\n               <td><a (click)=\\\"editCreditModalShow($event, item, 1)\\\">{{item.credit1 | number}}</a></td>\\n             </tr>\\n             <tr>\\n               <td>Кредит 2</td>\\n               <td> - </td>\\n               <td><a (click)=\\\"editCreditModalShow($event, item, 2)\\\">{{item.credit2 | number}}</a></td>\\n             </tr>\\n             <tr>\\n               <td>Кредит 3</td>\\n               <td> - </td>\\n               <td><a (click)=\\\"editCreditModalShow($event, item, 3)\\\">{{item.credit3 | number}}</a></td>\\n             </tr>\\n             <tr>\\n               <td>Кредит 4</td>\\n               <td> - </td>\\n               <td><a (click)=\\\"editCreditModalShow($event, item, 4)\\\">{{item.credit4 | number}}</a></td>\\n             </tr>\\n             <tr>\\n               <td>Кредит 5</td>\\n               <td> - </td>\\n               <td><a (click)=\\\"editCreditModalShow($event, item, 5)\\\">{{item.credit5 | number}}</a></td>\\n             </tr>\\n             <tr *ngIf=\\\"item.purchasePlan.purchasePlan.length > 0\\\">\\n               <td>Траты</td>\\n               <td> - </td>\\n               <td><a\\n                 (click)=\\\"showEditGoalsListModal($event, item)\\\">{{item.purchasePlan.price}}</a></td>\\n             </tr>\\n           </table>\\n         </clr-dg-row-detail>\\n      </clr-dg-row>\\n      <!--    </div>-->\\n      <clr-dg-footer>\\n        <clr-dg-column-toggle>\\n          <clr-dg-column-toggle-title>Отобразить столбцы</clr-dg-column-toggle-title>\\n        </clr-dg-column-toggle>\\n      </clr-dg-footer>\\n    </clr-datagrid>\\n  </div>\\n</div>\\n\\n<!-- ФОРМА ДОБАВЛЕНИЯ КРЕДИТА -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isLoanAdd\\\">\\n  <h3 class=\\\"modal-title\\\">Добавить новый кредит</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"addCreditForm\\\">\\n\\n      <!-- ПОЛЕ СТАРТОВАЯ СУММА -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"startAmount\\\" class=\\\"input-label clr-col-12\\\">Стартовая сумма кредита</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"startAmount\\\" id=\\\"startAmount\\\" name=\\\"startAmount\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- СКОЛЬКО ПЛАТИШЬ ПО КРЕДИТУ ВООБЩЕ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"fullPayPerMonth\\\" class=\\\"input-label clr-col-12\\\">Ежемесячный платеж (полный)</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"fullPayPerMonth\\\" id=\\\"fullPayPerMonth\\\" name=\\\"fullPayPerMonth\\\"\\n               autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- СКОЛЬКО ИЗ ЕЖЕМЕСЯЧНОГО ПЛАТЕЖА РЕАЛЬНО УХОДИТ В ТЕЛО КРЕДИТА -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"realPayPerMonth\\\" class=\\\"input-label clr-col-12\\\">Уходит в тело кредита</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"realPayPerMonth\\\" id=\\\"realPayPerMonth\\\" name=\\\"realPayPerMonth\\\"\\n               autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ДАТА ОФОРМЛЕНИЯ КРЕДИТА -->\\n\\n      <clr-date-container>\\n        <label>Дата покупки</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"startDate\\\"\\n               formControlName=\\\"startDate\\\"\\n               id=\\\"startDate\\\"\\n               min=\\\"2000-01-01\\\" (clrDateChange)=\\\"toggleDateForNewLoanNotNull($event)\\\"/>\\n      </clr-date-container>\\n\\n      <!-- ВЫБОР НОМЕРА КРЕДИТА -->\\n      <clr-alert *ngIf=\\\"!isFreeSlotsExists\\\" [clrAlertClosable]=false\\n                 clrAlertType=\\\"danger\\\">Нет свободных слотов!\\n      </clr-alert>\\n      <div *ngIf=\\\"isDateNotNullForAddNewLoanForm && isFreeSlotsExists\\\">\\n        <clr-datagrid [(clrDgSingleSelected)]=\\\"selectedLoanSlot\\\">\\n          <clr-dg-column>Номер кредита</clr-dg-column>\\n          <clr-dg-row *ngFor=\\\"let element of freeLoanSlots.openSlots\\\" [clrDgItem]=\\\"element\\\">\\n            <clr-dg-cell>{{element}}</clr-dg-cell>\\n          </clr-dg-row>\\n        </clr-datagrid>\\n      </div>\\n\\n\\n      <!-- ОПИСАНИЕ -->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"add_credit_desc\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"desc\\\" id=\\\"add_credit_desc\\\" name=\\\"add_credit_desc\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"addCreditForm.invalid || !selectedLoanSlot\\\" (click)=\\\"addLoan()\\\"\\n              class=\\\"btn btn-primary mt-1\\\">\\n        Создать\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА РЕДАКТИРОВАНИЯ КРЕДИТА -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isLoanEdit\\\">\\n  <h3 class=\\\"modal-title\\\">Редактировать кредит</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"editCreditForm\\\">\\n\\n      <!-- ПОЛЕ ID КРЕДИТА -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"id\\\" class=\\\"input-label clr-col-12\\\">ID</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"id\\\" id=\\\"id\\\" name=\\\"id\\\" autocomplete=\\\"off\\\"\\n               required readonly size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ НОМЕР КРЕДИТА -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"loanNumber\\\" class=\\\"input-label clr-col-12\\\">Номер кредита (всего 5)</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"loanNumber\\\" id=\\\"loanNumber\\\" name=\\\"loanNumber\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ СТАРТОВАЯ СУММА -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"startAmountForEditing\\\" class=\\\"input-label clr-col-12\\\">Стартовая сумма кредита</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"startAmount\\\" id=\\\"startAmountForEditing\\\" name=\\\"startAmount\\\"\\n               autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- СКОЛЬКО ПЛАТИШЬ ПО КРЕДИТУ ВООБЩЕ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"fullPayPerMonthForEditing\\\" class=\\\"input-label clr-col-12\\\">Ежемесячный платеж (полный)</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"fullPayPerMonth\\\" id=\\\"fullPayPerMonthForEditing\\\"\\n               name=\\\"fullPayPerMonth\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- СКОЛЬКО ИЗ ЕЖЕМЕСЯЧНОГО ПЛАТЕЖА РЕАЛЬНО УХОДИТ В ТЕЛО КРЕДИТА -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"realPayPerMonthForEditing\\\" class=\\\"input-label clr-col-12\\\">Уходит в тело кредита</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"realPayPerMonth\\\" id=\\\"realPayPerMonthForEditing\\\"\\n               name=\\\"realPayPerMonth\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ДАТА ОФОРМЛЕНИЯ КРЕДИТА -->\\n\\n      <clr-date-container>\\n        <label>Дата покупки</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"startDateForEditing\\\"\\n               formControlName=\\\"startDate\\\"\\n               id=\\\"startDateForEditing\\\"\\n               min=\\\"2000-01-01\\\"/>\\n      </clr-date-container>\\n\\n      <!-- ОПИСАНИЕ -->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"desc\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"desc\\\" id=\\\"desc\\\" name=\\\"desc\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"editLoan()\\\" class=\\\"btn btn-primary mt-1\\\">Изменить</button>\\n      <button type=\\\"button\\\" (click)=\\\"deleteLoan()\\\" class=\\\"btn btn-danger mt-1\\\">Удалить кредит</button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА ДОБАВЛЕНИЯ ДОХОДА -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isAddIncome\\\">\\n  <h3 class=\\\"modal-title\\\">Добавить доход</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"addIncomeForm\\\">\\n\\n      <!-- ЗНАЧЕНИЕ ДОХОДА  -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"income\\\" class=\\\"input-label clr-col-12\\\">Доход</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"income\\\" id=\\\"income\\\" name=\\\"income\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ЭТО БОНУС?  -->\\n\\n      <clr-toggle-container>\\n        <clr-toggle-wrapper>\\n          <input type=\\\"checkbox\\\" clrToggle formControlName=\\\"isBonus\\\"\\n                 id=\\\"isBonus\\\"\\n                 name=\\\"isBonus\\\"/>\\n          <label>Это годовой бонус?</label>\\n        </clr-toggle-wrapper>\\n      </clr-toggle-container>\\n\\n      <!-- ПОЯСНЕНИЯ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"income_desc\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"desc\\\" id=\\\"income_desc\\\" name=\\\"income_desc\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ДАТА -->\\n\\n      <clr-date-container>\\n        <label>Дата покупки</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"incomeDate\\\"\\n               formControlName=\\\"incomeDate\\\"\\n               id=\\\"incomeDate\\\"\\n               min=\\\"2000-01-01\\\"/>\\n      </clr-date-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"addIncomeForm.invalid\\\" (click)=\\\"addIncome()\\\" class=\\\"btn btn-primary mt-1\\\">\\n        Добавить\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА ДЕТАЛКИ ПО ОСТАТКАМ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isRemainsDetailInfoShown\\\">\\n  <h3 class=\\\"modal-title\\\">Детальная информация по остаткам</h3>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div>\\n      <table class=\\\"table table-noborder\\\">\\n        <thead>\\n        <tr>\\n          <th class=\\\"left\\\">\\n            <span class=\\\"badge badge-orange\\\">{{(detailedBalanceContainer | async)?.date}}</span>\\n          </th>\\n          <th></th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <clr-alert *ngIf=\\\"(detailedBalanceContainer | async)?.emptyCalculations\\\" [clrAlertClosable]=false\\n                   clrAlertType=\\\"danger\\\">У вас не заведено ни доходов, ни кредитов, ни целей. Деталка показана\\n          не будет!\\n        </clr-alert>\\n        <div *ngIf=\\\"!(detailedBalanceContainer | async)?.emptyCalculations\\\">\\n          <tr *ngIf=\\\"!(detailedBalanceContainer | async)?.freeze\\\">\\n            <td><span class=\\\"label label-info\\\" style=\\\"margin-left: 1%\\\">Предыдущий доход<span\\n              class=\\\"badge badge-orange\\\">{{(detailedBalanceContainer | async)?.previousIncome}}</span></span></td>\\n            <td><span class=\\\"label label-danger\\\">-</span></td>\\n          </tr>\\n          <tr *ngIf=\\\"!(detailedBalanceContainer | async)?.freeze\\\">\\n            <td><span class=\\\"label label-info\\\" style=\\\"margin-left: 1%\\\">Предыдущий расход<span\\n              class=\\\"badge badge-orange\\\">{{(detailedBalanceContainer | async)?.previousExpense}}</span></span></td>\\n            <td><span class=\\\"label label-danger\\\">-</span></td>\\n          </tr>\\n          <tr *ngIf=\\\"!(detailedBalanceContainer | async)?.freeze\\\">\\n            <td> <span class=\\\"label label-info\\\" style=\\\"margin-left: 1%\\\">Среднемесячный расход<span\\n              class=\\\"badge badge-orange\\\">{{(detailedBalanceContainer | async)?.monthlySpending}}</span></span></td>\\n            <td><span class=\\\"label label-danger\\\">-</span></td>\\n          </tr>\\n          <tr *ngIf=\\\"!(detailedBalanceContainer | async)?.freeze\\\">\\n            <td><span class=\\\"label label-info\\\" style=\\\"margin-left: 1%\\\">Покрытие кредитов<span\\n              class=\\\"badge badge-orange\\\">{{(detailedBalanceContainer | async)?.loanPayments}}</span></span></td>\\n            <td><span class=\\\"label label-success\\\">+</span></td>\\n          </tr>\\n          <tr *ngIf=\\\"!(detailedBalanceContainer | async)?.freeze\\\">\\n            <td> <span (click)=\\\"detailedIncomesFormShow()\\\" class=\\\"label label-info\\\" style=\\\"margin-left: 1%\\\">Зарплата + Доход<span\\n              class=\\\"badge badge-orange\\\">{{(detailedBalanceContainer | async)?.currentIncome}}</span></span></td>\\n            <td></td>\\n          </tr>\\n          <tr>\\n            <td> <span class=\\\"label label-danger\\\" style=\\\"margin-left: 1%\\\">ИТОГО<span\\n              class=\\\"badge badge-success\\\">{{(detailedBalanceContainer | async)?.balance}}</span></span></td>\\n            <td></td>\\n          </tr>\\n        </div>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button *ngIf=\\\"!(detailedBalanceContainer | async)?.freeze\\\"\\n              [disabled]=\\\"(detailedBalanceContainer | async)?.emptyCalculations\\\"\\n              type=\\\"button\\\" (click)=\\\"detailedIncomesFormShow()\\\" class=\\\"btn btn-primary mt-1\\\">Детализация доходов\\n      </button>\\n      <button *ngIf=\\\"!(detailedBalanceContainer | async)?.freeze\\\" type=\\\"button\\\" (click)=\\\"addFreezeModalShow()\\\"\\n              class=\\\"btn btn-secondary mt-1\\\">Фриз\\n      </button>\\n      <button *ngIf=\\\"(detailedBalanceContainer | async)?.freeze\\\" type=\\\"button\\\" (click)=\\\"deleteFreeze()\\\"\\n              class=\\\"btn btn-danger mt-1\\\">Удалить фриз\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА ДЕТАЛКИ ПО ДОХОДАМ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isIncomeDetailForm\\\">\\n  <h3 class=\\\"modal-title\\\">Детальная информация по доходам</h3>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div>\\n      <span class=\\\"badge badge-orange\\\">{{(detailedBalanceContainer | async)?.date}} </span>\\n      <clr-datagrid [(clrDgSelected)]=\\\"selectedIncomes\\\">\\n        <clr-dg-column>ID</clr-dg-column>\\n        <clr-dg-column>Дата</clr-dg-column>\\n        <clr-dg-column>Описание</clr-dg-column>\\n        <clr-dg-column>Доход</clr-dg-column>\\n\\n        <clr-dg-row *ngFor=\\\"let element of (detailedBalanceContainer | async)?.currentIncomeDetail.incomeList\\\"\\n                    [clrDgItem]=\\\"element\\\">\\n          <clr-dg-cell [ngStyle]=\\\"{'color': element.isBonus ? '#eaba09' :  '#f1f5f6'}\\\">\\n            <clr-icon *ngIf=\\\"element.isBonus\\\" shape=\\\"coin-bag\\\" class=\\\"is-solid\\\"></clr-icon>\\n            {{element.id}}</clr-dg-cell>\\n          <clr-dg-cell\\n            [ngStyle]=\\\"{'color': element.isBonus ? '#eaba09' :  '#f1f5f6'}\\\">{{element.incomeDate}}</clr-dg-cell>\\n          <clr-dg-cell\\n            [ngStyle]=\\\"{'color': element.isBonus ? '#eaba09' :  '#f1f5f6'}\\\">{{element.incomeDescription}}</clr-dg-cell>\\n          <clr-dg-cell [ngStyle]=\\\"{'color': element.isBonus ? '#eaba09' :  '#f1f5f6'}\\\">{{element.amount}}</clr-dg-cell>\\n        </clr-dg-row>\\n      </clr-datagrid>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"selectedIncomes.length != 1\\\" (click)=\\\"showEditIncomeForm()\\\"\\n              class=\\\"btn btn-success\\\">Редактирование\\n      </button>\\n      <button type=\\\"button\\\" [disabled]=\\\"selectedIncomes.length < 1\\\" (click)=\\\"deleteIncomes()\\\" class=\\\"btn btn-danger\\\">\\n        Удаление\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА РЕДАКТИРОВАНИЯ ДОХОДА -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isIncomeEditForm\\\">\\n  <h3 class=\\\"modal-title\\\">Редактировать доход</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"editIncomeForm\\\">\\n\\n      <!-- ЗНАЧЕНИЕ ДОХОДА  -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"edit_income_id\\\" class=\\\"input-label clr-col-12\\\">ID</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"id\\\" id=\\\"edit_income_id\\\" name=\\\"edit_income_id\\\" autocomplete=\\\"off\\\"\\n               required readonly size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"edit_income_amount\\\" class=\\\"input-label clr-col-12\\\">Доход</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"income\\\" id=\\\"edit_income_amount\\\" name=\\\"edit_income_amount\\\"\\n               autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ЭТО БОНУС?  -->\\n\\n      <clr-toggle-container>\\n        <clr-toggle-wrapper>\\n          <input type=\\\"checkbox\\\" clrToggle formControlName=\\\"isBonus\\\"\\n                 id=\\\"edit_income_is_bonus\\\"\\n                 name=\\\"edit_income_is_bonus\\\"/>\\n          <label>Это годовой бонус?</label>\\n        </clr-toggle-wrapper>\\n      </clr-toggle-container>\\n\\n      <!-- ПОЯСНЕНИЯ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"edit_income_desc\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"desc\\\" id=\\\"edit_income_desc\\\" name=\\\"edit_income_desc\\\"\\n               autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ДАТА -->\\n\\n      <clr-date-container>\\n        <label>Дата покупки</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"edit_income_income_date\\\"\\n               formControlName=\\\"incomeDate\\\"\\n               id=\\\"edit_income_income_date\\\"\\n               min=\\\"2000-01-01\\\"/>\\n      </clr-date-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"editIncomeForm.invalid\\\" (click)=\\\"editIncome()\\\" class=\\\"btn btn-primary mt-1\\\">\\n        Редактировать\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА ДОБАВЛЕНИЯ ТРАТЫ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isGoalAddForm\\\">\\n  <h3 class=\\\"modal-title\\\">Добавить цель / трату</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"addGoalForm\\\">\\n\\n      <!-- ОПИСАНИЕ  -->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"add_goal_description\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"description\\\" id=\\\"add_goal_description\\\" name=\\\"add_goal_description\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ЗНАЧЕНИЕ РАСХОДА  -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"add_goal_price\\\" class=\\\"input-label clr-col-12\\\">Цена</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"price\\\" id=\\\"add_goal_price\\\" name=\\\"add_goal_price\\\" autocomplete=\\\"off\\\"\\n               required size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n\\n      <!-- ДАТА -->\\n\\n      <clr-date-container>\\n        <label>Дата покупки</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"add_goal_start_date\\\"\\n               formControlName=\\\"startDate\\\"\\n               id=\\\"add_goal_start_date\\\"\\n               min=\\\"2000-01-01\\\" (clrDateChange)=\\\"toggleDateNotNull($event)\\\"/>\\n      </clr-date-container>\\n\\n      <!-- ЭТО ПОГАШЕНИЕ КРЕДИТА?  -->\\n\\n      <clr-toggle-container *ngIf=\\\"isDateNotNullForAddNewGoalForm\\\">\\n        <clr-toggle-wrapper>\\n          <input type=\\\"checkbox\\\" clrToggle formControlName=\\\"isRepayment\\\"\\n                 id=\\\"add_goal_is_repayment\\\"\\n                 name=\\\"add_goal_is_repayment\\\" (change)=\\\"repaymentToggle(null)\\\"/>\\n          <label>Это досрочное погашение кредита?</label>\\n        </clr-toggle-wrapper>\\n      </clr-toggle-container>\\n\\n      <div *ngIf=\\\"addGoalForm.value.isRepayment\\\">\\n        <clr-datagrid [(clrDgSingleSelected)]=\\\"selectedLoan\\\">\\n          <clr-dg-column>Номер</clr-dg-column>\\n          <clr-dg-column>Описание</clr-dg-column>\\n          <clr-dg-column>Сумма</clr-dg-column>\\n          <clr-dg-column>Дата взятия</clr-dg-column>\\n          <clr-dg-placeholder>Нет кредитов на эту дату!</clr-dg-placeholder>\\n          <clr-dg-row *ngFor=\\\"let element of loansList\\\" [clrDgItem]=\\\"element\\\">\\n            <clr-dg-cell>{{element.number}}</clr-dg-cell>\\n            <clr-dg-cell>{{element.description}}</clr-dg-cell>\\n            <clr-dg-cell>{{element.startAmount}}</clr-dg-cell>\\n            <clr-dg-cell>{{element.startDate}}</clr-dg-cell>\\n          </clr-dg-row>\\n        </clr-datagrid>\\n      </div>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"addGoalForm.invalid\\\" (click)=\\\"addGoal()\\\" class=\\\"btn btn-primary mt-1\\\">Добавить\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА РЕДАКТИРОВАНИЯ ТРАТЫ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isGoalEditForm\\\">\\n  <h3 class=\\\"modal-title\\\">Редактировать цели / траты</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"addGoalForm\\\">\\n      <span class=\\\"badge badge-orange\\\">{{goalsForEditDate}}</span>\\n\\n      <!-- ТАБЛИЦА С РАНЕЕ ДОБАВЛЕННЫМИ ЦЕЛЯМИ  -->\\n\\n      <clr-datagrid [(clrDgSingleSelected)]=\\\"selectedGoal\\\">\\n        <clr-dg-column>Описание</clr-dg-column>\\n        <clr-dg-column>Сумма</clr-dg-column>\\n        <clr-dg-row *ngFor=\\\"let element of goalsListForEdit\\\" [clrDgItem]=\\\"element\\\">\\n          <clr-dg-cell>{{element.description}}</clr-dg-cell>\\n          <clr-dg-cell>{{element.price}}\\n            <clr-icon [ngStyle]=\\\"{'color': '#e00c0c'}\\\" *ngIf=\\\"element.loanId\\\" shape=\\\"bank\\\"\\n                      class=\\\"is-solid\\\"></clr-icon>\\n          </clr-dg-cell>\\n        </clr-dg-row>\\n      </clr-datagrid>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"!selectedGoal\\\" (click)=\\\"showEditSelectedIncomeForm()\\\"\\n              class=\\\"btn btn-success\\\">Редактирование\\n      </button>\\n      <button type=\\\"button\\\" [disabled]=\\\"!selectedGoal\\\" (click)=\\\"deleteSelectedGoal()\\\"\\n              class=\\\"btn btn-danger\\\">Удалить\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА РЕДАКТИРОВАНИЯ КОНКРЕТНОЙ ВЫБРАННОЙ ТРАТЫ / ЦЕЛИ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isSelectedGoalEditForm\\\">\\n  <h3 class=\\\"modal-title\\\">Редактировать цель</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"editGoalForm\\\">\\n\\n      <!-- ТАБЛИЦА С РАНЕЕ ДОБАВЛЕННЫМИ ЦЕЛЯМИ  -->\\n      <clr-input-container>\\n        <label #label for=\\\"edit_goal_id\\\" class=\\\"input-label clr-col-12\\\">ID</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"id\\\" id=\\\"edit_goal_id\\\" name=\\\"edit_goal_id\\\"\\n               readonly autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ЦЕННИК  -->\\n      <clr-input-container>\\n        <label #label for=\\\"edit_goal_price\\\" class=\\\"input-label clr-col-12\\\">Стоимость</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"price\\\" id=\\\"edit_goal_price\\\" name=\\\"edit_goal_price\\\"\\n               required=\\\"\\\" autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ОПИСАНИЕ  -->\\n      <clr-input-container>\\n        <label #label for=\\\"edit_goal_desc\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"description\\\" id=\\\"edit_goal_desc\\\" name=\\\"edit_goal_desc\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- Дата  -->\\n      <clr-date-container>\\n        <label>Дата покупки</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"edit_goal_date\\\"\\n               formControlName=\\\"startDate\\\"\\n               id=\\\"edit_goal_date\\\"\\n               min=\\\"2000-01-01\\\"/>\\n      </clr-date-container>\\n\\n      <!-- Погашение кредита  -->\\n      <clr-input-container *ngIf=\\\"isGoalForLoan\\\">\\n        <label #label for=\\\"edit_goal_repayment\\\" class=\\\"input-label clr-col-12\\\">ID кредита при досрочном\\n          погашении</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"repaymentId\\\" id=\\\"edit_goal_repayment\\\" name=\\\"edit_goal_repayment\\\"\\n               readonly autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"editGoalForm.invalid\\\" (click)=\\\"editGoal()\\\" class=\\\"btn btn-success\\\">\\n        Редактировать\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА РАБОТЫ С ЗАРПЛАТАМИ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isSalaryShow\\\">\\n  <h3 class=\\\"modal-title\\\">Зарплаты</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"editGoalForm\\\">\\n\\n      <!-- ТАБЛИЦА С ЗАРПЛАТАМИ -->\\n\\n      <clr-datagrid [(clrDgSingleSelected)]=\\\"selectedSalary\\\">\\n        <clr-dg-column>Дата</clr-dg-column>\\n        <clr-dg-column>Полная зарплата</clr-dg-column>\\n        <clr-dg-column>Месячные траты</clr-dg-column>\\n        <clr-dg-row *ngFor=\\\"let element of salaryList\\\" [clrDgItem]=\\\"element\\\">\\n          <clr-dg-cell>{{element.salaryDate}}</clr-dg-cell>\\n          <clr-dg-cell>{{element.fullSalary}}</clr-dg-cell>\\n          <clr-dg-cell>{{element.livingExpenses}}</clr-dg-cell>\\n        </clr-dg-row>\\n      </clr-datagrid>\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"!selectedSalary\\\" (click)=\\\"showEditSalaryModal()\\\" class=\\\"btn btn-success\\\">\\n        Редактировать\\n      </button>\\n      <button type=\\\"button\\\" [disabled]=\\\"!selectedSalary\\\" (click)=\\\"deleteSelectedSalary()\\\" class=\\\"btn btn-danger\\\">\\n        Удалить\\n      </button>\\n      <button type=\\\"button\\\" (click)=\\\"showAddSalaryModal()\\\" class=\\\"btn btn-primary\\\">Добавить</button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА РЕДАКТИРОВАНИЯ ЗП -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isEditSalaryShow\\\">\\n  <h3 class=\\\"modal-title\\\">Редактирование зарплаты</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"editSalaryForm\\\">\\n\\n      <!-- ID  -->\\n      <clr-input-container>\\n        <label #label for=\\\"edit_salary_id\\\" class=\\\"input-label clr-col-12\\\">ID</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"id\\\" id=\\\"edit_salary_id\\\" name=\\\"edit_salary_id\\\"\\n               readonly autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ПОЛНАЯ ЗП  -->\\n      <clr-input-container>\\n        <label #label for=\\\"edit_salary_full_salary\\\" class=\\\"input-label clr-col-12\\\">Полная ЗП</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"fullSalary\\\" id=\\\"edit_salary_full_salary\\\"\\n               name=\\\"edit_salary_full_salary\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ОСТАТОЧНАЯ ЗП  -->\\n      <clr-input-container>\\n        <label #label for=\\\"edit_salary_residual_salary\\\" class=\\\"input-label clr-col-12\\\">Остаточная ЗП</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"residualSalary\\\" id=\\\"edit_salary_residual_salary\\\"\\n               name=\\\"edit_salary_residual_salary\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n\\n      <!-- МЕСЯЧНЫЕ ТРАТЫ  -->\\n      <clr-input-container>\\n        <label #label for=\\\"edit_salary_livingExpenses\\\" class=\\\"input-label clr-col-12\\\">Месячные траты</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"livingExpenses\\\" id=\\\"edit_salary_livingExpenses\\\"\\n               name=\\\"edit_salary_livingExpenses\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- Дата  -->\\n      <clr-date-container>\\n        <label>Дата</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"edit_salary_salary_date\\\"\\n               formControlName=\\\"salaryDate\\\"\\n               id=\\\"edit_salary_salary_date\\\"\\n               min=\\\"2000-01-01\\\"/>\\n      </clr-date-container>\\n\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"editSalaryForm.invalid\\\" (click)=\\\"editSalary()\\\" class=\\\"btn btn-success\\\">\\n        Редактировать\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА ДОБАВЛЕНИЯ НОВОЙ ЗП -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isAddNewSalaryShow\\\">\\n  <h3 class=\\\"modal-title\\\">Добавление новой зарплаты</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"addNewSalaryForm\\\">\\n\\n      <!-- ПОЛНАЯ ЗП  -->\\n      <clr-input-container>\\n        <label #label for=\\\"add_salary_full_salary\\\" class=\\\"input-label clr-col-12\\\">Полная ЗП</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"fullSalary\\\" id=\\\"add_salary_full_salary\\\"\\n               name=\\\"add_salary_full_salary\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- ОСТАТОЧНАЯ ЗП  -->\\n      <clr-input-container>\\n        <label #label for=\\\"add_salary_residual_salary\\\" class=\\\"input-label clr-col-12\\\">Остаточная ЗП</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"residualSalary\\\" id=\\\"add_salary_residual_salary\\\"\\n               name=\\\"add_salary_residual_salary\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n\\n      <!-- МЕСЯЧНЫЕ ТРАТЫ  -->\\n      <clr-input-container>\\n        <label #label for=\\\"add_salary_livingExpenses\\\" class=\\\"input-label clr-col-12\\\">Месячные траты</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"livingExpenses\\\" id=\\\"add_salary_livingExpenses\\\"\\n               name=\\\"add_salary_livingExpenses\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <!-- Дата  -->\\n      <clr-date-container>\\n        <label>Дата</label>\\n        <input type=\\\"date\\\" clrDate name=\\\"add_salary_salary_date\\\"\\n               formControlName=\\\"salaryDate\\\"\\n               id=\\\"add_salary_salary_date\\\"\\n               min=\\\"2000-01-01\\\"/>\\n      </clr-date-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"addNewSalaryForm.invalid\\\" (click)=\\\"addSalary()\\\" class=\\\"btn btn-success\\\">\\n        Добавить\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!-- ФОРМА ДОБАВЛЕНИЯ ФРИЗА -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isAddNewFreezeFormShow\\\">\\n  <h3 class=\\\"modal-title\\\">Добавление фриза</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"addNewFreezeForm\\\">\\n\\n      <div>\\n        <span class=\\\"badge badge-orange\\\"\\n              *ngIf=\\\"selectedFinPlan\\\">{{selectedFinPlan.month}} {{selectedFinPlan.year}}</span>\\n      </div>\\n      <!-- Значение  -->\\n      <clr-input-container>\\n        <label #label for=\\\"add_new_freeze_amount\\\" class=\\\"input-label clr-col-12\\\">Значение</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"amount\\\" id=\\\"add_new_freeze_amount\\\" name=\\\"add_new_freeze_amount\\\"\\n               autocomplete=\\\"off\\\" size=\\\"100%\\\">\\n      </clr-input-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" [disabled]=\\\"addNewFreezeForm.invalid\\\" (click)=\\\"addFreeze()\\\" class=\\\"btn btn-success\\\">\\n        Добавить\\n      </button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../../service/http.service';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {Subject, throwError, timer} from 'rxjs';\nimport {Subscription} from 'rxjs/Subscription';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {environment} from '../../../../environments/environment';\nimport {DatePipe} from '@angular/common';\nimport {catchError} from 'rxjs/operators';\nimport {FinPlan} from '../../../dto/finplan';\nimport {Moment} from 'moment';\nimport * as moment from 'moment';\nimport {NewLoanRq} from '../../../dto/NewLoanRq';\nimport {Credit} from '../../../dto/Credit';\nimport {EditLoanRq} from '../../../dto/EditLoanRq';\nimport {NewIncomeRq} from '../../../dto/NewIncomeRq';\nimport {GetDetailedBalanceRq} from '../../../dto/GetDetailedBalanceRq';\nimport {BalanceDetailsRs} from '../../../dto/BalanceDetailsRs';\nimport {IncomeRs} from '../../../dto/IncomeRs';\nimport {GetLoansByDateRq} from '../../../dto/GetLoansByDateRq';\nimport {FullLoanRs} from '../../../dto/FullLoanRs';\nimport {NewGoalRq} from '../../../dto/NewGoalRq';\nimport {DeleteIncomesRq} from '../../../dto/DeleteIncomesRq';\nimport {Goal} from '../../../dto/Goal';\nimport {SalaryRs} from '../../../dto/SalaryRs';\nimport {SalaryRq} from '../../../dto/SalaryRq';\nimport { NewFreezeRq } from 'src/app/dto/NewFreezeRq';\nimport {FreeLoanSlotsRs} from '../../../dto/FreeLoanSlotsRs';\n\n@Component({\n  selector: 'app-fin-planning',\n  templateUrl: 'finplanning.component.html',\n  providers: [HttpService, DatePipe],\n  styleUrls: ['./finplanning.component.css']\n})\nexport class FinPlanningComponent implements OnInit {\n\n  // --------------------------------- URL'ы -------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  apiUri = this.SERVER_URL + '/finplanning';\n  consolidatedListFromCacheUri = this.apiUri + '/consolidated'; // полная консолидированная таблица\n  consolidatedListFromDbUri = this.apiUri + '/consolidated/db'; // полная консолидированная таблица\n  getLoanByIdUrl = this.apiUri + '/loan'; // получить кредит по id\n  loanUri = this.apiUri + '/loan'; // работа с кредитами\n  incomeUri = this.apiUri + '/income'; // работа с доходами\n  deleteIncomesUri = this.apiUri + '/income/delete'; // удаление доходов\n  goalsUri = this.apiUri + '/goal'; // работа с целями\n  balanceDetailUri = this.apiUri + '/remains'; // деталка по балансу\n  loansByDate = this.apiUri + '/loan/bydate'; // кредиты по дате\n  freeSlotsByDate = this.apiUri + '/loan/slots'; // свободные слоты по дате\n  salaryUri = this.apiUri + '/salary';\n  freezeUri = this.apiUri + '/freeze';\n\n  // --------------------------------- ПЕРЕМЕННЫЕ -------------------------------------\n\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n  isSalaryExists = false;\n  isGoalForLoan = false; // цель для досрочки\n  lastSalary = 0;\n  curDateFormated = '';\n  /**\n   * При добавлении нового расхода данное поле управляет отображением всего блока кредитов и отправки запроса к бэку на список кредитов.\n   */\n  isDateNotNullForAddNewGoalForm = false;\n  isDateNotNullForAddNewLoanForm = false;\n  isFreeSlotsExists = true;\n  isLoanListByDateEmpty = true; // запросили список кредитов по дате - а он пустой (\n\n// --------------------------------- ВКЛЮЧЕНИЕ МОДАЛОВ -------------------------------------\n\n  isLoanEdit: boolean; // режим редактирования кредита\n  isLoanAdd: boolean; // режим добавления кредита\n  isAddIncome = false; // редактировать или добавить доход (отображение модала)\n  isRemainsDetailInfoShown = false; // отображение деталки по остаткам.\n  isIncomeDetailForm = false; // отображение деталки по доходам.\n  isIncomeEditForm = false; // форма редактирования дохода.\n  isGoalAddForm = false; // форма добавления цели,  расхода,  покупки\n  isGoalEditForm = false; // форма редактирования целей\n  isSelectedGoalEditForm = false; // форма редактирования выбранной цели\n  isSalaryShow = false; // модал работы с зарплатами.\n  isEditSalaryShow = false; // модал редактирования зарплаты\n  isAddNewSalaryShow = false; // модал добавления расширенной ЗП\n  isAddNewFreezeFormShow = false; // модал добавления фриза.\n  // --------------------------------- ХРАНИЛИЩА -------------------------------------\n\n  asyncList: Subject<FinPlan[]> = new Subject(); // асинхронный контейнер желаний\n  finPlansList: FinPlan[] = []; // контейнер фин-планов\n  goalsListForEdit: Goal[] = []; // для последующего редактирования целей\n  goalsForEditDate: string; // дата для редактирования кредитов\n  selectedIncomes: IncomeRs[] = []; // массив выделенных доходов для их правки\n  selectedLoan: FullLoanRs; // выбранный кредит\n  selectedGoal: Goal; // выбранный доход\n  detailedBalanceContainer: Subject<BalanceDetailsRs> = new Subject<BalanceDetailsRs>(); // асинхронный контейнер деталки\n  loansList: FullLoanRs[] = []; // асинхронный лист кредитов для подшивки досрочного погашения.\n  salaryList: SalaryRs[] = [];\n  freeLoanSlots: FreeLoanSlotsRs; // свободные слоты кредитов для получения номеров (нужно при выборе номера при добавлении)\n  selectedSalary: SalaryRs;\n  selectedLoanSlot: number;\n  selectedFinPlan: FinPlan;\n\n\n  // --------------------------------- ТЕКУЩИЙ ПОЛЬЗОВАТЕЛЬ И ЕГО ДАННЫЕ -------------------------------------\n\n  userRole: string;\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  // --------------------------------- ФОРМЫ -------------------------------------\n  addCreditForm = this.fb.group({ // форма добавления кредита\n    startAmount: ['', [\n      Validators.required\n    ]],\n    fullPayPerMonth: ['', [\n      Validators.required\n    ]],\n    realPayPerMonth: ['', [\n      Validators.required\n    ]],\n    startDate: ['', [\n      Validators.required\n    ]],\n    desc: ['', []]\n  });\n\n  editCreditForm = this.fb.group({ // форма редактирования кредита\n    startAmount: ['', [\n      Validators.required\n    ]],\n    id: ['', [\n      Validators.required\n    ]],\n    fullPayPerMonth: ['', [\n      Validators.required\n    ]],\n    realPayPerMonth: ['', [\n      Validators.required\n    ]],\n    loanNumber: ['', [\n      Validators.required\n    ]],\n    startDate: ['', [\n      Validators.required\n    ]],\n    desc: ['', []]\n  });\n\n  addIncomeForm = this.fb.group({ // форма добавления дохода\n    income: ['', [\n      Validators.required\n    ]],\n    isBonus: ['', []],\n    incomeDate: ['', [\n      Validators.required\n    ]],\n    desc: ['', []]\n  });\n\n  editIncomeForm = this.fb.group({ // форма редактирования дохода\n    income: ['', [\n      Validators.required\n    ]],\n    isBonus: ['', [\n      Validators.required\n    ]],\n    incomeDate: ['', [\n      Validators.required\n    ]],\n    id: ['', [\n      Validators.required\n    ]],\n    desc: ['', []]\n  });\n\n  addGoalForm = this.fb.group({ // форма добавления цели\n    price: ['', [\n      Validators.required\n    ]],\n    description: ['', []],\n    startDate: ['', [\n      Validators.required\n    ]],\n    isRepayment: ['', [\n      Validators.required\n    ]]\n  });\n\n  editGoalForm = this.fb.group({ // форма редактирования цели\n    price: ['', [\n      Validators.required\n    ]],\n    id: ['', [\n      Validators.required\n    ]],\n    description: ['', []],\n    startDate: ['', [\n      Validators.required\n    ]],\n    repaymentId: ['', []]\n  });\n\n  editSalaryForm = this.fb.group({ // форма редактирования ЗП\n    fullSalary: ['', [\n      Validators.required\n    ]],\n    id: ['', []],\n    residualSalary: ['', [\n      Validators.required\n    ]],\n    salaryDate: ['', [\n      Validators.required\n    ]],\n    livingExpenses: ['', [\n      Validators.required\n    ]]\n  });\n\n  addNewSalaryForm = this.fb.group({ // форма добавления новой ЗП\n    fullSalary: ['', [\n      Validators.required\n    ]],\n    id: ['', []],\n    residualSalary: ['', [\n      Validators.required\n    ]],\n    salaryDate: ['', [\n      Validators.required\n    ]],\n    livingExpenses: ['', [\n      Validators.required\n    ]]\n  });\n\n  addNewFreezeForm = this.fb.group({ // форма добавления нового фриза\n    amount: ['', [\n      Validators.required\n    ]]\n  });\n\n  constructor(private commonService: CommonService, private httpService: HttpService, private fb: FormBuilder,\n              private datePipe: DatePipe) {\n    this.curDateFormated = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n  }\n\n  ngOnInit() {\n    this.getMainDataFromCache();\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n      } else {\n        this.globalError = error;\n        this.isLoanEdit = false;\n\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n        } else if (this.globalError.messageType === this.globalError.USER_DATA_CHANGE_OK) {\n          this.isLoanEdit = false;\n          this.result = this.globalError.USER_DATA_CHANGE_OK;\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n        } else {\n          this.error = error.messageType;\n          timer(4000).subscribe(() => {\n            this.error = null;\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   *  Получить полную консолидированную таблицу из кэша.\n   *\n   */\n  getMainDataFromCache() {\n    this.httpService.getData(this.consolidatedListFromCacheUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить данные!');\n      })\n    ).subscribe(data => {\n      this.finPlansList = data.finPlans;\n    });\n  }\n\n  /**\n   *  Получить полную консолидированную таблицу из кэша.\n   *\n   */\n  getMainDataFromDb() {\n\n    this.isLoanEdit = false; // todo: это надо вынести в отдельный метод по очистке, который будем вызывать. И формы не забывать почистить.\n    this.isLoanAdd = false;\n    this.isAddIncome = false;\n    this.isRemainsDetailInfoShown = false;\n    this.isIncomeDetailForm = false;\n    this.isIncomeEditForm = false;\n    this.isDateNotNullForAddNewGoalForm = false;\n    this.isDateNotNullForAddNewLoanForm = false;\n    this.loansList.length = 0;\n    this.isLoanListByDateEmpty = true;\n    this.isGoalEditForm = false;\n    this.isGoalAddForm = false;\n    this.goalsListForEdit = null;\n    this.goalsForEditDate = null;\n    this.selectedGoal = null;\n    this.isGoalForLoan = false;\n    this.isSelectedGoalEditForm = false;\n    this.isSalaryShow = false;\n    this.isEditSalaryShow = false;\n    this.isAddNewSalaryShow = false;\n    this.isAddNewFreezeFormShow = false;\n    this.selectedFinPlan = null;\n    this.freeLoanSlots = null;\n    this.selectedLoanSlot = null;\n\n    this.httpService.getData(this.consolidatedListFromDbUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить данные!');\n      })\n    ).subscribe(data => {\n      this.finPlansList = data.finPlans;\n    });\n  }\n\n\n  getLoanById(id: number) {\n    this.httpService.getData(this.getLoanByIdUrl + '?id=' + id).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить данные!');\n      })\n    ).subscribe(data => {\n\n      let loan: Credit;\n      loan = data;\n      console.log('Получили = ', loan);\n      const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n      const formattedDate = (moment(loan.startDate)).format(DATE_TIME_FORMAT);\n      console.log('Date = ', formattedDate.toString());\n      this.isLoanEdit = true;\n      this.editCreditForm.patchValue({\n        startAmount: loan.amount,\n        id: loan.id,\n        loanNumber: loan.number,\n        startDate: (formattedDate.toString()),\n        fullPayPerMonth: loan.fullPayPerMonth,\n        realPayPerMonth: loan.realPayPerMonth,\n        desc: loan.description\n      });\n    });\n  }\n\n  /**\n   *  Отобразить окно \"Добавить кредит\".\n   *\n   */\n  addCreditModalShow() {\n    this.isLoanAdd = true;\n    this.addCreditForm.patchValue({\n      startAmount: '',\n      fullPayPerMonth: '',\n      realPayPerMonth: '',\n      startDate: ''\n    });\n  }\n\n  /**\n   *  Отобразить окно \"Добавить доход\".\n   *\n   */\n  addIncomeModalShow() {\n    this.isAddIncome = true;\n    this.addCreditForm.patchValue({\n      startAmount: '',\n      fullPayPerMonth: '',\n      realPayPerMonth: '',\n      startDate: ''\n    });\n  }\n\n  /**\n   *  Отобразить окно \"Редактировать или удалить кредит\".\n   *\n   */\n  editCreditModalShow(event: any, item: FinPlan, creditNumber: number) {\n    console.log('Вы выбрали item № = ', creditNumber);\n    let loan: Credit;\n    loan = item.credits.find(x => x.number === creditNumber);\n    console.log('Нашли кредит № = ', loan.id);\n    this.getLoanById(loan.id);\n  }\n\n  /**\n   *  Удалить кредит.\n   *\n   */\n  deleteLoan() {\n\n    this.httpService.deleteFinPlanningEntity(this.editCreditForm.value.id, this.loanUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить кредит!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Кредит успешно удален! Всего - ' + data.creditsCount);\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   *  Пульнуть запрос бэку на изменение кредита.\n   *\n   */\n  editLoan() {\n    let payload: EditLoanRq;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let currentDate: Moment;\n    if (!this.editCreditForm.value.startDate) {\n      currentDate = moment(new Date(), DATE_TIME_FORMAT);\n    } else {\n      currentDate = moment(this.editCreditForm.value.startDate, DATE_TIME_FORMAT);\n    }\n\n    payload = new EditLoanRq(this.editCreditForm.value.id,\n      this.editCreditForm.value.desc,\n      this.editCreditForm.value.startAmount,\n      this.editCreditForm.value.fullPayPerMonth,\n      this.editCreditForm.value.realPayPerMonth,\n      currentDate.format('YYYY-MM-DD'),\n      this.editCreditForm.value.loanNumber,\n      );\n\n    this.httpService.editLoan(payload, this.loanUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить кредит!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Кредит успешно изменен! Всего - ' + data.creditsCount);\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   *  Пульнуть запрос бэку на создание нового кредита.\n   *\n   */\n  addLoan() {\n    let payload: NewLoanRq;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let currentDate: Moment;\n    if (!this.addCreditForm.value.startDate) {\n      currentDate = moment(new Date(), DATE_TIME_FORMAT);\n    } else {\n      currentDate = moment(this.addCreditForm.value.startDate, DATE_TIME_FORMAT);\n    }\n\n    payload = new NewLoanRq(this.addCreditForm.value.startAmount,\n      this.addCreditForm.value.fullPayPerMonth,\n      this.addCreditForm.value.realPayPerMonth,\n      currentDate.format('YYYY-MM-DD'),\n      this.addCreditForm.value.desc, this.selectedLoanSlot);\n\n    this.httpService.addLoan(payload, this.loanUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить кредит!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Кредит успешно добавлен! Номер - ' + data.creditNumber + '. Всего - ' + data.creditsCount);\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n\n  /**\n   * Обработчик ошибок.\n   *\n   * err\n   * message\n   */\n  errorHandler(err, message: string) {\n    this.isLoanEdit = false;\n    this.isLoanAdd = false;\n    this.isAddIncome = false;\n    this.isRemainsDetailInfoShown = false;\n    this.isIncomeEditForm = false;\n    this.isIncomeDetailForm = false;\n    this.loansList.length = 0;\n    this.isLoanListByDateEmpty = true;\n    this.isGoalEditForm = false;\n    this.isGoalAddForm = false;\n    this.goalsListForEdit = null;\n    this.goalsForEditDate = null;\n    this.selectedGoal = null;\n    this.isGoalForLoan = false;\n    this.isSelectedGoalEditForm = false;\n    this.isSalaryShow = false;\n    this.isAddNewSalaryShow = false;\n    this.isEditSalaryShow = false;\n    this.isAddNewFreezeFormShow = false;\n    this.isDateNotNullForAddNewLoanForm = false;\n    this.selectedFinPlan = null;\n\n    console.log('error - ' + err.error);\n    if (err.error === 'ERR-01') {\n      this.error = 'У вас нет сохраненных зарплат! Невозможно посчитать сроки реализации! Добавьте хотя бы одну зарплату!';\n      this.isSalaryExists = false;\n      this.asyncList = null;\n    } else if (err.error === 'ERR-02') {\n      this.error = 'У вас нет сохраненных желаний! Добавьте хотя бы одно желание!';\n      this.isSalaryExists = false;\n    } else {\n      this.error = message;\n    }\n    console.log(err);\n    timer(4000).subscribe(() => {\n      this.error = null;\n    });\n    return throwError(err);\n  }\n\n  /**\n   * Временный метод проброса ошибки - потом разберемся, когда проведем единый рефакторинг ошибок для фронта и бека.\n   */\n  forcedErrorAlertWithoutError(text: string, code: string) {\n    this.isLoanAdd = false;\n    this.isLoanEdit = false;\n    this.isAddIncome = false;\n    this.isRemainsDetailInfoShown = false;\n    this.isIncomeDetailForm = false;\n    this.isIncomeEditForm = false;\n    this.isGoalEditForm = false;\n    this.isGoalAddForm = false;\n    this.error = '[' + code + '] ' + text;\n    this.goalsListForEdit = null;\n    this.goalsForEditDate = null;\n    this.selectedGoal = null;\n    this.isGoalForLoan = false;\n    this.isSelectedGoalEditForm = false;\n    this.isSalaryShow = false;\n    this.isEditSalaryShow = false;\n    this.isAddNewSalaryShow = false;\n    this.isAddNewFreezeFormShow = false;\n    this.selectedFinPlan = null;\n    timer(4000).subscribe(() => {\n      this.result = null;\n      this.error = null;\n    });\n  }\n\n  showAlert(text: string) {\n    this.isLoanEdit = false;\n    this.isLoanAdd = false;\n    this.isAddIncome = false;\n    this.result = text;\n    this.isRemainsDetailInfoShown = false;\n    this.isIncomeDetailForm = false;\n    this.isIncomeEditForm = false;\n    this.isDateNotNullForAddNewGoalForm = false;\n    this.isDateNotNullForAddNewLoanForm = false;\n    this.loansList.length = 0;\n    this.isLoanListByDateEmpty = true;\n    this.isGoalEditForm = false;\n    this.isGoalAddForm = false;\n    this.goalsListForEdit = null;\n    this.goalsForEditDate = null;\n    this.selectedGoal = null;\n    this.isGoalForLoan = false;\n    this.isSelectedGoalEditForm = false;\n    this.isSalaryShow = false;\n    this.isEditSalaryShow = false;\n    this.isAddNewSalaryShow = false;\n    this.isAddNewFreezeFormShow = false;\n    this.selectedFinPlan = null;\n    this.freeLoanSlots = null;\n    this.selectedLoanSlot = null;\n\n    timer(4000).subscribe(() => {\n      this.result = null;\n    });\n  }\n\n  /**\n   * Добавить доход.\n   */\n  addIncome() {\n    let payload: NewIncomeRq;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let selectedDate: Moment;\n    if (!this.addIncomeForm.value.incomeDate) {\n      selectedDate = moment(new Date(), DATE_TIME_FORMAT);\n    } else {\n      selectedDate = moment(this.addIncomeForm.value.incomeDate, DATE_TIME_FORMAT);\n    }\n\n    payload = new NewIncomeRq();\n    payload.income = this.addIncomeForm.value.income;\n    payload.isBonus = this.addIncomeForm.value.isBonus === '' ? false : this.addIncomeForm.value.isBonus;\n    payload.desc = this.addIncomeForm.value.desc;\n    payload.incomeDate = selectedDate.format('YYYY-MM-DD');\n\n    this.httpService.addIncome(payload, this.incomeUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить доход!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Доход успешно добавлен! ID дохода - ' + data.id);\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Отображение модала деталки по остаткам.\n   *\n   *  $event\n   *  item\n   */\n  remainsModalShow(item: FinPlan) {\n    this.getDetailedBalance(item);\n  }\n\n  /**\n   * Отображение модала деталки по доходам.\n   *\n   *  $event\n   *  item\n   */\n  detailedIncomesFormShow() {\n    this.isIncomeDetailForm = true;\n    this.isRemainsDetailInfoShown = false;\n  }\n\n\n  /**\n   * Запросить с бэка детализованый баланс.\n   *\n   * item\n   */\n  private getDetailedBalance(item: FinPlan) {\n    let request: GetDetailedBalanceRq;\n    request = new GetDetailedBalanceRq(item.monthNumber, item.year);\n    this.selectedFinPlan = item;\n    this.httpService.getDetailedBalance(request, this.balanceDetailUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно  получить детализированные данные по балансу!');\n      })\n    ).subscribe(data => {\n      this.detailedBalanceContainer.next(data);\n      this.isRemainsDetailInfoShown = true;\n    });\n  }\n\n  /**\n   * Редактирование дохода.\n   */\n  showEditIncomeForm() {\n    this.isIncomeEditForm = true;\n    this.isIncomeDetailForm = false;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    const formattedDate = (moment(this.selectedIncomes[0].incomeDate)).format(DATE_TIME_FORMAT);\n    console.log('Date formatted = ', formattedDate.toString());\n    this.editIncomeForm.patchValue({\n      income: this.selectedIncomes[0].amount,\n      isBonus: this.selectedIncomes[0].isBonus,\n      incomeDate: formattedDate.toString(),\n      desc: this.selectedIncomes[0].incomeDescription,\n      id: this.selectedIncomes[0].id\n    });\n  }\n\n  /**\n   * Редактировать доход.\n   */\n  editIncome() {\n    let payload: NewIncomeRq;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let currentDate: Moment;\n    if (!this.editIncomeForm.value.incomeDate) {\n      currentDate = moment(new Date(), DATE_TIME_FORMAT);\n    } else {\n      currentDate = moment(this.editIncomeForm.value.incomeDate, DATE_TIME_FORMAT);\n    }\n\n    payload = new NewIncomeRq();\n    payload.income = this.editIncomeForm.value.income;\n    payload.isBonus = this.editIncomeForm.value.isBonus === '' ? false : this.editIncomeForm.value.isBonus;\n    payload.desc = this.editIncomeForm.value.desc;\n    payload.incomeDate = currentDate.format('YYYY-MM-DD');\n    payload.id = this.editIncomeForm.value.id;\n    this.isIncomeEditForm = false;\n\n    this.httpService.editIncome(payload, this.incomeUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить доход!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Доход успешно изменен!');\n        this.getMainDataFromDb();\n        this.selectedIncomes.length = 0;\n      }\n    });\n  }\n\n  /**\n   * Отображение формы добавления цели / расхода.\n   */\n  addGoalModalShow() {\n    this.isGoalAddForm = true;\n    this.addGoalForm.patchValue({\n      price: '',\n      description: '',\n      startDate: '',\n      isRepayment: false\n    });\n  }\n\n  /**\n   * Выбрали дату в окне добавления нового расхода.\n   *\n   * event - выбранная дата.\n   */\n  toggleDateNotNull(event: any) {\n    if (event != null) {\n      console.log('event = ', event);\n      this.isDateNotNullForAddNewGoalForm = true;\n    } else {\n      this.isDateNotNullForAddNewGoalForm = false;\n    }\n\n    if (this.addGoalForm.value.isRepayment) {\n      this.loansList.length = 0;\n      this.repaymentToggle(event);\n    }\n  }\n\n  /**\n   * Переключили переключатель \"это погашение кредита\" при добавлении расхода.\n   *\n   * $event\n   */\n  repaymentToggle(event: any) {\n\n    let currentDate: Moment;\n    if (event != null) {\n      currentDate = moment(Date.parse(event));\n      if (currentDate == null) {\n        currentDate = moment(new Date(), 'DD/MM/YYYY');\n      }\n    } else {\n      currentDate = moment(Date.parse(this.addGoalForm.value.startDate));\n      if (currentDate == null) {\n        currentDate = moment(new Date(), 'DD/MM/YYYY');\n      }\n    }\n    let payload: GetLoansByDateRq;\n    payload = new GetLoansByDateRq();\n    payload.startDate = currentDate.format('YYYY-MM-DD');\n    this.httpService.getLoansByDate(payload, this.loansByDate).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно Загрузить кредиты!');\n      })\n    ).subscribe(data => {\n      if (data.loansList == null || data.loansList.length === 0) {\n        this.isLoanListByDateEmpty = true;\n      } else {\n        this.isLoanListByDateEmpty = false;\n        this.loansList = data.loansList;\n      }\n    });\n\n  }\n\n  /**\n   * Добавить цель / трату.\n   *\n   */\n  addGoal() {\n    let payload: NewGoalRq;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let selectedDate: Moment;\n    if (!this.addGoalForm.value.startDate) {\n      selectedDate = moment(new Date(), DATE_TIME_FORMAT);\n    } else {\n      selectedDate = moment(this.addGoalForm.value.startDate, DATE_TIME_FORMAT);\n    }\n\n    payload = new NewGoalRq();\n    payload.description = this.addGoalForm.value.description;\n    payload.price = this.addGoalForm.value.price;\n    payload.startDate = selectedDate.format('YYYY-MM-DD');\n\n    if (this.selectedLoan != null) {\n      payload.repayment = this.selectedLoan.id;\n    }\n\n    this.httpService.addGoal(payload, this.goalsUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить цель!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Цель успешно добавлена! ID дохода - ' + data.id);\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Отобразить окно редактирования цели.\n   *  $event\n   *  item\n   */\n  showEditGoalsListModal($event: MouseEvent, item: FinPlan) {\n    this.isGoalEditForm = true;\n    this.goalsListForEdit = item.purchasePlan.purchasePlan;\n    this.goalsForEditDate = item.month + ' ' + item.year;\n  }\n\n  /**\n   * Удалить доходы.\n   */\n  deleteIncomes() {\n    let payload: DeleteIncomesRq;\n    payload = new DeleteIncomesRq();\n    payload.idList = this.selectedIncomes;\n    this.isIncomeEditForm = false;\n\n    this.httpService.deleteIncomes(payload, this.deleteIncomesUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить доходы!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Доходы успешно удалены!');\n        this.getMainDataFromDb();\n        this.selectedIncomes.length = 0;\n      }\n    });\n  }\n\n  /**\n   * Отобразить форму редактирования выбранного дохода.\n   */\n  showEditSelectedIncomeForm() {\n    this.goalsListForEdit = null;\n    this.isSelectedGoalEditForm = true;\n    this.isGoalEditForm = false;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    const formattedDate = (moment(this.selectedGoal.startDate)).format(DATE_TIME_FORMAT);\n    console.log('Date = ', formattedDate.toString());\n\n    this.editGoalForm.patchValue({\n      id: this.selectedGoal.id,\n      description: this.selectedGoal.description,\n      price: this.selectedGoal.price,\n      startDate: formattedDate.toString(),\n      repaymentId: this.selectedGoal.loanId\n    });\n\n    this.isGoalForLoan = this.selectedGoal.loanId != null;\n  }\n\n  /**\n   * Отправить на бэк запрос на редактирование цели.\n   */\n  editGoal() {\n    let payload: NewGoalRq;\n    payload = new NewGoalRq();\n    payload.description = this.editGoalForm.value.description;\n    payload.price = this.editGoalForm.value.price;\n    payload.id = this.editGoalForm.value.id;\n\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let currentDate: Moment;\n    if (this.editGoalForm.value.startDate) {\n      currentDate = moment(this.editGoalForm.value.startDate, DATE_TIME_FORMAT);\n      payload.startDate = currentDate.format('YYYY-MM-DD');\n    }\n\n    this.httpService.editGoal(payload, this.goalsUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить цель!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Цель успешно изменена!');\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Удалить Цель.\n   */\n  deleteSelectedGoal() {\n    this.httpService.deleteFinPlanningEntity(this.selectedGoal.id, this.goalsUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить цель!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Цель успешно удалена!');\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Отображение окна расширенной работы с зарплатами.\n   *\n   */\n  salaryModalShow() {\n    this.isSalaryShow = true;\n    this.httpService.getData(this.salaryUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно загрузить зарплаты!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.salaryList = data.salariesList;\n      }\n    });\n  }\n\n  /**\n   * Редактировать зарплату.\n   *\n   */\n  editSalary() {\n    let payload: SalaryRq;\n    payload = new SalaryRq();\n    payload.id = this.editSalaryForm.value.id;\n    payload.fullSalary = this.editSalaryForm.value.fullSalary;\n    payload.residualSalary = this.editSalaryForm.value.residualSalary;\n    payload.livingExpenses = this.editSalaryForm.value.livingExpenses;\n\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let currentDate: Moment;\n    if (this.editSalaryForm.value.salaryDate) {\n      currentDate = moment(this.editSalaryForm.value.salaryDate, DATE_TIME_FORMAT);\n      payload.salaryDate = currentDate.format('YYYY-MM-DD');\n    }\n\n    this.httpService.editSalary(payload, this.salaryUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить зарплату!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Зарплата успешно изменена!');\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Отобразить модал редактирования ЗП.\n   */\n  showEditSalaryModal() {\n    this.isEditSalaryShow = true;\n    this.isSalaryShow = false;\n\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    const formattedDate = (moment(this.selectedSalary.salaryDate)).format(DATE_TIME_FORMAT);\n    console.log('Date = ', formattedDate.toString());\n\n    this.editSalaryForm.patchValue({\n      id: this.selectedSalary.id,\n      fullSalary: this.selectedSalary.fullSalary,\n      residualSalary: this.selectedSalary.residualSalary,\n      salaryDate: formattedDate.toString(),\n      livingExpenses: this.selectedSalary.livingExpenses\n    });\n  }\n\n  /**\n   * Отобразить окно добавления ЗП.\n   *\n   */\n  showAddSalaryModal() {\n    this.isEditSalaryShow = false;\n    this.isSalaryShow = false;\n    this.isAddNewSalaryShow = true;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    const formattedDate = (moment(new Date())).format(DATE_TIME_FORMAT);\n    console.log('Date = ', formattedDate.toString());\n\n    this.addNewSalaryForm.patchValue({\n      id: '',\n      fullSalary: '',\n      residualSalary: '',\n      salaryDate: formattedDate.toString(),\n      livingExpenses: ''\n    });\n  }\n\n  /**\n   * Добавить новую ЗП.\n   */\n  addSalary() {\n    let payload: SalaryRq;\n    payload = new SalaryRq();\n    payload.id = this.addNewSalaryForm.value.id;\n    payload.fullSalary = this.addNewSalaryForm.value.fullSalary;\n    payload.residualSalary = this.addNewSalaryForm.value.residualSalary;\n    payload.livingExpenses = this.addNewSalaryForm.value.livingExpenses;\n\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let currentDate: Moment;\n    if (this.addNewSalaryForm.value.salaryDate) {\n      currentDate = moment(this.addNewSalaryForm.value.salaryDate, DATE_TIME_FORMAT);\n      payload.salaryDate = currentDate.format('YYYY-MM-DD');\n    }\n\n    this.httpService.addSalary(payload, this.salaryUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить зарплату!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Зарплата успешно добавлена!');\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Удалить ЗП.\n   */\n  deleteSelectedSalary() {\n    this.httpService.deleteFinPlanningEntity(this.selectedSalary.id, this.salaryUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить зарплату!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Зарплата успешно удалена!');\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Отображение модала добавления Фриза.\n   */\n  addFreezeModalShow() {\n    this.isAddNewFreezeFormShow = true;\n    console.log('Selected month',  this.selectedFinPlan.monthNumber);\n    console.log('Selected year',  this.selectedFinPlan.year);\n    this.addNewFreezeForm.patchValue({\n      amount: ''\n    });\n  }\n\n\n  /**\n   * Добавить фриз.\n   */\n  addFreeze() {\n    let payload: NewFreezeRq;\n    payload = new NewFreezeRq();\n    payload.amount = this.addNewFreezeForm.value.amount;\n    payload.year = this.selectedFinPlan.year;\n    payload.month = this.selectedFinPlan.monthNumber;\n\n    this.httpService.addFreeze(payload, this.freezeUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить фриз!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Фриз успешно добавлен! ID фриза - ' + data.id);\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Удалить фриз.\n   */\n  deleteFreeze() {\n    this.httpService.deleteFreeze(this.selectedFinPlan, this.freezeUri).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить фриз!');\n      })\n    ).subscribe(data => {\n      if (data.status.code !== 200) {\n        this.forcedErrorAlertWithoutError(data.status.description, data.status.code);\n        this.getMainDataFromCache();\n      } else {\n        this.showAlert('Фриз успешно удален!');\n        this.getMainDataFromDb();\n      }\n    });\n  }\n\n  /**\n   * Запрашиваем свободные кредитные слоты для получения номеров.\n   *\n   * event - выбранная дата.\n   */\n  getFreeLoanSlots(event: any) {\n    let currentDate: Moment;\n    if (event != null) {\n      currentDate = moment(Date.parse(event));\n      if (currentDate == null) {\n        currentDate = moment(new Date(), 'DD/MM/YYYY');\n      }\n    } else {\n      currentDate = moment(Date.parse(this.addGoalForm.value.startDate));\n      if (currentDate == null) {\n        currentDate = moment(new Date(), 'DD/MM/YYYY');\n      }\n    }\n    let payload: GetLoansByDateRq;\n    payload = new GetLoansByDateRq();\n    payload.startDate = currentDate.format('YYYY-MM-DD');\n    this.httpService.getLoansByDate(payload, this.freeSlotsByDate).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно Загрузить кредиты!');\n      })\n    ).subscribe(data => {\n      if (data.openSlots == null || data.openSlots.length === 0) {\n        this.isFreeSlotsExists = false;\n      } else {\n        this.isFreeSlotsExists = true;\n        this.freeLoanSlots = data;\n      }\n    });\n  }\n\n  /**\n   * Выбрали дату в окне добавления нового кредита.\n   *\n   * event - выбранная дата.\n   */\n  toggleDateForNewLoanNotNull($event: any) {\n    if ($event != null) {\n      this.isDateNotNullForAddNewLoanForm = true;\n      this.getFreeLoanSlots($event);\n    } else {\n      this.isDateNotNullForAddNewLoanForm = false;\n      this.isFreeSlotsExists = true;\n    }\n  }\n}\n","module.exports = \"@media screen and (min-width: 1447px) {\\n  .ar-900-show {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 1447px) {\\n  .ar-900-hide {\\n    display:none!important;\\n  }\\n  .ar-900-show {\\n    display:initial!important;\\n  }\\n}\\n\\n:host{\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0UseUJBQXlCO0VBQzNCO0FBQ0Y7O0FBQ0E7O0FBRUEiLCJmaWxlIjoic3JjL2FwcC91aS9sYXlvdXQvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTQ0N3B4KSB7XG4gIC5hci05MDAtc2hvdyB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxNDQ3cHgpIHtcbiAgLmFyLTkwMC1oaWRlIHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG4gIC5hci05MDAtc2hvdyB7XG4gICAgZGlzcGxheTppbml0aWFsIWltcG9ydGFudDtcbiAgfVxufVxuOmhvc3R7XG5cbn1cbiJdfQ== */\"","module.exports = \"<!--<clr-main-container>-->\\n<header class=\\\"header-1\\\">\\n  <div class=\\\"branding\\\">\\n    <a class=\\\"nav-link\\\">\\n      <clr-icon shape=\\\"shield\\\"></clr-icon>\\n      <div class=\\\"ar-900-hide\\\">\\n      <span class=\\\"title\\\">arNote Project</span>\\n      </div>\\n    </a>\\n  </div>\\n  <div *ngIf=\\\"authService.isAuthenticated()\\\" class=\\\"header-nav\\\">\\n    <a class=\\\"active nav-link nav-icon\\\" clrVerticalNavLink routerLink=\\\"../\\\" routerLinkActive=\\\"active\\\">\\n      <clr-icon shape=\\\"home\\\"></clr-icon>\\n    </a>\\n  </div>\\n\\n  <div class=\\\"header-actions\\\">\\n\\n    <clr-dropdown [clrCloseMenuOnItemClick]=\\\"true\\\">\\n      <button class=\\\"nav-icon\\\" clrDropdownTrigger>\\n        <clr-icon shape=\\\"user\\\"></clr-icon>\\n        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n      </button>\\n      <clr-dropdown-menu *clrIfOpen>\\n        <label class=\\\"dropdown-header\\\">Меню пользователя</label>\\n        <div clrDropdownItem (click)=\\\"loginIconHandler('Регистрация')\\\">Регистрация</div>\\n        <div clrDropdownItem (click)=\\\"loginIconHandler(loginLogoutText)\\\">{{loginLogoutText}}</div>\\n      </clr-dropdown-menu>\\n    </clr-dropdown>\\n\\n  </div>\\n</header>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"isLogin\\\">\\n  <h3 class=\\\"modal-title\\\">Войти</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"loginForm\\\">\\n\\n      <!--ПОЛЕ ЛОГИН-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"login\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"login\\\" id=\\\"login\\\" name=\\\"login\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ПАРОЛЬ-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"password\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n        <input type=\\\"password\\\" clrInput formControlName=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"sendLogin()\\\" class=\\\"btn btn-primary mt-1\\\">Войти</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n  <!-- ФОРМА РЕГИСТРАЦИИ ЮЗЕРА -->\\n\\n  <clr-modal [(clrModalOpen)]=\\\"isRegister\\\">\\n    <h3 class=\\\"modal-title\\\">Новой юзер</h3>\\n    <div class=\\\"modal-body\\\">\\n      <form clrForm [formGroup]=\\\"registerForm\\\">\\n\\n        <!--ПОЛЕ ЛОГИН-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"reglogin\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n          <input type=\\\"text\\\" clrInput formControlName=\\\"login\\\" id=\\\"reglogin\\\" name=\\\"login\\\" autocomplete=\\\"off\\\" required\\n                 size=\\\"100\\\">\\n        </clr-input-container>\\n\\n        <!--ПОЛЕ ПАРОЛЬ-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"regpassword\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n          <input type=\\\"password\\\" clrInput formControlName=\\\"password\\\" id=\\\"regpassword\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" required\\n                 size=\\\"100\\\">\\n        </clr-input-container>\\n\\n        <!--ПОЛЕ EMAIL-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"regemail\\\" class=\\\"input-label clr-col-12\\\">E-mail</label>\\n          <input type=\\\"email\\\" clrInput formControlName=\\\"email\\\" id=\\\"regemail\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" required\\n                 size=\\\"100\\\">\\n        </clr-input-container>\\n        <br/>\\n        <!--<span class=\\\"label label-danger\\\">Не используйте почтовые ящики сервиса mail.ru!</span>-->\\n\\n        <!--ПОЛЕ ПОЛНОЕ ИМЯ-->\\n\\n        <clr-input-container>\\n\\n          <label #label for=\\\"registerfullname\\\" class=\\\"input-label clr-col-12\\\">Полное имя</label>\\n          <input type=\\\"text\\\" clrInput formControlName=\\\"fullname\\\" id=\\\"registerfullname\\\" name=\\\"fullname\\\" autocomplete=\\\"off\\\" size=\\\"100\\\">\\n        </clr-input-container>\\n\\n      </form>\\n\\n      <div class=\\\"row\\\">\\n        <button type=\\\"button\\\" (click)=\\\"register()\\\" class=\\\"btn btn-primary mt-1\\\">Зарегистрироваться</button>\\n      </div>\\n\\n    </div>\\n  </clr-modal>\\n\\n\\n<!--ФОРМА РЕДАКТИРОВАНИЯ ПОЛЬЗОВАТЕЛЬСКИХ ДАННЫХ-->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isUserDataEdit\\\">\\n  <h3 class=\\\"modal-title\\\">Редактирование пользовательских данных</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"userInfoForm\\\">\\n\\n      <!--ПОЛЕ ЛОГИН-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"editlogin\\\" class=\\\"input-label clr-col-12\\\">Логин</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"editlogin\\\" id=\\\"editlogin\\\" name=\\\"editlogin\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ПАРОЛЬ-->\\n\\n      <clr-password-container>\\n\\n        <label #label for=\\\"editpassword\\\" class=\\\"input-label clr-col-12\\\">Пароль</label>\\n        <input type=\\\"password\\\" clrPassword formControlName=\\\"editpassword\\\" id=\\\"editpassword\\\" name=\\\"editpassword\\\" autocomplete=\\\"off\\\"\\n               size=\\\"100\\\">\\n        </clr-password-container>\\n\\n      <br/>\\n\\n      <!-- ENCRYPTED MODE -->\\n\\n      <clr-checkbox-wrapper>\\n\\n        <label #label for=\\\"isencrypted\\\" class=\\\"input-label clr-col-12\\\">Шифрование данных на фронте</label>\\n        <input type=\\\"checkbox\\\" clrCheckbox  formControlName=\\\"isencrypted\\\" id=\\\"isencrypted\\\" name=\\\"isencrypted\\\">\\n        </clr-checkbox-wrapper>\\n\\n      <!--ПОЛЕ EMAIL-->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"email\\\" class=\\\"input-label clr-col-12\\\">Email</label>\\n        <input type=\\\"email\\\" clrInput formControlName=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ ПОЛНОЕ ИМЯ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"fullname\\\" class=\\\"input-label clr-col-12\\\">Полное имя</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"fullname\\\" id=\\\"fullname\\\" name=\\\"fullname\\\" autocomplete=\\\"off\\\"\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!-- ПОЛЕ КЛЮЧ ШИФРОВАНИЯ -->\\n\\n      <clr-password-container *ngIf=\\\"user.userCryptoMode\\\">\\n\\n        <label #label for=\\\"cryptkey\\\" class=\\\"input-label clr-col-12\\\">Персональный ключ шифрования</label>\\n        <input type=\\\"password\\\" clrPassword formControlName=\\\"cryptkey\\\" id=\\\"cryptkey\\\" name=\\\"cryptkey\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-password-container>\\n      <br/>\\n\\n      <span *ngIf=\\\"user.userCryptoMode\\\" class=\\\"label label-warning\\\">Ключ хранится только у Вас. Запомните его и не теряйте.</span>\\n\\n\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"changeUserData()\\\" class=\\\"btn btn-primary mt-1\\\"  [disabled]=\\\"!userInfoForm.valid\\\">ИЗМЕНИТЬ</button>\\n      <button type=\\\"button\\\" *ngIf=\\\"user.userCryptoMode\\\" (click)=\\\"clearCryptoKey()\\\" class=\\\"btn btn-danger mt-1\\\"  [disabled]=\\\"!userInfoForm.valid\\\">СТЕРЕТЬ КЛЮЧ ШИФРОВАНИЯ</button>\\n    </div>\\n\\n  </div>\\n</clr-modal>\\n\\n<!--</clr-main-container>-->\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {catchError, tap} from 'rxjs/operators';\nimport {HttpParams} from '@angular/common/http';\nimport {AuthService} from '../../../service/auth.service';\nimport {throwError} from 'rxjs';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {Router} from '@angular/router';\nimport {HttpService} from '../../../service/http.service';\nimport {User} from '../../../dto/user';\nimport {environment} from '../../../../environments/environment';\nimport {Subscription} from 'rxjs/Subscription';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: 'header.component.html',\n  providers: [AuthService, HttpService],\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n\n  // --------------------------------- URL'ы -------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  private subscription: Subscription;\n  cryptokey = '';\n  myBaseUrl = this.SERVER_URL + '/rest/wishes';\n  usersUrl = this.myBaseUrl + '/users'; // основная ссылка на api\n  serviceMessage: MessageCode;\n  loginLogoutText: string;\n\n  isLogin = false; // вывод диалогового окна логгирования\n  isRegister = false; // вывод диалогового окна регистрации\n  loginDropDownMenu: string[];\n  isUserDataEdit = false; // вывод диалогового информации о пользователе.\n  user: User;\n\n  loginForm = this.fb.group({\n    login: ['', [\n      Validators.required\n    ]],\n    password: ['', [\n      Validators.required\n    ]]\n  });\n\n  registerForm = this.fb.group({\n    login: ['', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9]+$/)\n    ]],\n    password: ['', [\n      Validators.required\n    ]],\n    email: ['', [\n      Validators.required,\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n    ]],\n    fullname: ['', []],\n  });\n\n  userInfoForm = this.fb.group({\n    editlogin: ['', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9]+$/)\n    ]],\n    editpassword: ['', []]\n    ,\n    isencrypted: [false, []],\n    email: ['', [\n      Validators.required,\n      Validators.email\n    ]],\n    fullname: ['', []],\n    cryptkey: ['', [Validators.required]]\n  });\n\n  constructor(private commonService: CommonService, public authService: AuthService, private httpService: HttpService,\n              private fb: FormBuilder, public router: Router) {\n  }\n\n  ngOnInit() {\n\n    const idToken = localStorage.getItem('token');\n    this.cryptokey = localStorage.getItem('cryptokey');\n    this.user = new User();\n\n    if (idToken) {\n      if (this.authService.isAuthenticated()) {\n        this.loginDropDownMenu = ['О пользователе', 'Выйти'];\n        this.loginLogoutText = 'Выйти';\n      } else {\n        this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n        this.loginLogoutText = 'Войти';\n      }\n\n    } else {\n      this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n      this.loginLogoutText = 'Войти';\n    }\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n      console.log('message ->' + error);\n      if (error != null) {\n        this.serviceMessage = error;\n        if (this.serviceMessage.messageType === this.serviceMessage.SESSION_EXPIRED) {\n          this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n        }\n      }\n    }\n  );\n}\n\n\nclearCryptoKey() {\n  localStorage.removeItem('cryptokey');\n\n  this.userInfoForm.patchValue({\n    cryptkey: ''\n  });\n\n  this.isUserDataEdit = false;\n\n}\n\nloadUserData() {\n\n  this.httpService.isCryptoUser().pipe(\n    catchError(err => {\n      return this.errorHandler(err, 'Невозможно получить крипто-статус пользователя!');\n    })\n  ).subscribe(data => {\n\n    this.user.id = data.id;\n    this.user.login = data.login;\n    this.user.pwd = data.pwd;\n    this.user.userRole = data.userRole;\n    this.user.userCryptoMode = data.userCryptoMode;\n    this.user.creationDate = data.creationDate;\n    this.user.email = data.email;\n    this.user.fullname = data.fullname;\n\n    this.userInfoForm.patchValue({\n      editlogin: this.user.login,\n      editpassword: this.user.pwd,\n      isencrypted: this.user.userCryptoMode,\n      email: this.user.email,\n      fullname: this.user.fullname\n    });\n\n    if (data.userCryptoMode === false) {\n      this.userInfoForm.patchValue({\n        cryptkey: '111'\n      });\n    }\n  });\n}\n\nloginIconHandler(item\n:\nstring\n) {\n  if (item === 'Войти') {\n    this.isLogin = true;\n    this.loginLogoutText = 'Выйти';\n  } else if (item === 'Выйти') {\n    this.loginDropDownMenu = ['Зарегистрироваться', 'Войти'];\n    this.loginLogoutText = 'Войти';\n    localStorage.removeItem('token');\n    this.router.navigate(['401']);\n  } else if (item === 'Зарегистрироваться') {\n    this.isRegister = true;\n  } else if (item === 'О пользователе') {\n    this.loadUserData();\n    this.isUserDataEdit = true;\n\n    const tempKey = localStorage.getItem('cryptokey');\n    this.userInfoForm.patchValue({\n      cryptkey: tempKey.toString(),\n    });\n\n  }\n}\n\nerrorHandler(err, message: string) {\n\n  this.isLogin = false;\n  this.isUserDataEdit = false;\n  this.isRegister = false; // прячем окно регистрации\n\n  const errorType = new MessageCode();\n  if (message === 'LOGINERROR') {\n    this.sendMessagePush(errorType.WRONG_LOGIN);\n  } else {\n    if (err.error === 'SUCH_USER_EXIST') {\n      this.sendMessagePush(errorType.USER_DATA_CHANGE_SUCH_USER_EXISTS);\n    } else {\n      this.sendMessagePush(errorType.USER_DATA_CHANGE_SOME_ERROR);\n    }\n  }\n  return throwError(err);\n}\n\n\nchangeUserData() {\n\n  if ((this.user.login === this.userInfoForm.value.editlogin)\n    && (this.user.email === this.userInfoForm.value.email)\n    && (this.user.fullname === this.userInfoForm.value.fullname)) {\n\n    console.log('МЕНЯЕМ ТОЛЬКО CRYPTO-KEY');\n\n    const messageType = new MessageCode();\n    this.sendMessagePush(messageType.USER_DATA_CHANGE_OK);\n    this.isUserDataEdit = false;\n    localStorage.setItem('cryptokey', this.userInfoForm.value.cryptkey);\n    console.log('cryptokey is written - ' + this.userInfoForm.value.cryptkey);\n\n  } else {\n\n    this.user.login = this.userInfoForm.value.editlogin;\n    this.user.userCryptoMode = this.userInfoForm.value.isencrypted;\n    this.user.email = this.userInfoForm.value.email;\n    this.user.fullname = this.userInfoForm.value.fullname;\n\n    console.log('МЕНЯЕМ ВСЕ ЮЗЕРСКИЕ ДАННЫЕ');\n\n    this.httpService.updateUserData(this.user, this.usersUrl + '/' + this.user.id).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно выполнить редактирование пользовательских данных!');\n      })\n    ).subscribe(hero => {\n\n      const messageType = new MessageCode();\n      this.sendMessagePush(messageType.USER_DATA_CHANGE_OK);\n      this.isUserDataEdit = false;\n      localStorage.setItem('cryptokey', this.userInfoForm.value.cryptkey);\n      console.log('cryptokey is written - ' + this.userInfoForm.value.cryptkey);\n    });\n  }\n}\n\nsendMessagePush(message: string) {\n  const errorType = new MessageCode();\n\n  errorType.messageType = message;\n  console.log('Error message- ' + errorType.messageType);\n  this.commonService.pushError(errorType);\n}\n\nregister() {\n\n  const newUser = new User();\n  newUser.login = this.registerForm.value.login;\n  newUser.pwd = this.registerForm.value.password;\n  newUser.fullname = this.registerForm.value.fullname;\n  newUser.email = this.registerForm.value.email;\n  newUser.userCryptoMode = false;\n  newUser.userRole = 'USER';\n\n  this.authService.register(newUser, this.usersUrl).pipe(\n    catchError(err => {\n      return this.errorHandler(err, 'REGISTERERROR');\n    })\n  ).subscribe(res => {\n    const messageType = new MessageCode();\n    this.sendMessagePush(messageType.REGISTER_OK);\n    this.isRegister = false;\n  });\n}\n\n\nsendLogin() {\n\n  const body = new HttpParams()\n    .set('username', this.loginForm.value.login)\n    .set('password', this.loginForm.value.password);\n\n  this.authService.login(body.toString())\n    .pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'LOGINERROR');\n      }))\n    .pipe(\n      tap(resp => {\n        console.log('header', resp.headers.get('Authorization'));\n        localStorage.removeItem('token');\n        localStorage.setItem('token', resp.headers.get('Authorization'));\n        console.log('storage', localStorage.getItem('token'));\n        this.isLogin = false;\n\n        this.authService.refreshToken();\n\n        this.router.navigate(['']);\n        this.loginDropDownMenu = ['О пользователе', 'Выйти'];\n        const message = new MessageCode();\n        this.sendMessagePush(message.AUTH_LOGIN_OK);\n      }))\n    .subscribe();\n}\n}\n","module.exports = \"<div class=\\\"content-container\\\">\\n  <div class=\\\"content-area\\\">\\n\\n    <clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n    <clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n    <clr-datagrid [(clrDgSingleSelected)]=\\\"selectedPaper\\\">\\n      <clr-dg-action-bar>\\n        <div class=\\\"actions-container\\\">\\n          <div class=\\\"row\\\">\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"openAddInstrument($event)\\\">Добавить</button>\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"getBonds(this.GET_BONDS_URL)\\\">Обновить</button>\\n            <button class=\\\"btn btn-danger\\\" [disabled]=\\\"!selectedPaper\\\" (click)=\\\"deleteBond()\\\">Удалить</button>\\n            <button class=\\\"btn btn-success\\\" [disabled]=\\\"!isDivsExist()\\\"\\n                    (click)=\\\"openDivsModal()\\\">{{getDivButtonName()}}</button>\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"bonds.length<1\\\" (click)=\\\"openReturnsModal()\\\">Доходы</button>\\n            <button class=\\\"btn btn-secondary\\\" [disabled]=\\\"bonds.length<1\\\" (click)=\\\"openCalendarAndLoadData()\\\">\\n              Календарь\\n            </button>\\n\\n            <!--  Список фильтрации -->\\n            <clr-dropdown>\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownToggle>Фильтр\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n              </button>\\n              <clr-dropdown-menu *clrIfOpen>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Тип бумаги</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of filtersForInstrumentType\\\" (click)=\\\"changeTypeFilter(item)\\\"\\n                       clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>План / Факт</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of filtersForStatus\\\" (click)=\\\"changeTypeFilter(item)\\\"\\n                       clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"clearFilters()\\\">Сбросить фильтры</button>\\n              </clr-dropdown-menu>\\n            </clr-dropdown>\\n\\n            <!--  Сортировка -->\\n            <clr-dropdown>\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownToggle [disabled]=\\\"bonds.length<1\\\">\\n                Сортировка\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n              </button>\\n              <clr-dropdown-menu *clrIfOpen>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Тикер</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'TICKER')\\\" clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Дивиденд</button>\\n                  <clr-dropdown-menu>\\n                    <clr-dropdown>\\n                      <button type=\\\"button\\\" clrDropdownTrigger>В рублях</button>\\n                      <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                        <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'DIV-RUB')\\\"\\n                           clrDropdownItem>{{item}}</a>\\n                      </clr-dropdown-menu>\\n                    </clr-dropdown>\\n                    <clr-dropdown>\\n                      <button type=\\\"button\\\" clrDropdownTrigger>В %</button>\\n                      <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                        <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'DIV-PRCNT')\\\"\\n                           clrDropdownItem>{{item}}</a>\\n                      </clr-dropdown-menu>\\n                    </clr-dropdown>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Цена</button>\\n                  <clr-dropdown-menu>\\n                    <clr-dropdown>\\n                      <button type=\\\"button\\\" clrDropdownTrigger>Текущая</button>\\n                      <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                        <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'CUR-PRICE')\\\"\\n                           clrDropdownItem>{{item}}</a>\\n                      </clr-dropdown-menu>\\n                    </clr-dropdown>\\n                    <clr-dropdown>\\n                      <button type=\\\"button\\\" clrDropdownTrigger>Итоговая</button>\\n                      <clr-dropdown-menu clrPosition=\\\"left-top\\\">\\n                        <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'FINAL-PRICE')\\\"\\n                           clrDropdownItem>{{item}}</a>\\n                      </clr-dropdown-menu>\\n                    </clr-dropdown>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Рост всего</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'TOTAL-GROW')\\\"\\n                       clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <clr-dropdown>\\n                  <button type=\\\"button\\\" clrDropdownTrigger>Рост сегодня</button>\\n                  <clr-dropdown-menu>\\n                    <a *ngFor=\\\"let item of sortModes\\\" (click)=\\\"changeSort(item, 'TODAY-GROW')\\\"\\n                       clrDropdownItem>{{item}}</a>\\n                  </clr-dropdown-menu>\\n                </clr-dropdown>\\n                <div class=\\\"dropdown-divider\\\"></div>\\n                <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"clearSorting()\\\">Сбросить сортировку</button>\\n              </clr-dropdown-menu>\\n            </clr-dropdown>\\n\\n            <!-- Переключатель типа дельты (Моя или Тиньковская) -->\\n\\n\\n            <clr-toggle-container [ngStyle]=\\\"{'display':'initial', 'margin-left': '0.8rem'}\\\">\\n              <clr-toggle-wrapper>\\n                <input type=\\\"checkbox\\\" clrToggle [(ngModel)]=\\\"deltaToggle\\\" name=\\\"options\\\"\\n                       (change)=\\\"onDeltaToggleChange()\\\"/>\\n                <label>{{deltaCaption}}</label>\\n              </clr-toggle-wrapper>\\n            </clr-toggle-container>\\n\\n\\n          </div>\\n        </div>\\n      </clr-dg-action-bar>\\n      <clr-dg-column>Тикер</clr-dg-column>\\n      <clr-dg-column>\\n        <ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Тип</ng-container>\\n      </clr-dg-column>\\n      <clr-dg-column>\\n        <ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Описание</ng-container>\\n      </clr-dg-column>\\n      <clr-dg-column>Дивиденд</clr-dg-column>\\n      <clr-dg-column>%</clr-dg-column>\\n      <clr-dg-column>\\n        <ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Биржа</ng-container>\\n      </clr-dg-column>\\n      <clr-dg-column>\\n        <ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Цена</ng-container>\\n      </clr-dg-column>\\n      <clr-dg-column class=\\\"hidden-md-down\\\">\\n        <ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Лот / Куплено</ng-container>\\n      </clr-dg-column>\\n      <clr-dg-column>Итого</clr-dg-column>\\n      <clr-dg-column>\\n        <ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Рост</ng-container>\\n      </clr-dg-column>\\n      <clr-dg-column class=\\\"hidden-md-down\\\">\\n        <ng-container *clrDgHideableColumn=\\\"{hidden: false}\\\">Факт/План</ng-container>\\n      </clr-dg-column>\\n      <clr-dg-column class=\\\"hidden-md-down\\\">Рост сегодня</clr-dg-column>\\n\\n      <clr-dg-row *clrDgItems=\\\"let item of bonds\\\" [clrDgItem]=\\\"item\\\">\\n        <clr-dg-cell>{{item.ticker}}</clr-dg-cell>\\n        <clr-dg-cell>\\n          <span *ngIf=\\\"item.type=='SHARE'\\\" class=\\\"badge badge-success\\\">{{item.type}}</span>\\n          <span *ngIf=\\\"item.type=='BOND'\\\" class=\\\"badge badge-gray\\\">{{item.type}}</span>\\n          <span *ngIf=\\\"item.type=='INDEX'\\\" class=\\\"badge badge-orange\\\">ETF</span>\\n        </clr-dg-cell>\\n        <clr-dg-cell>{{item.description}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.dividends.divSum}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.dividends.percent}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.stockExchange}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.currentPrice}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.minLot}}</clr-dg-cell>\\n        <clr-dg-cell>{{item.finalPrice}}</clr-dg-cell>\\n        <clr-dg-cell\\n          [ngStyle]=\\\"{'color': item.delta.deltaInRubles > 0 ? '#2ecc71' : item.delta.deltaInRubles < 0 ? '#e70c25' : '#faf9f9'}\\\">\\n          <span *ngIf=\\\"item.type=='SHARE'\\\">\\n            <svg *ngIf=\\\"item.delta.deltaInRubles<0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                 fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-down\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path fill-rule=\\\"evenodd\\\"\\n                    d=\\\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\\\"/>\\n            </svg>\\n            <svg *ngIf=\\\"item.delta.deltaInRubles>0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                 fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-up\\\" viewBox=\\\"0 0 16 16\\\">\\n              <path fill-rule=\\\"evenodd\\\"\\n                    d=\\\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\\\"/>\\n            </svg>\\n            {{item.delta.deltaInRubles}} ({{item.delta.totalPercent}}%)\\n          </span>\\n          <span *ngIf=\\\"item.type=='BOND'\\\">-</span>\\n        </clr-dg-cell>\\n        <clr-dg-cell><span *ngIf=\\\"!item.isBought\\\" class=\\\"badge badge-info\\\">PLAN</span><span *ngIf=\\\"item.isBought\\\"\\n                                                                                            class=\\\"badge badge-orange\\\">FACT</span>\\n        </clr-dg-cell>\\n        <clr-dg-cell\\n          [ngStyle]=\\\"{'color': item.delta.tinkoffDelta > 0 ? '#2ecc71' : item.delta.tinkoffDelta < 0 ? '#e70c25' : '#faf9f9'}\\\">\\n          <div *ngIf=\\\"item.isBought\\\">\\n            <div *ngIf=\\\"item.type=='SHARE' || item.type=='INDEX'\\\">\\n              <svg *ngIf=\\\"item.delta.tinkoffDelta<0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                   fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-down\\\" viewBox=\\\"0 0 16 16\\\">\\n                <path fill-rule=\\\"evenodd\\\"\\n                      d=\\\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\\\"/>\\n              </svg>\\n              <svg *ngIf=\\\"item.delta.tinkoffDelta>0\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"16\\\" height=\\\"16\\\"\\n                   fill=\\\"currentColor\\\" class=\\\"bi bi-arrow-up\\\" viewBox=\\\"0 0 16 16\\\">\\n                <path fill-rule=\\\"evenodd\\\"\\n                      d=\\\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\\\"/>\\n              </svg>\\n              {{item.delta.tinkoffDelta}} ({{item.delta.percent}}%)\\n            </div>\\n            <div *ngIf=\\\"item.type=='BOND'\\\">-</div>\\n            </div>\\n          <div *ngIf=\\\"!item.isBought\\\">\\n            <span class=\\\"badge badge-danger\\\">N/A</span>\\n          </div>\\n        </clr-dg-cell>\\n      </clr-dg-row>\\n      <clr-dg-footer>\\n        <clr-dg-column-toggle>\\n          <clr-dg-column-toggle-title>Отобразить столбцы</clr-dg-column-toggle-title>\\n        </clr-dg-column-toggle>\\n      </clr-dg-footer>\\n    </clr-datagrid>\\n\\n    <!--    МОДАЛ С ДОБАВЛЕНИЕМ НОВОГО ИНСТРУМЕНТА-->\\n    <app-ar-modal id=\\\"add-instrument-modal\\\" *ngIf=\\\"isAddDialogShown\\\">\\n      <h3 class=\\\"modal-title\\\">Добавить инструмент</h3>\\n      <div class=\\\"modal-body\\\">\\n        <form clrForm [formGroup]=\\\"addInstrumentForm\\\">\\n\\n          <!--ПОЛЕ ТИКЕР-->\\n          <clr-input-container>\\n            <label #label for=\\\"ticker\\\" class=\\\"input-label clr-col-12\\\">Тикер или название</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"ticker\\\"\\n                   id=\\\"ticker\\\"\\n                   name=\\\"ticker\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\"\\n                   (input)=\\\"onTickerFieldChangeForNewInstrumentDlg($event.target.value)\\\">\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <clr-datagrid *ngIf=\\\"isFoundInstrumentsBlockShown\\\" [(clrDgSingleSelected)]=\\\"selectedInstrument\\\"\\n                        (clrDgSingleSelectedChange)=\\\"selectionChanged()\\\">\\n            <clr-dg-column>Тикер</clr-dg-column>\\n            <clr-dg-column>Название</clr-dg-column>\\n            <clr-dg-column>Тип</clr-dg-column>\\n            <clr-dg-column>Биржа</clr-dg-column>\\n\\n            <clr-dg-row *ngFor=\\\"let element of instruments\\\" [clrDgItem]=\\\"element\\\">\\n              <clr-dg-cell>{{element.ticker}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.description}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.type}}</clr-dg-cell>\\n              <clr-dg-cell>{{element.stockExchange}}</clr-dg-cell>\\n            </clr-dg-row>\\n          </clr-datagrid>\\n\\n          <!-- Цена покупки -->\\n          <clr-input-container *ngIf=\\\"selectedInstrument && !addInstrumentForm.value.isPlan\\\">\\n            <label #label for=\\\"price\\\" class=\\\"input-label clr-col-12\\\">Цена</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"price\\\"\\n                   id=\\\"price\\\"\\n                   name=\\\"price\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <!-- Лот -->\\n          <clr-input-container *ngIf=\\\"selectedInstrument && !addInstrumentForm.value.isPlan\\\">\\n            <label #label for=\\\"lot\\\" class=\\\"input-label clr-col-12\\\">Лот / Кол-во</label>\\n            <input type=\\\"text\\\"\\n                   clrInput\\n                   formControlName=\\\"lot\\\"\\n                   id=\\\"lot\\\"\\n                   name=\\\"lot\\\"\\n                   autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n            <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n          </clr-input-container>\\n\\n          <!-- Дата покупки -->\\n          <clr-date-container *ngIf=\\\"selectedInstrument && !addInstrumentForm.value.isPlan\\\">\\n            <label>Дата покупки</label>\\n            <input type=\\\"date\\\" clrDate name=\\\"purchaseDate\\\"\\n                   formControlName=\\\"purchaseDate\\\"\\n                   id=\\\"purchaseDate\\\"\\n                   min=\\\"2019-01-01\\\" (clrDateChange)=\\\"getPriceForCurrentDate($event)\\\"/>\\n          </clr-date-container>\\n\\n          <!-- Переключатель isPlan -->\\n          <clr-toggle-container *ngIf=\\\"selectedInstrument && isPlanAvailable()\\\">\\n            <clr-toggle-wrapper>\\n              <input type=\\\"checkbox\\\" clrToggle formControlName=\\\"isPlan\\\"\\n                     id=\\\"isPlan\\\"\\n                     name=\\\"isPlan\\\"/>\\n              <label>План?</label>\\n            </clr-toggle-wrapper>\\n          </clr-toggle-container>\\n        </form>\\n\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" [disabled]=\\\"addInstrumentForm.invalid || !isAddNewInstrumentPossible\\\"\\n                  (click)=\\\"addInstrument('add-instrument-modal')\\\"\\n                  class=\\\"btn btn-primary mt-1\\\">Добавить\\n          </button>\\n          <button type=\\\"button\\\" (click)=\\\"closeAddInstrumentModal()\\\" class=\\\"btn btn-secondary mt-1\\\">Закрыть\\n          </button>\\n        </div>\\n      </div>\\n    </app-ar-modal>\\n\\n    <!--    МОДАЛ С КАЛЕНДАРЕМ -->\\n\\n    <app-ar-modal id=\\\"calendar-modal\\\" *ngIf=\\\"isCalendarShown\\\">\\n      <h3 class=\\\"modal-title\\\">Календарь</h3>\\n      <div class=\\\"modal-body\\\">\\n        <clr-stack-view>\\n          <clr-stack-block *ngFor=\\\"let block of calc\\\">\\n            <clr-stack-label>{{block.monthRussianName}}</clr-stack-label>\\n            <clr-stack-block *ngFor=\\\"let child of block.data\\\">\\n              <clr-stack-label>{{child.registryCloseDate}}</clr-stack-label>\\n              <clr-stack-content>\\n                <span class=\\\"label label-info\\\">{{child.ticker}}</span>\\n                <span class=\\\"label label-success\\\">{{child.value | number:'2.'}}<span\\n                  class=\\\"badge badge-orange\\\">{{child.currencyId}}\\n                </span></span>\\n                <span *ngIf=\\\"child.type === 'SHARE'\\\" class=\\\"badge badge-gray\\\">{{child.type}}</span>\\n                <span *ngIf=\\\"child.type === 'BOND'\\\" class=\\\"badge badge-purple\\\">{{child.type}}</span>\\n              </clr-stack-content>\\n            </clr-stack-block>\\n          </clr-stack-block>\\n        </clr-stack-view>\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" (click)=\\\"closeCalendar()\\\" class=\\\"btn btn-secondary mt-1\\\">Закрыть</button>\\n        </div>\\n      </div>\\n    </app-ar-modal>\\n\\n\\n    <!--    МОДАЛ С ИНФОЙ ПО КУПОНАМ / ДИВАМ -->\\n\\n    <app-ar-modal id=\\\"div-modal\\\" *ngIf=\\\"isDivAndCouponModalShown\\\">\\n      <h3 class=\\\"modal-title\\\">{{getModalFormName()}}</h3>\\n      <div class=\\\"modal-body\\\">\\n        <clr-datagrid\\n          *ngIf=\\\"selectedPaper && selectedPaper.dividends && selectedPaper.dividends.dividendList.length > 0\\\">\\n          <clr-dg-column>Дата</clr-dg-column>\\n          <clr-dg-column>Сумма</clr-dg-column>\\n          <clr-dg-column>Валюта</clr-dg-column>\\n\\n          <clr-dg-row *ngFor=\\\"let element of selectedPaper.dividends.dividendList\\\">\\n            <clr-dg-cell>{{element.registryCloseDate}}</clr-dg-cell>\\n            <clr-dg-cell>{{element.value}}</clr-dg-cell>\\n            <clr-dg-cell>{{element.currencyId}}</clr-dg-cell>\\n          </clr-dg-row>\\n        </clr-datagrid>\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" (click)=\\\"closeDivModal()\\\" class=\\\"btn btn-secondary mt-1\\\">Закрыть</button>\\n        </div>\\n      </div>\\n    </app-ar-modal>\\n\\n    <!--    МОДАЛ С ИНФОЙ ПО ДОХОДАМ -->\\n\\n    <app-ar-modal id=\\\"returns-modal\\\" *ngIf=\\\"isReturnsInfoShown\\\">\\n      <h3 class=\\\"modal-title\\\">Доходы</h3>\\n      <div class=\\\"modal-body\\\">\\n\\n        <clr-tabs>\\n          <clr-tab>\\n            <button clrTabLink id=\\\"link1\\\">Доходы</button>\\n            <clr-tab-content id=\\\"content1\\\" *clrIfActive>\\n              <clr-datagrid *ngIf=\\\"returns\\\">\\n                <clr-dg-column>Инвестировано</clr-dg-column>\\n                <clr-dg-column>Купоны</clr-dg-column>\\n                <clr-dg-column>Дивы</clr-dg-column>\\n                <clr-dg-column>Рост акций</clr-dg-column>\\n                <clr-dg-column>Итого</clr-dg-column>\\n\\n                <clr-dg-row>\\n                  <clr-dg-cell>{{returns.invested}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.bondsReturns}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.sharesReturns}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.sharesDelta}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.sum}}</clr-dg-cell>\\n                </clr-dg-row>\\n              </clr-datagrid>\\n            </clr-tab-content>\\n          </clr-tab>\\n          <clr-tab>\\n            <button clrTabLink>Нужно вложить</button>\\n            <clr-tab-content *clrIfActive=\\\"true\\\">\\n              <clr-datagrid *ngIf=\\\"returns\\\">\\n                <clr-dg-column>1000 руб.</clr-dg-column>\\n                <clr-dg-column>5000 руб.</clr-dg-column>\\n                <clr-dg-column>10 000 руб.</clr-dg-column>\\n                <clr-dg-column>30 000 руб.</clr-dg-column>\\n                <clr-dg-column>60 000 руб.</clr-dg-column>\\n\\n                <clr-dg-row>\\n                  <clr-dg-cell>{{returns.targets.ONE_THOUSAND_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.FIVE_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.TEN_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.THIRTY_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                  <clr-dg-cell>{{returns.targets.SIXTY_THOUSANDS_ROUBLES}}</clr-dg-cell>\\n                </clr-dg-row>\\n              </clr-datagrid>\\n            </clr-tab-content>\\n          </clr-tab>\\n        </clr-tabs>\\n        <div class=\\\"row\\\">\\n          <button type=\\\"button\\\" (click)=\\\"closeReturnsModal()\\\" class=\\\"btn btn-secondary mt-1\\\">Закрыть</button>\\n        </div>\\n      </div>\\n    </app-ar-modal>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MessageCode} from '../../../service/message.code';\nimport {CommonService} from '../../../service/common.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {throwError, timer} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {HttpService} from '../../../service/http.service';\nimport {environment} from '../../../../environments/environment';\nimport {Bond} from '../../../dto/bond';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {FoundInstrument} from '../../../dto/FoundInstrument';\nimport {CurrentPrice} from '../../../dto/CurrentPrice';\nimport {NewInstrumentRq} from '../../../dto/NewInstrumentRq';\nimport * as moment from 'moment';\nimport {Moment} from 'moment';\nimport {Returns} from '../../../dto/returns';\nimport {Calendar} from '../../../dto/calendar';\nimport {ModalService} from '../../../service/modal.service';\nimport {ToggleDeltaRq} from '../../../dto/ToggleDeltaRq';\n\n@Component({\n  selector: 'app-invest',\n  templateUrl: './investing.component.html',\n  providers: [HttpService],\n  styleUrls: ['./../main/main.component.css']\n})\nexport class InvestingComponent implements OnInit {\n\n  // --------------------------------- URL'ы ----------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  BASE_URL = this.SERVER_URL + '/investing';\n  GET_BONDS_URL = this.BASE_URL + '/consolidated'; // все бумаги\n  GET_BONDS_URL_WITH_FILTERING = this.BASE_URL + '/consolidated?filter='; // все бумаги\n  GET_BONDS_URL_WITH_SORT = this.BASE_URL + '/consolidated?sort='; // все бумаги\n  FIND_INSTRUMENTS_URL = this.BASE_URL + '/search'; // найти инструменты\n  GET_CURRENT_PRICE_BY_TICKER_URL = this.BASE_URL + '/price'; // текущая цена по тикеру\n  GET_PRICE_BY_TICKER_AND_DATE_URL = this.BASE_URL + '/price-by-date'; // текущая цена по тикеру\n  GET_RETURNS = this.BASE_URL + '/returns'; // доходы\n  CALENDAR = this.BASE_URL + '/calendar'; // календарь\n  TOGGLE_DELTA_MODE_URL = this.BASE_URL + '/toggledelta'; // переключить режим подсчета дельты\n\n  // --------------------------------- ХРАНИЛИЩА ------------------------------------\n\n  bonds: Bond[] = []; // контейнер бумаг\n  returns: Returns; // доходы\n  calc: Calendar[] = []; // календарь\n\n  instruments: FoundInstrument[] = [];\n  currentPrice: CurrentPrice;\n  selectedInstrument: any; // выбранный инструмент. Используется при поиске инструментов.\n  selectedPaper: Bond; // выбранный инструмент. Используется в основном датагриде.\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  // --------------------------------- ПЕРЕКЛЮЧАТЕЛИ МОДАЛОВ -------------------------\n\n  isAddDialogShown: boolean; // открытие диалога добавления инструмента.\n  isDivAndCouponModalShown: boolean; // открытие диалога с инфой по купонам / модалам\n  isReturnsInfoShown: boolean; // открытие диалога с инфой по доходам\n  isCalendarShown: boolean; // открытие диалога с инфой по доходам\n  isFoundInstrumentsBlockShown: boolean; // ???\n\n  // ---------------------------------- ФОРМЫ ----------------------------------------\n  addInstrumentForm = this.fb.group({\n    ticker: ['', [\n      Validators.required,\n      Validators.maxLength(100)\n    ]],\n    price: ['', [\n      Validators.required,\n      Validators.maxLength(20)\n    ]],\n    lot: ['', [\n      Validators.required,\n      Validators.maxLength(5)\n    ]],\n    purchaseDate: ['', []],\n    isPlan: [false, []]\n  });\n\n  // ---------------------------------- ФИЛЬТРЫ ----------------------------------------\n\n  filtersForInstrumentType = ['Акция', 'Облигация', 'ETF'];\n  filtersForStatus = ['План', 'Факт']; // фильтры\n  sortModes = ['По возрастанию [A-z / 1-10]', 'По убыванию [Z-a / 10-1]'];\n  deltaToggle = false;\n  deltaCaption = 'Тип Дельты: мой';\n\n  isAddNewInstrumentPossible = false;\n\n  constructor(private commonService: CommonService, private route: ActivatedRoute, private httpService: HttpService,\n              private modalService: ModalService, private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.getBonds(this.GET_BONDS_URL);\n    this.route.queryParams.subscribe(params => {\n      const date = params.startdate;\n    });\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n      } else {\n        this.globalError = error;\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n          console.log('LOGIN OK');\n        } else if (this.globalError.messageType === this.globalError.REGISTER_OK) {\n          this.result = this.globalError.REGISTER_OK;\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n        } else {\n          if (this.globalError.messageType !== this.globalError.SESSION_EXPIRED) {\n            this.error = error.messageType;\n            timer(4000).subscribe(() => {\n              this.error = null;\n            });\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Открыть диалоговое окно добавления бумаги.\n   *\n   * event\n   */\n  openAddInstrument(event: any) {\n    this.isAddDialogShown = true;\n    this.addInstrumentForm.patchValue({\n      ticker: '',\n      price: ''\n    });\n  }\n\n  /**\n   * Метод, отрабатывающий при выборе одного из найденных тикеров при добавлении иснтрумента.\n   *\n   * event\n   */\n  selectionChanged() {\n    this.getCurrentPriceAndLot(this.selectedInstrument.ticker, this.selectedInstrument.stockExchange);\n  }\n\n  /**\n   * Запросить цену по конкретной дате.\n   *\n   * event - выбранная дата\n   */\n  getPriceForCurrentDate(event: any) {\n    let currentDate: Moment;\n\n    currentDate = moment(Date.parse(event));\n    if (currentDate == null) {\n      currentDate = moment(new Date(), 'DD/MM/YYYY');\n    }\n\n    console.log('Converted date after format: ', currentDate.format('YYYY-MM-DD'));\n\n    this.httpService.getData(this.GET_PRICE_BY_TICKER_AND_DATE_URL\n      + '?ticker='\n      + this.selectedInstrument.ticker\n      + '&purchaseDate='\n      + currentDate.format('YYYY-MM-DD')).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно запросить текущую цену бумаги!');\n      })\n    ).subscribe(data => {\n      this.currentPrice = data;\n      if (this.currentPrice != null && this.currentPrice.status === 'OK') {\n        console.log('Получили текущую цену на конкретную дату: ', this.currentPrice.currentPrice);\n        this.isAddNewInstrumentPossible = true;\n        this.addInstrumentForm.patchValue({\n         price: this.currentPrice.currentPrice\n        });\n      } else {\n        this.isAddNewInstrumentPossible = false;\n        this.addInstrumentForm.patchValue({\n          price: 'Нет торгов на эту дату'\n        });\n      }\n    });\n  }\n\n  /**\n   * Изменение поля тикер при добавлении нового инструмента.\n   * @param searchValue - значение введенное в поле.\n   */\n  onTickerFieldChangeForNewInstrumentDlg(searchValue: string) {\n\n    if (searchValue.length > 0) {\n      this.isFoundInstrumentsBlockShown = true;\n      this.findInstruments(searchValue);\n      this.selectedInstrument = null;\n    } else {\n      this.selectedInstrument = null;\n      this.isFoundInstrumentsBlockShown = false;\n    }\n  }\n\n  /**\n   * Отобразить алерт!\n   *\n   *  text\n   *  mode\n   *  result\n   */\n  showAlert(text: string, mode: string, result: any) {\n\n    this.result = text;\n    this.selectedInstrument = null;\n    this.isAddDialogShown = null;\n    this.isDivAndCouponModalShown = false;\n    this.isReturnsInfoShown = false;\n    this.isCalendarShown = false;\n    this.isFoundInstrumentsBlockShown = false;\n    this.addInstrumentForm.value.isPlan = false;\n\n    timer(4000).subscribe(() => {\n      this.result = null;\n    });\n  }\n\n\n  /**\n   * Добавить инструмент. Вызывается из модала.\n   *\n   * payload\n   */\n  addInstrument(id: string) {\n\n    let payload: NewInstrumentRq;\n    const DATE_TIME_FORMAT = 'MM/DD/YYYY';\n    let currentDate: Moment;\n    if (!this.addInstrumentForm.value.purchaseDate) {\n      currentDate = moment(new Date(), DATE_TIME_FORMAT);\n    } else {\n      currentDate = moment(this.addInstrumentForm.value.purchaseDate, DATE_TIME_FORMAT);\n    }\n    console.log('Selected date after format: ', currentDate.format('YYYY-MM-DD'));\n    console.log('currentDate: ', currentDate.toLocaleString());\n    console.log('currentDate: ', this.addInstrumentForm.value.purchaseDate);\n\n    if (this.addInstrumentForm.value.isPlan) {\n      payload = new NewInstrumentRq(this.addInstrumentForm.value.ticker,\n        this.addInstrumentForm.value.isPlan,\n        this.selectedInstrument.type,\n        null,\n        null,\n        null,\n      );\n    } else {\n      payload = new NewInstrumentRq(this.addInstrumentForm.value.ticker,\n        this.addInstrumentForm.value.isPlan,\n        this.selectedInstrument.type,\n        this.addInstrumentForm.value.price,\n        this.addInstrumentForm.value.lot,\n        currentDate.format('YYYY-MM-DD'),\n      );\n    }\n    this.modalService.close(id);\n    console.log('Message = ', payload);\n    this.httpService.addInstrument(payload, this.BASE_URL).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить бумагу!');\n      })\n    ).subscribe(hero => {\n      this.showAlert('Инструмент успешно добавлен!', 'ADD MODE', hero);\n      this.getBonds(this.GET_BONDS_URL);\n    });\n  }\n\n  /**\n   * Запросить текущую цену бумаги и лот.\n   *\n   * ticker - тикер инструмента.\n   * se - биржа.\n   */\n  getCurrentPriceAndLot(ticker: string, se: string) {\n\n    this.httpService.getData(this.GET_CURRENT_PRICE_BY_TICKER_URL + '?ticker=' + ticker + '&stockExchange=' + se).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно запросить текущую цену бумаги!');\n      })\n    ).subscribe(data => {\n      this.currentPrice = data;\n      console.log('Получили текущую цену: ', this.currentPrice.currentPrice);\n      this.addInstrumentForm.patchValue({\n        ticker: this.currentPrice.ticker,\n        price: this.currentPrice.currentPrice,\n        lot: this.currentPrice.minLot\n      });\n    });\n  }\n\n  /**\n   * Поиск бумаги.\n   *\n   * @param keyword - искомое слово.\n   */\n  findInstruments(keyword: string) {\n\n    this.httpService.getData(this.FIND_INSTRUMENTS_URL + '?keyword=' + keyword).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно найти бумаги!');\n      })\n    ).subscribe(data => {\n      this.instruments = data.instruments;\n      console.log(this.instruments.length);\n    });\n  }\n\n  // Загрузить все бумаги\n  getBonds(url: string) {\n    console.log('url = ', url);\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить бумаги!');\n      })\n    ).subscribe(data => {\n      this.bonds = data.bonds;\n      this.getReturns(this.GET_RETURNS);\n      this.loadUserData();\n    });\n  }\n\n  /**\n   * Открыть модал с календарем и подгрузить данные.\n   *\n   */\n  openCalendarAndLoadData() {\n    this.isCalendarShown = true;\n    this.getCalendar(this.CALENDAR);\n  }\n\n\n  /**\n   * Календарь.\n   *\n   * url\n   */\n  getCalendar(url: string) {\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить календарь!');\n      })\n    ).subscribe(data => {\n      this.calc = data.calendar;\n    });\n  }\n\n  /**\n   * Выгрузить доходы по бумагам.\n   *\n   * url\n   */\n  getReturns(url: string) {\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить доходы!');\n      })\n    ).subscribe(data => {\n      this.returns = data;\n    });\n  }\n\n\n  /**\n   * Реакция на изменение типа фильтрации.\n   *\n   * item\n   */\n  changeTypeFilter(item: string) {\n\n    switch (item) {\n      case 'Акция': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'TYPE_SHARE');\n        break;\n      }\n      case 'Облигация': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'TYPE_BOND');\n        break;\n      }\n      case 'ETF': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'TYPE_ETF');\n        break;\n      }\n      case 'План': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'STATUS_PLAN');\n        break;\n      }\n      case 'Факт': {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'STATUS_FACT');\n        break;\n      }\n      default: {\n        this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'NONE');\n        break;\n      }\n    }\n  }\n\n  /**\n   * Очистить все фильтры.\n   *\n   * item\n   */\n  clearFilters() {\n    this.getBonds(this.GET_BONDS_URL_WITH_FILTERING + 'NONE');\n  }\n\n  /**\n   * Удалить бумагу.\n   *\n   *\n   */\n  deleteBond() {\n\n    this.httpService.deleteInstrument(this.selectedPaper.ticker, this.BASE_URL).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить бумагу!');\n      })\n    ).subscribe(data => {\n      this.getBonds(this.GET_BONDS_URL);\n    });\n  }\n\n\n  errorHandler(err, message: string) {\n    this.error = message;\n    timer(4000).subscribe(() => {\n      this.error = null;\n    });\n\n    return throwError(err);\n  }\n\n  /**\n   * Переключение режимов сортировки.\n   *\n   * item\n   * type\n   */\n  changeSort(item: string, type: string) {\n    switch (type) {\n      case 'TICKER': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'TICKER_ASC' : 'TICKER_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'DIV-RUB': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'DIV_RUB_ASC' : 'DIV_RUB_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'DIV-PRCNT': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'DIV_PRCNT_ASC' : 'DIV_PRCNT_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'CUR-PRICE': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'CUR_PRICE_ASC' : 'CUR_PRICE_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'FINAL-PRICE': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'FINAL_PRICE_ASC' : 'FINAL_PRICE_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'TOTAL-GROW': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'TOTAL_GROW_ASC' : 'TOTAL_GROW_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      case 'TODAY-GROW': {\n        const s = item === 'По возрастанию [A-z / 1-10]' ? 'TODAY_GROW_ASC' : 'TODAY_GROW_DESC';\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + s);\n        break;\n      }\n      default: {\n        this.getBonds(this.GET_BONDS_URL_WITH_SORT + 'NONE');\n        break;\n      }\n    }\n  }\n\n  /**\n   * Очистка сортировки.\n   *\n   */\n  clearSorting() {\n    this.getBonds(this.GET_BONDS_URL_WITH_SORT + 'NONE');\n  }\n\n  /**\n   * Метод для фронта: проверяем доступность кнопки для вывода дивидендов / купонов\n   */\n  isDivsExist() {\n    return this.selectedPaper\n      && this.selectedPaper.dividends\n      && this.selectedPaper.dividends.dividendList != null\n      && this.selectedPaper.dividends.dividendList.length > 0;\n  }\n\n  /**\n   * Метод для фронта: меняем название кнопки в зависимости от различных данных выбранной бумаги.\n   */\n  getDivButtonName() {\n    if (this.selectedPaper) {\n      if (this.selectedPaper\n        && this.selectedPaper.dividends\n        && this.selectedPaper.dividends.dividendList != null\n        && this.selectedPaper.dividends.dividendList.length > 0) {\n        return this.selectedPaper.type === 'SHARE' ? 'Дивиденды' : 'Купоны';\n      } else {\n        return this.selectedPaper.type === 'SHARE' ? 'Нет дивидендов' : 'Нет купонов';\n      }\n    } else {\n      return 'Купоны / Дивы: выберете бумагу!';\n    }\n  }\n\n  /**\n   * Нельзя создать дубль бумаги в качестве запланированной, если по этой бумаге уже есть покупки.\n   */\n  isPlanAvailable() {\n    if (this.selectedInstrument) {\n      return (this.bonds.find(b => b.ticker === this.selectedInstrument.ticker) == null);\n    } else {\n      return false;\n    }\n    return this.bonds.find(b => b.ticker === 'TBER') == null;\n  }\n\n  /**\n   * Формируем заголовок модальной формы.\n   */\n  getModalFormName() {\n    if (this.selectedPaper) {\n      return this.selectedPaper.type === 'SHARE' ? 'Дивиденды по акции с тикером: ' + this.selectedPaper.ticker :\n        'Купоны по облигации с тикером: ' + this.selectedPaper.ticker;\n    } else {\n      return 'Данные по купонам / дивидендам';\n    }\n  }\n\n  /**\n   * Закрыть календарь выплат.\n   */\n  closeCalendar() {\n    this.isCalendarShown = false;\n  }\n\n  /**\n   * Открыть модал с дивами / купонами.\n   */\n  openDivsModal() {\n    this.isDivAndCouponModalShown = true;\n  }\n\n  /**\n   * Закрыть модал с дивами / купонами.\n   */\n  closeDivModal() {\n    this.isDivAndCouponModalShown = false;\n  }\n\n  /**\n   * Открыть модал с доходами.\n   */\n  openReturnsModal() {\n    this.isReturnsInfoShown = true;\n  }\n\n  /**\n   * Закрыть модал с доходами.\n   */\n  closeReturnsModal() {\n    this.isReturnsInfoShown = false;\n  }\n\n  /**\n   * Закрыть модал с добавление инструмента.\n   */\n  closeAddInstrumentModal() {\n    this.isAddDialogShown = false;\n  }\n\n  /**\n   * Переключаем режим подсчета Дельты.\n   */\n  onDeltaToggleChange() {\n    let payload: ToggleDeltaRq;\n    this.deltaCaption = this.deltaToggle ? 'Тип Дельты: Свечи' : 'Тип Дельты: Тинькофф';\n\n    payload = new ToggleDeltaRq(this.deltaToggle ? 'CANDLE_DELTA' : 'TINKOFF_DELTA');\n    this.httpService.toggleDelta(payload, this.TOGGLE_DELTA_MODE_URL).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно переключить режим подсчета дельты!');\n      })\n    ).subscribe(res => {\n      this.showAlert('Переключили дельту на успешно добавлен!', 'ADD MODE', res);\n      this.getBonds(this.GET_BONDS_URL);\n    });\n  }\n\n  /**\n   * Загрузить данные пользователя. Например Фильтры.\n   */\n  loadUserData() {\n\n    this.httpService.isCryptoUser().pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно загрузить данные  пользователя!');\n      })\n    ).subscribe(data => {\n      this.deltaToggle = 'CANDLE_DELTA' === data.deltaMode;\n    });\n  }\n}\n","module.exports = \"<clr-main-container>\\n  <clr-header class=\\\"header\\\">\\n    <app-header></app-header>\\n  </clr-header>\\n  <div class=\\\"content-container\\\">\\n    <clr-vertical-nav [clr-nav-level]=\\\"1\\\">\\n      <a clrVerticalNavLink routerLink=\\\"../401\\\">О проекте</a>\\n      <a *ngIf=\\\"auth.isAuthenticated()\\\" clrVerticalNavLink routerLink=\\\"../\\\" >Список желаний</a>\\n      <a *ngIf=\\\"auth.isAuthenticated()\\\" clrVerticalNavLink routerLink=\\\"../months\\\" >Желания по месяцам</a>\\n      <a *ngIf=\\\"auth.isAuthenticated()\\\" clrVerticalNavLink routerLink=\\\"../finplanning\\\" >Фин-План</a>\\n      <a *ngIf=\\\"auth.isAuthenticated()\\\" clrVerticalNavLink routerLink=\\\"../investing\\\">Инвестиции</a>\\n    </clr-vertical-nav>\\n    <div class=\\\"content-area\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n  <app-session-timeout-modal></app-session-timeout-modal>\\n</clr-main-container>\\n\"","import {Component, OnInit, ChangeDetectionStrategy} from '@angular/core';\nimport {CommonService} from '../../service/common.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {AuthService} from '../../service/auth.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styles: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [CommonService, JwtHelperService]\n})\nexport class LayoutComponent implements OnInit {\n  timeLeft = 1;\n  interval;\n  constructor(public auth: AuthService) {\n  }\n\n  ngOnInit() {\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.interval = setInterval(() => {\n      if (this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n       this.auth.refreshToken();\n       this.timeLeft = 1;\n      }\n    }, 500);\n  }\n}\n","module.exports = \"\\n::ng-deep clr-icon:hover {\\n  transform: scale(1.2);\\n}\\n\\n.dropdown .dropdown-toggle {\\n  margin: 5px;\\n}\\n\\n.sumallrow {\\n  background-color: #790909;\\n  color: #ffffff;\\n}\\n\\n::ng-deep  .main-container {\\n}\\n\\n.sumpriorrow {\\n  background-color: #299834;\\n  color: #ffdb51;\\n\\n}\\n\\n@media screen and (min-width: 1447px) {\\n  .ar-900-show {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 1447px) {\\n  .ar-900-hide {\\n    display:none!important;\\n  }\\n  .ar-900-show {\\n    display:initial!important;\\n  }\\n}\\n\\n@media screen and (max-width: 475px) {\\n  .ar-475-hide {\\n    display:none!important;\\n  }\\n\\n  .string-truncate {\\n    width: 120px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n  }\\n\\n}\\n\\n@media screen and (min-width: 475px) {\\n  .ar-475-show {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 360px) {\\n  .ar-360-hide {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 500px){\\n\\n    .table tr td:nth-child(3),\\n    .table tr th:nth-child(3) {\\n      display: none;\\n    }\\n    .table tr td:nth-child(4),\\n    .table tr th:nth-child(4) {\\n      display: none;\\n    }\\n\\n    .table tr td:nth-child(5),\\n    .table tr th:nth-child(5) {\\n      display: none;\\n    }\\n\\n    .table tr td:nth-child(6),\\n    .table tr th:nth-child(6) {\\n      display: none;\\n    }\\n\\n    }\\n\\n.fas .fa-arrow-up{\\n  background: #0c5460;\\n}\\n\\n.fa, .fas:hover {\\n  background: aqua;\\n}\\n\\n:host{\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L21haW4vbWFpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUdFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixjQUFjO0FBQ2hCOztBQUVBO0FBQ0E7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYzs7QUFFaEI7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtFQUN4QjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7RUFDQTtJQUNFLHlCQUF5QjtFQUMzQjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQix1QkFBdUI7RUFDekI7O0FBRUY7O0FBRUE7RUFDRTtJQUNFLHNCQUFzQjtFQUN4QjtBQUNGOztBQUlBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7QUFDRjs7QUFFQTs7SUFFSTs7TUFFRSxhQUFhO0lBQ2Y7SUFDQTs7TUFFRSxhQUFhO0lBQ2Y7O0lBRUE7O01BRUUsYUFBYTtJQUNmOztJQUVBOztNQUVFLGFBQWE7SUFDZjs7SUFFQTs7QUFHSjtFQUNFLG1CQUFtQjtBQUNyQjs7QUFJQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFDQTs7QUFFQSIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9tYWluL21haW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuOjpuZy1kZWVwIGNsci1pY29uOmhvdmVyIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuMik7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcbn1cblxuLmRyb3Bkb3duIC5kcm9wZG93bi10b2dnbGUge1xuICBtYXJnaW46IDVweDtcbn1cblxuLnN1bWFsbHJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3OTA5MDk7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG46Om5nLWRlZXAgIC5tYWluLWNvbnRhaW5lciB7XG59XG5cbi5zdW1wcmlvcnJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTk4MzQ7XG4gIGNvbG9yOiAjZmZkYjUxO1xuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0NDdweCkge1xuICAuYXItOTAwLXNob3cge1xuICAgIGRpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ0N3B4KSB7XG4gIC5hci05MDAtaGlkZSB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxuICAuYXItOTAwLXNob3cge1xuICAgIGRpc3BsYXk6aW5pdGlhbCFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDc1cHgpIHtcbiAgLmFyLTQ3NS1oaWRlIHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG5cbiAgLnN0cmluZy10cnVuY2F0ZSB7XG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgfVxuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ3NXB4KSB7XG4gIC5hci00NzUtc2hvdyB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxufVxuXG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgLmFyLTM2MC1oaWRlIHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KXtcblxuICAgIC50YWJsZSB0ciB0ZDpudGgtY2hpbGQoMyksXG4gICAgLnRhYmxlIHRyIHRoOm50aC1jaGlsZCgzKSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDQpLFxuICAgIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNCkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDUpLFxuICAgIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNSkge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDYpLFxuICAgIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNikge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICB9XG5cblxuLmZhcyAuZmEtYXJyb3ctdXB7XG4gIGJhY2tncm91bmQ6ICMwYzU0NjA7XG59XG5cblxuXG4uZmEsIC5mYXM6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiBhcXVhO1xufVxuOmhvc3R7XG5cbn1cbiJdfQ== */\"","module.exports = \"<clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n\\n<clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n\\n<clr-datagrid *ngIf=\\\"!monthOrdermode\\\">\\n  <clr-dg-action-bar>\\n    <div class=\\\"actions-container\\\">\\n      <div class=\\\"ar-900-hide\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"openEditWish($event, null, 2)\\\">Добавить</button>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"getWishes(apiUrl)\\\">Обновить</button>\\n        <button class=\\\"btn btn-secondary; hidden-md-down\\\" (click)=\\\"openAddSalaryModal($event)\\\">Задать зарплату</button>\\n        <button class=\\\"btn btn-secondary; hidden-md-down\\\" (click)=\\\"openParseCsv($event)\\\" *ngIf=\\\"userRole==='ADMIN'\\\">Парсинг csv</button>\\n        <button class=\\\"{{filterMode ? 'btn btn-danger; hidden-md-down' : 'btn btn-secondary; hidden-md-down'}}\\\"\\n                (click)=\\\"filterWishes()\\\"> {{filterButtonText}}</button>\\n        <clr-dropdown class=\\\"hidden-md-down\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n            РЕЖИМ ОТОБРАЖЕНИЯ\\n            <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n          </button>\\n          <clr-dropdown-menu *clrIfOpen>\\n            <label class=\\\"dropdown-header\\\">Режим отображения</label>\\n            <a *ngFor=\\\"let item of filterTypes\\\" (click)=\\\"changeFilter(item)\\\" clrDropdownItem>{{item}}</a>\\n          </clr-dropdown-menu>\\n        </clr-dropdown>\\n\\n        <clr-dropdown class=\\\"hidden-md-down\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n            СОРТИРОВКА\\n            <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n          </button>\\n          <clr-dropdown-menu *clrIfOpen>\\n            <label class=\\\"dropdown-header\\\">Сортировка</label>\\n            <a *ngFor=\\\"let item of mainSort\\\" (click)=\\\"sortMainList(item)\\\" clrDropdownItem>{{item}}</a>\\n          </clr-dropdown-menu>\\n        </clr-dropdown>\\n      </div>\\n\\n      <!--МИНИ-КНОПКИ ДЛЯ МОБИЛКИ-->\\n\\n      <div class=\\\"ar-900-show\\\">\\n        <div class=\\\"clr-row\\\" style=\\\"margin-left: 1%\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"openEditWish($event, null, 2)\\\"\\n                  aria-label=\\\"Добавить желание\\\">\\n            <clr-icon shape=\\\"plus\\\"></clr-icon>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"getWishes(apiUrl)\\\" aria-label=\\\"Обновить\\\">\\n            <clr-icon shape=\\\"refresh\\\"></clr-icon>\\n          </button>\\n          <div class=\\\"ar-360-hide\\\">\\n            <button type=\\\"button\\\" (click)=\\\"openAddSalaryModal($event)\\\" class=\\\"btn btn-icon\\\"\\n                    aria-label=\\\"Задать зарплату\\\">\\n              <clr-icon shape=\\\"ruble\\\"></clr-icon>\\n            </button>\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"{{filterMode ? 'btn btn-icon btn-danger' : 'btn btn-icon'}}\\\"\\n                  (click)=\\\"filterWishes()\\\" aria-label=\\\"Поиск\\\">\\n            <clr-icon shape=\\\"search\\\"></clr-icon>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"{{filterMode ? 'btn btn-icon btn-danger' : 'btn btn-icon'}}\\\"\\n                  (click)=\\\"isSummInfoForm = true\\\" aria-label=\\\"Итоги\\\">\\n            <clr-icon shape=\\\"help\\\"></clr-icon>\\n          </button>\\n\\n          <clr-dropdown>\\n            <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" aria-label=\\\"Режимы\\\" clrDropdownTrigger>\\n              <clr-icon shape=\\\"eye\\\"></clr-icon>\\n              <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n            </button>\\n            <clr-dropdown-menu clrPosition=\\\"bottom-right\\\" *clrIfOpen>\\n              <label class=\\\"dropdown-header\\\">Режим отображения</label>\\n              <a *ngFor=\\\"let item of filterTypes\\\" (click)=\\\"changeFilter(item)\\\" clrDropdownItem>{{item}}</a>\\n            </clr-dropdown-menu>\\n          </clr-dropdown>\\n\\n          <div class=\\\"ar-475-hide\\\">\\n\\n            <clr-dropdown>\\n              <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" aria-label=\\\"Сортировка\\\" clrDropdownTrigger>\\n                <clr-icon shape=\\\"sort-by\\\"></clr-icon>\\n                <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n              </button>\\n              <clr-dropdown-menu *clrIfOpen>\\n                <label class=\\\"dropdown-header\\\">Сортировка</label>\\n                <a *ngFor=\\\"let item of mainSort\\\" (click)=\\\"sortMainList(item)\\\" clrDropdownItem>{{item}}</a>\\n              </clr-dropdown-menu>\\n            </clr-dropdown>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </clr-dg-action-bar>\\n\\n  <clr-dg-column>Желание</clr-dg-column>\\n  <clr-dg-column>Цена</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"20\\\" class=\\\"hidden-md-down\\\">Приоритет</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">.</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">.</clr-dg-column>\\n  <clr-dg-column [style.width.px]=\\\"10\\\" class=\\\"hidden-md-down\\\">Ред.</clr-dg-column>\\n\\n  <clr-dg-row *clrDgItems=\\\"let item of asyncWishList | async\\\" [clrDgItem]=\\\"item\\\">\\n    <clr-dg-cell><a (click)=\\\"openEditWish($event, item, 1)\\\">{{item.wish}}</a></clr-dg-cell>\\n    <clr-dg-cell style=\\\"text-align: center\\\">{{item.price | number:'2.'}}</clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">{{item.priority}}</clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n      <clr-icon shape=\\\"upload\\\" (click)=\\\"changePriority(item, 'down')\\\"></clr-icon>\\n    </clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n      <clr-icon shape=\\\"download\\\" (click)=\\\"changePriority(item, 'up')\\\"></clr-icon>\\n    </clr-dg-cell>\\n    <clr-dg-cell class=\\\"hidden-md-down\\\" style=\\\"text-align: center\\\">\\n      <clr-icon shape=\\\"edit\\\" (click)=\\\"openEditWish($event, item, 1)\\\"></clr-icon>\\n    </clr-dg-cell>\\n  </clr-dg-row>\\n\\n  <clr-dg-footer>\\n    <div class=\\\"clr-row\\\">\\n      <div class=\\\"ar-900-hide\\\">\\n      <span class=\\\"label label-danger\\\" style=\\\"margin-left: 1%\\\">ИТОГО<span\\n        class=\\\"badge badge-orange\\\">{{summAll | number:'2.'}} руб.</span></span>\\n        <span class=\\\"label label-danger\\\">Реализация<span class=\\\"badge badge-danger\\\">{{periodAll}} мес.</span></span>\\n        <span class=\\\"label label-success\\\">ИТОГО (PRIOR)<span class=\\\"badge badge-orange\\\">{{summPriority | number:'2.'}}\\n          руб.</span></span>\\n        <span class=\\\"label label-success\\\">Реализация<span\\n          class=\\\"badge badge-success\\\">{{periodPriority}} мес.</span></span>\\n        <span class=\\\"label label-gray\\\">Среднее время<span\\n          class=\\\"badge badge-blue\\\">{{implementationPeriod}}</span></span>\\n      </div>\\n\\n      <div>\\n        <clr-dg-pagination #pagination [clrDgPageSize]=\\\"15\\\">\\n          <clr-dg-page-size [clrPageSizeOptions]=\\\"[3,5,10,15,30,50,100]\\\" class=\\\"ar-475-hide\\\" style=\\\"margin-left: 4%\\\">\\n            жел/стр.\\n          </clr-dg-page-size>\\n          <span class=\\\"ar-360-hide\\\"> {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\\n            из {{pagination.totalItems}} жел.</span>\\n        </clr-dg-pagination>\\n      </div>\\n    </div>\\n\\n  </clr-dg-footer>\\n</clr-datagrid>\\n\\n<!--    МОДАЛ С ДОБАВЛЕНИЕМ / РЕДАКТИРОВАНИЯ ЖЕЛАНИЯ -->\\n\\n<app-ar-modal id=\\\"add-edit-wish\\\" *ngIf=\\\"isEdit\\\" >\\n  <h3 class=\\\"modal-title\\\">{{isEditMode ? 'Редактировать желание' : 'Добавить желание'}}</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"form\\\">\\n\\n      <!--ПОЛЕ ДАТА СОЗДАНИЯ-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"creationDate\\\" class=\\\"input-label clr-col-12\\\">Дата создания</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"creationDate\\\" id=\\\"creationDate\\\" name=\\\"creationDate\\\"\\n               autocomplete=\\\"off\\\" readonly\\n               size=\\\"50\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ID-->\\n\\n      <clr-input-container hidden>\\n        <label #label for=\\\"id\\\" class=\\\"input-label clr-col-12\\\">id</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"id\\\" id=\\\"id\\\" name=\\\"id\\\" autocomplete=\\\"off\\\" readonly required\\n               size=\\\"50\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ИМЯ-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"name\\\" class=\\\"input-label clr-col-12\\\">Название</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"name\\\"\\n               id=\\\"name\\\"\\n               name=\\\"name\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ ОПИСАНИЕ-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"description\\\" class=\\\"input-label clr-col-12\\\">Описание</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"description\\\"\\n               id=\\\"description\\\"\\n               name=\\\"description\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ URL-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"url\\\" class=\\\"input-label clr-col-12\\\">URL</label>\\n        <input type=\\\"url\\\"\\n               clrInput\\n               formControlName=\\\"url\\\"\\n               id=\\\"url\\\"\\n               name=\\\"url\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ PRIORITY-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"priority\\\" class=\\\"input-label clr-col-12\\\">Приоритет</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"priority\\\"\\n               id=\\\"priority\\\"\\n               name=\\\"priority\\\"\\n               autocomplete=\\\"off\\\">\\n        <clr-control-error *clrIfError=\\\"'required'\\\">Обязательно для заполнения</clr-control-error>\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ PRICE-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"price\\\" class=\\\"input-label clr-col-12\\\">Цена</label>\\n        <input type=\\\"text\\\"\\n               clrInput\\n               formControlName=\\\"price\\\"\\n               id=\\\"price\\\"\\n               name=\\\"price\\\"\\n               autocomplete=\\\"off\\\">\\n      </clr-input-container>\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"addEditWish()\\\" class=\\\"btn btn-primary mt-1\\\">Сохранить</button>\\n      <button type=\\\"button\\\" (click)=\\\"deleteWish()\\\" *ngIf=\\\"isEditMode\\\" class=\\\"btn btn-danger mt-1\\\">Удалить</button>\\n      <button type=\\\"button\\\" (click)=\\\"realizeWish()\\\" *ngIf=\\\"isEditMode\\\" class=\\\"btn btn-success mt-1\\\">Реализовано</button>\\n      <button type=\\\"button\\\" (click)=\\\"closeAddEditWish()\\\" class=\\\"btn btn-secondary mt-1\\\">Закрыть</button>\\n    </div>\\n\\n  </div>\\n</app-ar-modal>\\n\\n<!--    МОДАЛ ДОБАВЛЕНИЯ ЗАРПЛАТЫ -->\\n\\n<app-ar-modal id=\\\"add-salary\\\" *ngIf=\\\"isSalaryAdd\\\">\\n  <h3 class=\\\"modal-title\\\">Добавить зарплату</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"salaryForm\\\">\\n\\n      <!--ПОЛЕ SALARY-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"salary\\\" class=\\\"input-label clr-col-12\\\">Зарплата</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"salary\\\" id=\\\"salary\\\" name=\\\"salary\\\" autocomplete=\\\"off\\\" required\\n               size=\\\"100\\\">\\n      </clr-input-container>\\n\\n      <!--ПОЛЕ RESIDUAL SALARY-->\\n      <clr-input-container>\\n        <label #label for=\\\"residualSalary\\\" class=\\\"input-label clr-col-12\\\">Остаточная зарплата</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"residualSalary\\\" id=\\\"residualSalary\\\" name=\\\"residualSalary\\\"\\n               autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n      <br/>\\n      <span\\n        class=\\\"label label-warning\\\">Зарплата, которая остается у вас после всех трат. Расчет идет именно по ней.</span>\\n    </form>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"addSalary()\\\" class=\\\"btn btn-primary mt-1\\\">Добавить</button>\\n      <button type=\\\"button\\\" (click)=\\\"closeSalaryModal()\\\" class=\\\"btn btn-secondary mt-1\\\">Закрыть</button>\\n    </div>\\n  </div>\\n</app-ar-modal>\\n\\n<!-- МОДАЛ ПОИСКА -->\\n\\n<app-ar-modal id=\\\"search-modal\\\" *ngIf=\\\"isFilterModal\\\">\\n  <h3 class=\\\"modal-title\\\">Фильтры и поиск</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"filterForm\\\">\\n\\n      <!-- ПОЛЕ ПОИСКА / ФИЛЬТРАЦИИ ПО ЖЕЛАНИЮ -->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"wish\\\" class=\\\"input-label clr-col-12\\\">Желание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"wish\\\" id=\\\"wish\\\" name=\\\"wish\\\" autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n    </form>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"applyFilter()\\\" class=\\\"btn btn-primary mt-1\\\">Фильтровать</button>\\n      <button type=\\\"button\\\" (click)=\\\"closeSearchModal()\\\" class=\\\"btn btn-secondary mt-1\\\">Закрыть</button>\\n    </div>\\n  </div>\\n</app-ar-modal>\\n\\n\\n<clr-modal [(clrModalOpen)]=\\\"isCsvParse\\\">\\n  <h3 class=\\\"modal-title\\\">Парсинг csv-файла</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"csvForm\\\">\\n\\n      <!--ПОЛЕ FILE-->\\n\\n      <clr-input-container>\\n        <label #label for=\\\"csvfile\\\" class=\\\"input-label clr-col-12\\\">Укажите csv-файл</label>\\n        <input type=\\\"file\\\" clrInput formControlName=\\\"csvfile\\\" id=\\\"csvfile\\\" name=\\\"csvfile\\\" autocomplete=\\\"off\\\" required size=\\\"100\\\">\\n      </clr-input-container>\\n      <form [formGroup]=\\\"uploadForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <input type=\\\"file\\\" name=\\\"profile\\\" (change)=\\\"onFileSelect($event)\\\"/>\\n        <div>\\n          <button type=\\\"submit\\\">Upload</button>\\n        </div>\\n      </form>\\n    </form>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"sendCsvFile()\\\" class=\\\"btn btn-primary mt-1\\\">Парсить</button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\\n<!--ФОРМА ВЫВОДА ИТОГОВЫХ ДАННЫХ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isSummInfoForm\\\">\\n  <h3 class=\\\"modal-title\\\">ИТОГО</h3>\\n  <div class=\\\"modal-body\\\">\\n\\n    <div>\\n      <span class=\\\"label label-danger\\\">ВСЕ ЖЕЛАНИЯ <span\\n        class=\\\"badge badge-orange\\\">{{summAll | number:'2.'}} руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-danger\\\">Реализация<span class=\\\"badge badge-danger\\\">{{periodAll}} мес.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-success\\\">ИТОГО (PRIOR)<span class=\\\"badge badge-orange\\\">{{summPriority | number:'2.'}}\\n        руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-success\\\">Реализация<span\\n        class=\\\"badge badge-success\\\">{{periodPriority}} мес.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-gray\\\">Среднее время<span class=\\\"badge badge-blue\\\">{{implementationPeriod}}\\n        дней.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-purple\\\">Реализовано за все время<span class=\\\"badge badge-blue\\\">{{implemetedSummAllTime}}\\n        руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-purple\\\">Зарплата<span class=\\\"badge badge-blue\\\">{{lastSalary}}\\n        руб.</span></span>\\n    </div>\\n    <div>\\n      <span class=\\\"label label-light-blue\\\">Реализовано за тек.месяц<span\\n        class=\\\"badge badge-blue\\\">{{implemetedSummMonth}} руб.</span></span>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"isSummInfoForm=false\\\" class=\\\"btn btn-primary mt-1\\\">Закрыть</button>\\n    </div>\\n\\n\\n  </div>\\n</clr-modal>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../../service/http.service';\nimport {Wish} from '../../../dto/wish';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subject, throwError, timer} from 'rxjs';\nimport {Subscription} from 'rxjs/Subscription';\nimport {catchError, tap} from 'rxjs/operators';\nimport {Salary} from '../../../dto/salary';\nimport {HttpParams} from '@angular/common/http';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {environment} from '../../../../environments/environment';\nimport {DatePipe} from '@angular/common';\nimport {SearchRq} from '../../../dto/searchwishes';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: 'main.component.html',\n  providers: [HttpService, DatePipe],\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  // --------------------------------- URL'ы -------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  myBaseUrl = this.SERVER_URL + '/rest/wishes';\n  apiUrl = this.myBaseUrl; // все желания // основная ссылка на api\n  priorityWishesFilterUrl = this.myBaseUrl + '?filter=PRIOR'; // приоритетные желания\n  allWishesFilterUrl = this.myBaseUrl + '?filter=ALL'; // все желания\n  clearWishesFilterUrl = this.myBaseUrl + '?filter=NONE'; // очистить фильтр желаний\n  sortWishesByNameUrl = this.myBaseUrl + '?sort=NAME'; // очистить фильтр желаний\n  sortWishesByPriceAscUrl = this.myBaseUrl + '?sort=PRICE_ASC'; // очистить фильтр желаний\n  sortWishesByPriceDescUrl = this.myBaseUrl + '?sort=PRICE_DESC'; // очистить фильтр желаний\n  sortWishesByPriorityUrl = this.myBaseUrl + '?sort=PRIOR'; // очистить фильтр желаний\n  wishesWithoutSortUrl = this.myBaseUrl + '?sort=ALL'; // очистить фильтр желаний\n  apiGetSumm = this.myBaseUrl + '/summ'; // ссылка для получения сумм\n  apiSalary = this.myBaseUrl + '/salary'; // ссылка для получения сумм\n  parseUrl = this.myBaseUrl + '/parsecsv'; // url для парсинга csv\n  changePriorityUrl = this.myBaseUrl + '/changepriority'; // url для быстрого изменения приоритета\n  searchWishesUrl = this.myBaseUrl + '/filter'; // поиск желаний\n\n\n  // --------------------------------- ПЕРЕМЕННЫЕ -------------------------------------\n\n  cryptokey = ''; // пользовательский ключ шифрования\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n  summAll = 0; // отображение сум по всем желаниям\n  summPriority = 0; // отображение сум по приоритетным желаниям\n  periodAll = 0; // период реализации для всего\n  periodPriority = 0; // период реализации для приоритетного\n  implementationPeriod = ''; // средний период реализации желаний\n  implemetedSummAllTime = ''; // общая сумма реализованного за все время\n  implemetedSummMonth = ''; // общая сумма реализованного за текущий месяц\n\n\n  filterMode = false; // период реализации для приоритетного\n  filterButtonText = 'ПОИСК/ФИЛЬТР'; // период реализации для приоритетного\n  monthOrdermode = false; // режим отображение дерева группировки по месяцам\n  isSalaryExists = false;\n  lastSalary = 0;\n  curDateFormated = '';\n\n// --------------------------------- ВКЛЮЧЕНИЕ МОДАЛОВ -------------------------------------\n\n  isEdit: boolean; // режим редактирования для отображения / или чтобы спрятать модальное окно\n  isSalaryAdd: boolean; // режим добавления зп\n  isEditMode = false; // редактировать или добавить\n  isCsvParse = false; // отправить на парсинг csv\n  isFilterModal: boolean; // вывести модал поиска\n  isSummInfoForm = false; // вывод формы с итоговой информацией (сумма всех желаний, время реализации)\n\n  // --------------------------------- ХРАНИЛИЩА -------------------------------------\n\n  asyncWishList: Subject<Wish[]> = new Subject(); // асинхронный контейнер желаний\n  filterTypes = ['Все', 'Приоритет', 'Очистить фильтр']; // фильтры\n  mainSort = ['По имени', 'По сумме [1..10]', 'По сумме [10..1]', 'По приоритету', 'Без сортировки']; // сортировка помесячной группировки\n\n  // --------------------------------- ТЕКУЩИЙ ПОЛЬЗОВАТЕЛЬ И ЕГО ДАННЫЕ -------------------------------------\n\n  isUserCrypto: boolean;\n  userRole: string;\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  // --------------------------------- ФОРМЫ -------------------------------------\n  uploadForm: FormGroup; // Основная форма добавления / редактирования желаний\n  form = this.fb.group({\n    id: ['', []],\n    name: ['', [\n      Validators.required,\n      Validators.maxLength(160),\n    ]],\n    description: ['', []],\n    url: ['', []],\n    priority: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    price: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    creationDate: ['', []]\n  });\n\n  salaryForm = this.fb.group({ // форма ввода / редактирования зарплаты\n    salary: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]],\n    residualSalary: ['', [\n      Validators.required,\n      Validators.pattern(/^[0-9]+$/)\n    ]]\n  });\n\n  csvForm = this.fb.group({ // форма парсинга csv\n    csvfile: ['', []]\n  });\n\n  filterForm = this.fb.group({ // форма включения / выклюяения фильтров\n    wish: ['', [\n      Validators.required\n    ]]\n  });\n\n  constructor(private commonService: CommonService, private httpService: HttpService, private fb: FormBuilder,\n              private datePipe: DatePipe) {\n    this.curDateFormated = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n  }\n\n  ngOnInit() {\n\n    this.getWishes(this.apiUrl);\n    this.uploadForm = this.fb.group({\n      profile: ['']\n    });\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n\n      if (error == null) {\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n      } else {\n        this.globalError = error;\n        this.isEdit = false;\n        this.isSalaryAdd = false;\n\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n          this.getWishes(this.apiUrl);\n\n        } else if (this.globalError.messageType === this.globalError.USER_DATA_CHANGE_OK) {\n          this.isEdit = false;\n          this.isSalaryAdd = false;\n          this.isCsvParse = false;\n          this.result = this.globalError.USER_DATA_CHANGE_OK;\n\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n\n        } else {\n          this.error = error.messageType;\n          timer(4000).subscribe(() => {\n            this.error = null;\n          });\n        }\n      }\n    });\n\n    // Закрываем пункт меню группировки по месяцам если нет зарплат\n\n    if (this.isSalaryExists) {\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр']; // фильтры\n    } else {\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр']; // фильтры\n    }\n  }\n\n  /**\n   * Изменить сортировку основной таблицы\n   *\n   * item - тип сортировки.\n   */\n  sortMainList(item: string) {\n\n    if (item === 'По имени') {\n      this.getWishes(this.sortWishesByNameUrl);\n    } else if (item === 'По сумме [1..10]') {\n      this.getWishes(this.sortWishesByPriceAscUrl);\n    } else if (item === 'По сумме [10..1]') {\n      this.getWishes(this.sortWishesByPriceDescUrl);\n    } else if (item === 'По приоритету') {\n      this.getWishes(this.sortWishesByPriorityUrl);\n    } else {\n      this.getWishes(this.wishesWithoutSortUrl);\n    }\n  }\n\n  /**\n   * Фильтрация списка желаний: ALL / PRIOR / NONE\n   * item - выбранный тип фильтрации\n   */\n  changeFilter(item: string) {\n\n    if (item === 'Все') {\n      this.getWishes(this.allWishesFilterUrl);\n    } else if (item === 'Очистить фильтр') {\n      this.getWishes(this.clearWishesFilterUrl);\n    } else {\n      this.getWishes(this.priorityWishesFilterUrl);\n    }\n  }\n\n  // Загрузить все желания в табличном режиме.\n  getWishes(url: string) {\n\n    this.httpService.getData(url).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить желания!');\n      })\n    ).subscribe(data => {\n      this.asyncWishList.next(data.list);\n    });\n\n    this.httpService.getData(this.apiGetSumm).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно посчитать итоговые стоимости!');\n      })\n    ).subscribe(data => {\n      this.summAll = data.all;\n      this.summPriority = data.priority;\n      this.periodAll = data.allPeriodForImplementation;\n      this.periodPriority = data.priorityPeriodForImplementation;\n      this.implementationPeriod = data.averageImplementationTime;\n      this.implemetedSummAllTime = data.implemetedSummAllTime;\n      this.implemetedSummMonth = data.implemetedSummMonth;\n      this.isSalaryExists = true;\n      this.lastSalary = data.lastSalary;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр'];\n      console.log('Sal: ' + data.lastSalary);\n    });\n  }\n\n  /**\n   * Поиск желаний.\n   */\n  searchWishes() {\n\n    const payload = new SearchRq(this.filterForm.value.wish);\n    this.closeSearchModal();\n    this.httpService.searchWishes(payload, this.searchWishesUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно найти желания!');\n      })\n    ).subscribe(data => {\n      this.asyncWishList.next(data.list);\n    });\n  }\n\n  deleteWish() {\n    this.httpService.deleteWish(this.form.value.id, this.myBaseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно удалить желание!');\n      })\n    ).subscribe(res => {\n        this.showAlert('Желание с id [' + this.form.value.id + '] успешно удалено!', 'ADD MODE', res);\n      });\n  }\n\n  errorHandler(err, message: string) {\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    console.log('error - ' + err.error);\n    if (err.error === 'ERR-01') {\n      this.error = 'У вас нет сохраненных зарплат! Невозможно посчитать сроки реализации! Добавьте хотя бы одну зарплату!';\n      this.isSalaryExists = false;\n      // this.wishes = null;\n      this.asyncWishList = null;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр'];\n    } else if (err.error === 'ERR-02') {\n      this.error = 'У вас нет сохраненных желаний! Добавьте хотя бы одно желание!';\n      this.isSalaryExists = false;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр'];\n    } else {\n      this.error = message;\n    }\n    console.log(err);\n    timer(4000).subscribe(() => {\n      this.error = null;\n    });\n    return throwError(err);\n  }\n\n  openEditWish(event: any, item: Wish, isedit: number) {\n\n      this.isEdit = true;\n      if (isedit === 1) {\n        this.isEditMode = true;\n        this.form.patchValue({\n          id: item.id,\n          name: item.wish,\n          description: item.description,\n          url: item.url,\n          priority: item.priority,\n          price: item.price,\n          creationDate: item.creationDate\n        });\n      } else {\n        this.isEditMode = false;\n        this.form.patchValue({\n          id: 1,\n          name: '',\n          description: 'какое-то описание',\n          url: '',\n          priority: 1,\n          price: 0,\n          creationDate: this.curDateFormated\n        });\n      }\n  }\n\n  onFileSelect(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.uploadForm.get('profile').setValue(file);\n    }\n  }\n\n  // Отправить файл на парсинг\n  onSubmit() {\n    const formData = new FormData();\n    formData.append('csvfile', this.uploadForm.get('profile').value);\n    console.log(this.uploadForm.get('profile').value);\n    this.httpService.sendFile(formData, this.parseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно спарсить файл !');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Парсинг выполнен! Добавлено: ' + res.itemsAdded + ' желаний!', 'PARSE MODE', res);\n    });\n\n  }\n\n  // Открыть диалог выбора csv-файла для парсинга на сервере.\n  openParseCsv(event: any) {\n    this.isCsvParse = true;\n  }\n\n  // Добавить в Мультипар-форму подгруженый csv-файл\n  sendCsvFile() {\n    const reader = new FileReader();\n    const file = this.csvForm.value.csvfile;\n    reader.readAsArrayBuffer(file);\n    console.log(file.name);\n    this.isCsvParse = false;\n  }\n\n  openAddSalaryModal(event: any) {\n\n    this.isSalaryAdd = true;\n    this.isEditMode = false;\n    this.isEditMode = false;\n\n    this.salaryForm.patchValue({\n      salary: 1,\n      residualSalary: 1\n    });\n  }\n\n  showAlert(text: string, mode: string, result: any) {\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    this.isCsvParse = false;\n    this.result = text;\n    timer(4000).subscribe(() => {\n      this.result = null;\n    });\n  }\n\n  addSalary() {\n    const salary = new Salary(this.salaryForm.value.salary, this.salaryForm.value.residualSalary);\n    this.closeSalaryModal();\n    this.httpService.sendSalary(salary, this.apiSalary).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно добавить зарплату!');\n      })\n    ).subscribe(hero => {\n      this.showAlert('Зарплата успешно обновлена!', 'ADD MODE', hero);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n  realizeWish() {\n    const wish = new Wish(this.form.value.id,\n      this.form.value.name,\n      this.form.value.price,\n      this.form.value.priority,\n      false,\n      this.form.value.description,\n      this.form.value.url,\n      true\n    );\n\n    this.httpService.updateWish(wish, this.myBaseUrl).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно обновить желание!');\n      })\n    ).subscribe(hero => {\n      this.showAlert('Желание с id [' + wish.id + '] успешно обновлено!', 'ADD MODE', hero);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n\n  addEditWish() {\n\n    const wish = new Wish(this.form.value.id,\n      this.form.value.name,\n      this.form.value.price,\n      this.form.value.priority,\n      false,\n      this.form.value.description,\n      this.form.value.url,\n      false\n    );\n\n    if (!this.cryptokey) {\n      console.log('cryptokey is null. Try to fix it');\n      this.cryptokey = localStorage.getItem('cryptokey');\n    }\n\n    if (this.isUserCrypto) {\n      wish.wish = this.commonService.convertText('encrypt', wish.wish, this.cryptokey);\n      wish.description = this.commonService.convertText('encrypt', wish.description, this.cryptokey);\n      wish.url = this.commonService.convertText('encrypt', wish.url, this.cryptokey);\n      console.log('encrypted wish', wish.wish);\n    }\n\n    if (this.isEditMode) {\n      this.httpService.updateWish(wish, this.myBaseUrl).pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'Невозможно обновить желание!');\n        })\n      ).subscribe(hero => {\n        this.showAlert('Желание с id [' + wish.id + '] успешно обновлено!', 'ADD MODE', hero);\n        this.getWishes(this.apiUrl);\n      });\n\n    } else {\n      this.httpService.sendData(wish, this.myBaseUrl).pipe(\n        catchError(err => {\n          return this.errorHandler(err, 'Невозможно добавить желание!');\n        })\n      ).subscribe(hero => {\n        this.showAlert('Желание успешно добавлено!', 'ADD MODE', hero);\n        this.getWishes(this.apiUrl);\n      });\n    }\n  }\n\n  changePriority(item: Wish, move: string) {\n\n    console.log('change priority');\n    console.log('URL ->' + this.changePriorityUrl + '/' + item.id + '/' + move);\n    this.httpService.getData(this.changePriorityUrl + '/' + item.id + '/' + move).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен на ' + res.priority, 'ADD MODE', res);\n      this.getWishes(this.apiUrl);\n    });\n  }\n\n  // Показать окно включения/выключения фильтров\n  filterWishes() {\n    if (!this.filterMode) {\n      this.isFilterModal = true;\n    } else {\n      this.getWishes(this.apiUrl);\n      this.filterMode = false;\n      this.filterButtonText = 'ПОИСК/ФИЛЬТР';\n    }\n  }\n\n// ЛОГИН и АВТОРИЗАЦИЯ\n  login(login: string, pwd: string) {\n\n    const body = new HttpParams()\n      .set('username', login)\n      .set('password', pwd);\n\n    this.httpService.login(body.toString())\n      .pipe(\n        tap(resp => {\n          console.log('header', resp.headers.get('Authorization'));\n          sessionStorage.setItem('token', resp.headers.get('Authorization'));\n          localStorage.setItem('token', resp.headers.get('Authorization'));\n          console.log('storage', localStorage.getItem('token'));\n        }))\n      .subscribe();\n  }\n\n  /**\n   * Поиск желаний. Действие после нажатие кнопки Найти в модальном окне.\n   */\n  applyFilter() {\n    this.filterMode = true; // включаем filtermode\n    this.filterButtonText = 'ВЫКЛЮЧИТЬ ФИЛЬТР';\n    this.searchWishes();\n  }\n\n  /**\n   * Закрыть модал добавления / изменения желания.\n   */\n  closeAddEditWish() {\n    this.isEdit = null;\n  }\n\n\n  /**\n   * Закрыть модал добавления зарплаты\n   */\n  closeSalaryModal() {\n    this.isSalaryAdd = false;\n  }\n\n  /**\n   * Закрыть модал поиска\n   */\n  closeSearchModal() {\n    this.isFilterModal = null;\n  }\n}\n","module.exports = \"\\n::ng-deep clr-icon:hover {\\n  transform: scale(1.2);\\n\\n}\\n\\n.dropdown .dropdown-toggle {\\n  margin: 5px;\\n}\\n\\n.sumallrow {\\n  background-color: #790909;\\n  color: #ffffff;\\n}\\n\\n::ng-deep  .main-container {\\n}\\n\\n.sumpriorrow {\\n  background-color: #299834;\\n  color: #ffdb51;\\n\\n}\\n\\n@media screen and (min-width: 1447px) {\\n  .ar-900-show {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 1447px) {\\n  .ar-900-hide {\\n    display:none!important;\\n  }\\n  .ar-900-show {\\n    display:initial!important;\\n  }\\n}\\n\\n@media screen and (max-width: 475px) {\\n  .ar-475-hide {\\n    display:none!important;\\n  }\\n\\n  .string-truncate {\\n    width: 120px;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n  }\\n\\n}\\n\\n@media screen and (min-width: 475px) {\\n  .ar-475-show {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 360px) {\\n  .ar-360-hide {\\n    display:none!important;\\n  }\\n}\\n\\n@media screen and (max-width: 500px){\\n\\n  .table tr td:nth-child(3),\\n  .table tr th:nth-child(3) {\\n    display: none;\\n  }\\n  .table tr td:nth-child(4),\\n  .table tr th:nth-child(4) {\\n    display: none;\\n  }\\n\\n  .table tr td:nth-child(5),\\n  .table tr th:nth-child(5) {\\n    display: none;\\n  }\\n\\n  .table tr td:nth-child(6),\\n  .table tr th:nth-child(6) {\\n    display: none;\\n  }\\n\\n}\\n\\n.fas .fa-arrow-up{\\n  background: #0c5460;\\n}\\n\\n.fa, .fas:hover {\\n  background: aqua;\\n}\\n\\n:host{\\n\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L21vbnRoZ3JvdXBpbmcvbW9udGhncm91cGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUdFLHFCQUFxQjs7QUFFdkI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsY0FBYztBQUNoQjs7QUFFQTtBQUNBOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGNBQWM7O0FBRWhCOztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7QUFDRjs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0VBQ0E7SUFDRSx5QkFBeUI7RUFDM0I7QUFDRjs7QUFFQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsdUJBQXVCO0VBQ3pCOztBQUVGOztBQUVBO0VBQ0U7SUFDRSxzQkFBc0I7RUFDeEI7QUFDRjs7QUFJQTtFQUNFO0lBQ0Usc0JBQXNCO0VBQ3hCO0FBQ0Y7O0FBRUE7O0VBRUU7O0lBRUUsYUFBYTtFQUNmO0VBQ0E7O0lBRUUsYUFBYTtFQUNmOztFQUVBOztJQUVFLGFBQWE7RUFDZjs7RUFFQTs7SUFFRSxhQUFhO0VBQ2Y7O0FBRUY7O0FBR0E7RUFDRSxtQkFBbUI7QUFDckI7O0FBSUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBQ0E7O0FBRUEiLCJmaWxlIjoic3JjL2FwcC91aS9sYXlvdXQvbW9udGhncm91cGluZy9tb250aGdyb3VwaW5nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbjo6bmctZGVlcCBjbHItaWNvbjpob3ZlciB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XG5cbn1cblxuLmRyb3Bkb3duIC5kcm9wZG93bi10b2dnbGUge1xuICBtYXJnaW46IDVweDtcbn1cblxuLnN1bWFsbHJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM3OTA5MDk7XG4gIGNvbG9yOiAjZmZmZmZmO1xufVxuXG46Om5nLWRlZXAgIC5tYWluLWNvbnRhaW5lciB7XG59XG5cbi5zdW1wcmlvcnJvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTk4MzQ7XG4gIGNvbG9yOiAjZmZkYjUxO1xuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0NDdweCkge1xuICAuYXItOTAwLXNob3cge1xuICAgIGRpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTQ0N3B4KSB7XG4gIC5hci05MDAtaGlkZSB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxuICAuYXItOTAwLXNob3cge1xuICAgIGRpc3BsYXk6aW5pdGlhbCFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDc1cHgpIHtcbiAgLmFyLTQ3NS1oaWRlIHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG5cbiAgLnN0cmluZy10cnVuY2F0ZSB7XG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgfVxuXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ3NXB4KSB7XG4gIC5hci00NzUtc2hvdyB7XG4gICAgZGlzcGxheTpub25lIWltcG9ydGFudDtcbiAgfVxufVxuXG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgLmFyLTM2MC1oaWRlIHtcbiAgICBkaXNwbGF5Om5vbmUhaW1wb3J0YW50O1xuICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KXtcblxuICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDMpLFxuICAudGFibGUgdHIgdGg6bnRoLWNoaWxkKDMpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC50YWJsZSB0ciB0ZDpudGgtY2hpbGQoNCksXG4gIC50YWJsZSB0ciB0aDpudGgtY2hpbGQoNCkge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAudGFibGUgdHIgdGQ6bnRoLWNoaWxkKDUpLFxuICAudGFibGUgdHIgdGg6bnRoLWNoaWxkKDUpIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLnRhYmxlIHRyIHRkOm50aC1jaGlsZCg2KSxcbiAgLnRhYmxlIHRyIHRoOm50aC1jaGlsZCg2KSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG59XG5cblxuLmZhcyAuZmEtYXJyb3ctdXB7XG4gIGJhY2tncm91bmQ6ICMwYzU0NjA7XG59XG5cblxuXG4uZmEsIC5mYXM6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiBhcXVhO1xufVxuOmhvc3R7XG5cbn1cbiJdfQ== */\"","module.exports = \"<clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n\\n<clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n  <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n  </clr-alert-item>\\n</clr-alert>\\n\\n<div>\\n  <div class=\\\"ar-900-hide\\\">\\n    <button class=\\\"btn btn-secondary\\\" (click)=\\\"getWishesWithMonthGrouping('?sortType=all')\\\"> Обновить</button>\\n    <clr-dropdown>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" clrDropdownTrigger>\\n        СОРТИРОВКА\\n        <clr-icon shape=\\\"caret down\\\"></clr-icon>\\n      </button>\\n      <clr-dropdown-menu *clrIfOpen>\\n        <label class=\\\"dropdown-header\\\">Сортировка</label>\\n        <a *ngFor=\\\"let item of groupMonthSort\\\" (click)=\\\"sortGroupList(item)\\\" clrDropdownItem>{{item}}</a>\\n      </clr-dropdown-menu>\\n    </clr-dropdown>\\n  </div>\\n\\n  <!--КНОПКИ ДЛЯ МОБИЛКИ-->\\n  <div class=\\\"ar-900-show\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-icon\\\" (click)=\\\"getWishesWithMonthGrouping('?sortType=all')\\\"\\n            aria-label=\\\"Обновить\\\">\\n      <clr-icon shape=\\\"refresh\\\"></clr-icon>\\n    </button>\\n  </div>\\n\\n  <clr-tree-node *ngFor=\\\"let month of asyncWishGroups | async\\\" [clrExpanded]=\\\"true\\\">\\n    <span class=\\\"{{month.colorClass}}\\\">{{month.monthName}} <span class=\\\"badge\\\">{{month.sum}}</span></span>\\n    <span [ngClass]=\\\"(month.balance>0)?'badge badge-success':'badge badge-danger'\\\">{{month.balance}}</span>\\n    <span *ngIf=\\\"month.overflow\\\" class=\\\"badge badge-danger\\\">Перебор!</span>\\n    <clr-tree-node *ngFor=\\\"let items of month.wishList\\\">\\n      <a [routerLink]=\\\"\\\" (click)=\\\"editMonthGroupItem(items)\\\">\\n        <div class=\\\"string-truncate\\\">{{items.wish}}</div>\\n      </a>{{'&nbsp;| ' + items.price + ' |'}}\\n      <clr-icon shape=\\\"upload\\\" (click)=\\\"changePriorityMonth(items, 'up')\\\"></clr-icon>\\n      |\\n      <clr-icon shape=\\\"download\\\" (click)=\\\"changePriorityMonth(items, 'down')\\\"></clr-icon>\\n    </clr-tree-node>\\n  </clr-tree-node>\\n</div>\\n\\n<!--ФОРМА РЕДАКТИРОВАНИЯ ЖЕЛАНИЯ ПРИ ПОМЕСЯЧНОЙ ГРУППИРОВКЕ -->\\n\\n<clr-modal [(clrModalOpen)]=\\\"isMonthGroupModeWishEdit\\\">\\n  <h3 class=\\\"modal-title\\\">Изменить порядок желания</h3>\\n  <div class=\\\"modal-body\\\">\\n    <form clrForm [formGroup]=\\\"MonthGroupModeWishEdit\\\">\\n\\n      <!-- ПОЛЕ ЖЕЛАНИЕ -->\\n\\n      <clr-input-container>\\n\\n        <label #label for=\\\"selected_wish\\\" class=\\\"input-label clr-col-12\\\">Желание</label>\\n        <input type=\\\"text\\\" clrInput formControlName=\\\"wish\\\" id=\\\"selected_wish\\\" name=\\\"wish\\\" autocomplete=\\\"off\\\"\\n               required readonly\\n               size=\\\"100%\\\">\\n      </clr-input-container>\\n\\n      <div>\\n        <clr-select-container>\\n          <label #label for=\\\"month_field\\\" class=\\\"input-label clr-col-12\\\">Месяц</label>\\n          <select id=\\\"month_field\\\" formControlName=\\\"month\\\" clrSelect>\\n            <option *ngFor=\\\"let currentMonth of monthList\\\" [value]=\\\"currentMonth\\\">{{currentMonth}}</option>\\n          </select>\\n        </clr-select-container>\\n      </div>\\n\\n    </form>\\n\\n    <div class=\\\"row\\\">\\n      <button type=\\\"button\\\" (click)=\\\"applyMonthChange4Wish()\\\" class=\\\"btn btn-primary mt-1\\\">Принять</button>\\n    </div>\\n  </div>\\n</clr-modal>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {HttpService} from '../../../service/http.service';\nimport {Wish} from '../../../dto/wish';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {Subject, throwError, timer} from 'rxjs';\nimport {Subscription} from 'rxjs/Subscription';\nimport {CommonService} from '../../../service/common.service';\nimport {MessageCode} from '../../../service/message.code';\nimport {WishListGroup} from '../../../dto/wish-list-group';\nimport {environment} from '../../../../environments/environment';\nimport {DatePipe} from '@angular/common';\nimport {catchError} from 'rxjs/operators';\nimport {WishGroupItem} from '../../../dto/wish-group-item';\n\n@Component({\n  selector: 'app-months',\n  templateUrl: 'monthgrouping.component.html',\n  providers: [HttpService, DatePipe],\n  styleUrls: ['./monthgrouping.component.css']\n})\nexport class MonthsComponent implements OnInit {\n\n  // --------------------------------- URL'ы -------------------------------------\n\n  SERVER_URL: string = environment.serverUrl;\n  myBaseUrl = this.SERVER_URL + '/rest/wishes';\n  apiUrl = this.myBaseUrl; // все желания // основная ссылка на api\n  priorityWishesFilterUrl = this.myBaseUrl + '?filter=PRIOR'; // приоритетные желания\n  allWishesFilterUrl = this.myBaseUrl + '?filter=ALL'; // все желания\n  clearWishesFilterUrl = this.myBaseUrl + '?filter=NONE'; // очистить фильтр желаний\n  sortWishesByNameUrl = this.myBaseUrl + '?sort=NAME'; // очистить фильтр желаний\n  sortWishesByPriceAscUrl = this.myBaseUrl + '?sort=PRICE_ASC'; // очистить фильтр желаний\n  sortWishesByPriceDescUrl = this.myBaseUrl + '?sort=PRICE_DESC'; // очистить фильтр желаний\n  sortWishesByPriorityUrl = this.myBaseUrl + '?sort=PRIOR'; // очистить фильтр желаний\n  wishesWithoutSortUrl = this.myBaseUrl + '?sort=ALL'; // очистить фильтр желаний\n  groupWishesUrl = this.myBaseUrl + '/groups';\n  changePriorityMonthUrl = this.myBaseUrl + '/changemonth'; // url для быстрого изменения приоритета\n  changePriorityMonthManualyUrl = this.myBaseUrl + '/transferwish'; // url для быстрого изменения приоритета\n  searchWishesUrl = this.myBaseUrl + '/filter'; // поиск желаний\n\n\n  // --------------------------------- ПЕРЕМЕННЫЕ -------------------------------------\n\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n  implemetedSummAllTime = ''; // общая сумма реализованного за все время\n  implemetedSummMonth = ''; // общая сумма реализованного за текущий месяц\n  monthOrdermode = false; // режим отображение дерева группировки по месяцам\n  isSalaryExists = false;\n  lastSalary = 0;\n  curDateFormated = '';\n\n// --------------------------------- ВКЛЮЧЕНИЕ МОДАЛОВ -------------------------------------\n\n  isEdit: boolean; // режим редактирования для отображения / или чтобы спрятать модальное окно\n  isSalaryAdd: boolean; // режим добавления зп\n  isEditMode = false; // редактировать или добавить\n  isCsvParse = false; // отправить на парсинг csv\n  isFilterModal: boolean; // вывести модал поиска\n  isMonthGroupModeWishEdit = false; // вывод формы редактирования желания при помесячной группировке\n  isSummInfoForm = false; // вывод формы с итоговой информацией (сумма всех желаний, время реализации)\n\n  // --------------------------------- ХРАНИЛИЩА -------------------------------------\n\n  asyncWishList: Subject<Wish[]> = new Subject(); // асинхронный контейнер желаний\n  wishGroups: WishListGroup[] = []; // контейнер желаний\n  asyncWishGroups: Subject<WishListGroup[]> = new Subject(); // асинхронный контейнер желаний с помесячной группировкой\n  monthList = []; // контейнер месяцев\n\n  filterTypes = ['Все', 'Приоритет', 'Очистить фильтр', 'Помесячная группировка']; // фильтры\n  groupMonthSort = ['Без сортировки', 'По имени', 'По сумме [1..10]', 'По сумме [10..1]']; // сортировка помесячной группировки\n\n  // --------------------------------- ТЕКУЩИЙ ПОЛЬЗОВАТЕЛЬ И ЕГО ДАННЫЕ -------------------------------------\n\n  userRole: string;\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  // --------------------------------- ФОРМЫ -------------------------------------\n  MonthGroupModeWishEdit = this.fb.group({ // форма редактирования желания при помесячной группировке\n    id: ['', [\n      Validators.required\n    ]],\n    wish: ['', [\n      Validators.required\n    ]],\n    month: ['', [\n      Validators.required\n    ]]\n  });\n\n  constructor(private commonService: CommonService, private httpService: HttpService, private fb: FormBuilder,\n              private datePipe: DatePipe) {\n    this.curDateFormated = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n  }\n\n  ngOnInit() {\n    this.getWishesWithMonthGrouping('?sortType=all');\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n      } else {\n        this.globalError = error;\n        this.isEdit = false;\n\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n          // this.getWishesWithMonthGrouping('?sortType=all');\n        } else if (this.globalError.messageType === this.globalError.USER_DATA_CHANGE_OK) {\n          this.isEdit = false;\n          this.result = this.globalError.USER_DATA_CHANGE_OK;\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n        } else {\n          this.error = error.messageType;\n          timer(4000).subscribe(() => {\n            this.error = null;\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   *  Получить список желаний, сгруппированный по месяцам.\n   *\n   *  sorting - тип сортировки.\n   */\n  getWishesWithMonthGrouping(sorting: string) {\n\n    this.httpService.getData(this.groupWishesUrl + sorting).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно получить желания!');\n      })\n    ).subscribe(data => {\n      this.asyncWishGroups.next(data.list);\n      this.monthList.length = 0;\n      data.list.forEach((element) => {\n        this.monthList.push(element.monthName + ' ' + element.year);\n        console.log(this.monthList);\n      });\n      this.monthOrdermode = true;\n    });\n  }\n\n  // Применить изменение (месячного) порядка для желания\n  applyMonthChange4Wish() {\n    console.log(this.MonthGroupModeWishEdit.value.month);\n\n    this.httpService.getData(this.changePriorityMonthManualyUrl + '?id=' +\n      this.MonthGroupModeWishEdit.value.id + '&month=' +\n      this.MonthGroupModeWishEdit.value.month).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен! ', 'ADD MODE', res);\n      this.getWishesWithMonthGrouping('?sortType=all');\n      this.isMonthGroupModeWishEdit = false;\n    });\n  }\n\n  // Редактирование желания при помесячной группировке\n  editMonthGroupItem(items: WishGroupItem) {\n    this.isMonthGroupModeWishEdit = true;\n    this.MonthGroupModeWishEdit.patchValue({\n      id: items.id,\n      wish: items.wish\n    });\n  }\n\n\n  // Изменить сортировку помесячной группировки\n  sortGroupList(item: string) {\n    if (item === 'По имени') {\n      this.getWishesWithMonthGrouping('?sortType=name');\n    } else if (item === 'По сумме [1..10]') {\n      this.getWishesWithMonthGrouping('?sortType=price-asc');\n    } else if (item === 'Без сортировки') {\n      this.getWishesWithMonthGrouping('?sortType=all');\n    } else {\n      this.getWishesWithMonthGrouping('?sortType=price-desc');\n    }\n  }\n\n  /**\n   * Обработчик ошибок.\n   *\n   * err\n   * message\n   */\n  errorHandler(err, message: string) {\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    console.log('error - ' + err.error);\n    if (err.error === 'ERR-01') {\n      this.error = 'У вас нет сохраненных зарплат! Невозможно посчитать сроки реализации! Добавьте хотя бы одну зарплату!';\n      this.isSalaryExists = false;\n      this.asyncWishList = null;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр'];\n    } else if (err.error === 'ERR-02') {\n      this.error = 'У вас нет сохраненных желаний! Добавьте хотя бы одно желание!';\n      this.isSalaryExists = false;\n      this.filterTypes = ['Все', 'Приоритет', 'Очистить фильтр'];\n    } else {\n      this.error = message;\n    }\n    console.log(err);\n    timer(4000).subscribe(() => {\n      this.error = null;\n    });\n    return throwError(err);\n  }\n\n  showAlert(text: string, mode: string, result: any) {\n    this.isEdit = false;\n    this.isSalaryAdd = false;\n    this.isCsvParse = false;\n    this.result = text;\n    timer(4000).subscribe(() => {\n      this.result = null;\n    });\n  }\n\n  changePriorityMonth(item: WishGroupItem, move: string) {\n\n    console.log('URL ->' + this.changePriorityMonthUrl + '/' + item.id + '/' + move);\n    this.httpService.getData(this.changePriorityMonthUrl + '/' + item.id + '/' + move).pipe(\n      catchError(err => {\n        return this.errorHandler(err, 'Невозможно изменить приоритет!');\n      })\n    ).subscribe(res => {\n      console.log(res);\n      this.showAlert('Приоритет успешно изменен! ', 'ADD MODE', res);\n      this.getWishesWithMonthGrouping('?sortType=all');\n    });\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ModalService} from '../../../service/modal.service';\n\n@Component({\n  selector: 'app-ar-modal',\n  template:\n    ` <div class=\"modal\">\n          <div class=\"modal-dialog fadeDown in\" role=\"dialog\" aria-hidden=\"true\">\n            <div class=\"modal-content\">\n              <ng-content></ng-content>\n            </div>\n          </div>\n        </div>\n    <div class=\"modal-backdrop fade in\" aria-hidden=\"true\" *ngIf=\"localCondition\"></div>`\n})\nexport class ArModalComponent implements OnInit {\n  @Input() id: string;\n  @Input() condition: boolean;\n  localCondition: boolean;\n\n  constructor(private modalService: ModalService) {\n  }\n\n  ngOnInit(): void {\n    const modal = this;\n    this.localCondition = this.condition;\n    // ensure id attribute exists\n    if (!this.id) {\n      console.error('modal must have an id');\n      return;\n    }\n    if (!this.condition) {\n      this.condition = false;\n    }\n    // add self (this modal instance) to the modal service so it's accessible from controllers\n    this.modalService.add(this);\n  }\n\n  // open modal\n  open(): void {\n    this.localCondition = true;\n  }\n\n  // close modal\n  close(): void {\n    this.localCondition = false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2xheW91dC9zZXNzaW9uLXRpbWVvdXQtbW9kYWwvc2Vzc2lvbi10aW1lb3V0LW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<clr-modal [clrModalOpen]=\\\"userInactive | async\\\" [clrModalClosable]=\\\"false\\\" class=\\\"session-timeout-modal\\\">\\n  <h3 class=\\\"modal-title\\\">\\n    Сессия истекла\\n  </h3>\\n  <div class=\\\"modal-body\\\">\\n    <p>\\n      Ваша сессия истекла! Необходимо войти еще раз!\\n    </p>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\">\\n      Продолжить\\n    </button>\\n  </div>\\n\\n</clr-modal>\\n\"","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, HostListener, Input} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {filter} from 'rxjs/operators';\nimport {MessageCode} from '../../../service/message.code';\nimport {CommonService} from '../../../service/common.service';\n\n\n@Component({\n  selector: 'app-session-timeout-modal',\n  templateUrl: './session-timeout-modal.component.html',\n  styleUrls: ['./session-timeout-modal.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SessionTimeoutModalComponent {\n\n  userActivity;\n\n  sessionTimeout: number = 864000;\n  // sessionTimeout: number = 3;\n  userInactive = new BehaviorSubject(false);\n  consoleWatcher = '';\n\n  constructor(\n    private router: Router,\n    private commonService: CommonService,\n    private cdr: ChangeDetectorRef) {\n    this.router.events\n      .pipe(\n        filter(e => e instanceof NavigationEnd),\n      )\n      .subscribe(() => {\n        clearTimeout(this.userActivity);\n        this.setTimeout();\n\n      });\n\n  }\n\n  setTimeout() {\n\n    if (this.router.url.indexOf('/401') === -1) { // отключаем проверку сессии для 401-й странички\n      this.userActivity = setTimeout(() => this.userInactive.next(true), this.sessionTimeout * 1000);\n    }\n  }\n\n  @HostListener('window:mousemove')\n  @HostListener('window:click')\n  @HostListener('window:keyup')\n  refreshUserState() {\n    clearTimeout(this.userActivity);\n    this.setTimeout();\n  }\n\n  logout() {\n    clearTimeout(this.userActivity);\n\n    localStorage.removeItem('token');\n    this.router.navigate(['401']);\n\n    clearTimeout(this.userActivity);\n    this.userInactive.next(false);\n    this.cdr.markForCheck();\n    const errorType = new MessageCode();\n    this.sendMessagePush();\n  }\n\n  sendMessagePush() {\n    const errorType = new MessageCode();\n    errorType.messageType = errorType.SESSION_EXPIRED;\n    this.commonService.pushError(errorType);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  template: `\n      <clr-vertical-nav [clr-nav-level]=\"1\">\n        <a clrVerticalNavLink routerLink=\"../401\" routerLinkActive=\"active\">О проекте-хуекте</a>\n        <a clrVerticalNavLink routerLink=\"../\" routerLinkActive=\"active\">Главная</a>\n      </clr-vertical-nav>\n  `,\n  styles: []\n})\nexport class SidebarComponent implements OnInit {\n\n  private idToken: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n   this.idToken = localStorage.getItem('token');\n  }\n\n}\n","module.exports = \"@media screen and (max-width: 500px){\\n\\n  .sidenav {\\n    min-width: 1%;\\n    visibility: hidden;\\n    /*background: #ea1e2c;*/\\n  }\\n}\\n\\n:host{\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvbGF5b3V0L3VuYXV0aG9yaXplL3VuYXV0aG9yaXplLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUU7SUFDRSxhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHVCQUF1QjtFQUN6QjtBQUNGOztBQUVBO0FBQ0EiLCJmaWxlIjoic3JjL2FwcC91aS9sYXlvdXQvdW5hdXRob3JpemUvdW5hdXRob3JpemUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDUwMHB4KXtcblxuICAuc2lkZW5hdiB7XG4gICAgbWluLXdpZHRoOiAxJTtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgLypiYWNrZ3JvdW5kOiAjZWExZTJjOyovXG4gIH1cbn1cblxuOmhvc3R7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"content-container\\\">\\n  <div class=\\\"content-area\\\">\\n\\n    <clr-alert [clrAlertType]=\\\"'success'\\\" *ngIf=\\\"result\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{result}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n    <clr-alert [clrAlertType]=\\\"'danger'\\\" *ngIf=\\\"error\\\">\\n      <clr-alert-item>\\n        <span class=\\\"alert-text\\\">\\n            {{error}}\\n        </span>\\n      </clr-alert-item>\\n    </clr-alert>\\n\\n\\n    <h1>Дорогой друг!</h1>\\n    <p>\\n      Сейчас ты находишься на страничке проекта arNote. Это сервис хранения желаний, позволяющий считать сроки реализации, различным образом категорировать и управлять вашими желаниями. Для работы с сервисом необходимо получить логин и пароль от автора сервиса, в будущем будет организована свободная регистрация.\\n    </p>\\n    <p>\\n      Одни из Важных преимуществ сервиса планируется сделать шифрование данных на стороне клиента, что обеспечит полную конфиденциальность. То есть администратор / автор сервиса не сможет прочитать Ваши данные ни при каких обстоятельствах, так как все Ваши записи будет шифрованы по уникальному ключу, который знаете только Вы.\\n    </p>\\n    <p>\\n      По всем вопросам просьба писать автору на <i>antonromanov@list.ru.</i>\\n    </p>\\n\\n  </div>\\n  <!--<app-sidebar class=\\\"sidenav\\\"></app-sidebar>-->\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CommonService} from '../../../service/common.service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MessageCode} from '../../../service/message.code';\nimport {timer} from 'rxjs';\nimport {ActivatedRoute} from '@angular/router';\n\n\n@Component({\n  selector: 'app-unauthorize',\n  templateUrl: './unauthorize.component.html',\n  styleUrls: ['./unauthorize.component.css']\n})\nexport class UnauthorizeComponent implements OnInit {\n\n  error: any; // отображение ошибок в алертах\n  result: any; // отображение результатов в алертах\n\n  private subscription: Subscription;\n  globalError: MessageCode;\n\n  constructor(private commonService: CommonService, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n\n    this.subscription = this.commonService.error$.subscribe(error => {\n      if (error == null) {\n\n        this.globalError = new MessageCode();\n        this.globalError.messageType = 'NO ERRORS';\n\n      } else {\n\n        this.globalError = error;\n        if (this.globalError.messageType === this.globalError.AUTH_LOGIN_OK) {\n        } else if (this.globalError.messageType === this.globalError.REGISTER_OK) {\n          this.result = this.globalError.REGISTER_OK;\n          timer(4000).subscribe(() => {\n            this.result = null;\n          });\n        } else {\n          if (this.globalError.messageType !== this.globalError.SESSION_EXPIRED) {\n            this.error = error.messageType;\n            timer(4000).subscribe(() => {\n              this.error = null;\n            });\n          }\n        }\n      }\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {LayoutComponent} from './layout/layout.component';\nimport {HeaderComponent} from './layout/header/header.component';\nimport {SidebarComponent} from './layout/sidebar/sidebar.component';\nimport {InvestingComponent} from './layout/investing/investing.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ClarityModule} from '@clr/angular';\nimport {MainComponent} from './layout/main/main.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {EditComponent} from './layout/edit/edit.component';\nimport {BasicAuthHtppInterceptorService} from '../service/basicauthhtppInterceptorservice';\nimport {AppRoutingModule} from '../app-routing/app-routing.module';\nimport {UnauthorizeComponent} from './layout/unauthorize/unauthorize.component';\nimport {JwtHelperService, JWT_OPTIONS} from '@auth0/angular-jwt';\nimport {SessionTimeoutModalComponent} from './layout/session-timeout-modal/session-timeout-modal.component';\nimport {ArModalComponent} from './layout/new-modal/ar-modal.component';\nimport {MonthsComponent} from './layout/monthgrouping/monthgrouping.component';\nimport {FinPlanningComponent} from './layout/finplanning/finplanning.component';\n\n\n@NgModule({\n  declarations: [LayoutComponent,\n    HeaderComponent,\n    SidebarComponent,\n    MainComponent,\n    MonthsComponent,\n    FinPlanningComponent,\n    EditComponent,\n    UnauthorizeComponent,\n    InvestingComponent,\n    ArModalComponent,\n    SessionTimeoutModalComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    ClarityModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: BasicAuthHtppInterceptorService, multi: true},\n    {provide: JWT_OPTIONS, useValue: JWT_OPTIONS},\n    JwtHelperService\n  ],\n  exports: [LayoutComponent]\n})\nexport class UiModule {\n}\n","export const environment = {\n  production: true,\n  serverUrl: ''\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}